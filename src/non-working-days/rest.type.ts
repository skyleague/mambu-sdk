/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import AjvValidator from 'ajv'
import type { ValidateFunction } from 'ajv'

type NonWorkingDaysNonWorkingDaysArray = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'

/**
 * Represents the non working days of the organization.
 */
export interface NonWorkingDays {
    /**
     * The non working days of the organization.
     */
    nonWorkingDays: NonWorkingDaysNonWorkingDaysArray[]
}

export const NonWorkingDays = {
    validate: require('./schemas/non-working-days.schema.js') as ValidateFunction<NonWorkingDays>,
    get schema() {
        return NonWorkingDays.validate.schema
    },
    is: (o: unknown): o is NonWorkingDays => NonWorkingDays.validate(o) === true,
    assert: (o: unknown) => {
        if (!NonWorkingDays.validate(o)) {
            throw new AjvValidator.ValidationError(NonWorkingDays.validate.errors ?? [])
        }
    },
} as const

export interface ErrorResponse {
    errors?: RestError[]
}

export const ErrorResponse = {
    validate: require('./schemas/error-response.schema.js') as ValidateFunction<ErrorResponse>,
    get schema() {
        return ErrorResponse.validate.schema
    },
    is: (o: unknown): o is ErrorResponse => ErrorResponse.validate(o) === true,
} as const

export interface RestError {
    errorCode?: number
    errorSource?: string
    errorReason?: string
}
