/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'

export const RestError = z.object({
    errorCode: z.number().int().optional(),
    errorReason: z.string().optional(),
    errorSource: z.string().optional(),
})

export type RestError = z.infer<typeof RestError>

export const AccountingRate = z
    .object({
        encodedKey: z.string().describe('The encoded key of the accounting rate, auto generated, unique').optional(),
        endDate: z.string().datetime({ offset: true }).describe('Rate validity end date (as Organization Time)').optional(),
        fromCurrencyCode: z.string().describe('Organisation currency code').optional(),
        rate: z.number().describe('Value of rate to be used for accounting conversions').optional(),
        startDate: z.string().datetime({ offset: true }).describe('Rate validity start date (as Organization Time)').optional(),
        toCurrencyCode: z.string().describe('Foreign currency code').optional(),
    })
    .describe('Represents the conversion rate used in accounting to convert amounts from one currency to organisation currency')

export type AccountingRate = z.infer<typeof AccountingRate>

export const ErrorResponse = z.object({
    errors: RestError.array().optional(),
})

export type ErrorResponse = z.infer<typeof ErrorResponse>

export const GetAllResponse = AccountingRate.array()

export type GetAllResponse = z.infer<typeof GetAllResponse>

export const PostAccountingRateDTO = z
    .object({
        rate: z
            .number()
            .describe(
                'Value of conversions rate used in accounting to convert amounts from one currency to organisation currency',
            ),
        startDate: z
            .string()
            .datetime({ offset: true })
            .describe('The start date from which the accounting rate will be applied (as Organization time)')
            .optional(),
    })
    .describe('The representation of a payload for creating Accounting Rate')

export type PostAccountingRateDTO = z.infer<typeof PostAccountingRateDTO>
