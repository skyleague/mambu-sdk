/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"OrganizationSetup","type":"object","description":"Response representation of the organization setup details","properties":{"address":{"title":"address","$ref":"#/$defs/Addressaf30"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the organization","format":"date-time"},"currency":{"type":"string","title":"currency","description":"The currency of the organization, must be the same as the existing one"},"dateFormat":{"type":"string","title":"dateFormat","description":"The format used to represent the date"},"dateTimeFormat":{"type":"string","title":"dateTimeFormat","description":"The format used to represent the time and date"},"decimalSeparator":{"title":"decimalSeparator","description":"Symbol used to mark the border between the integral and the fractional parts of a decimal numeral","enum":["COMMA","POINT"]},"emailAddress":{"type":"string","title":"emailAddress","description":"The email address of the organization"},"institutionName":{"type":"string","title":"institutionName","description":"The name of the organization"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the organization","format":"date-time"},"phoneNumber":{"type":"string","title":"phoneNumber","description":"The phone number of the organization"},"timeZoneID":{"type":"string","title":"timeZoneID","description":"The timezone id, must be the same as the existing one"}},"required":["dateFormat","dateTimeFormat","decimalSeparator","institutionName"],"additionalProperties":true,"$defs":{"Addressaf30":{"type":"object","title":"Addressaf30","description":"Represents an address.","properties":{"city":{"type":"string","title":"city","description":"The city for the address."},"country":{"type":"string","title":"country","description":"The country."},"encodedKey":{"type":"string","title":"encodedKey","description":"The address encoded key, which is unique and generated."},"indexInList":{"type":"integer","title":"indexInList","description":"The index of this address in the list of addresses."},"latitude":{"type":"number","title":"latitude","description":"The GPS latitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -90 to +90."},"line1":{"type":"string","title":"line1","description":"The first line of the address."},"line2":{"type":"string","title":"line2","description":"The second line of the address."},"longitude":{"type":"number","title":"longitude","description":"The GPS longitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -180 to +180."},"parentKey":{"type":"string","title":"parentKey","description":"The address parent key indicating the object owning this address. For example: client, centre, or branch."},"postcode":{"type":"string","title":"postcode","description":"The post code."},"region":{"type":"string","title":"region","description":"The region for the address."}},"additionalProperties":true}}};const schema12 = {"type":"object","title":"Addressaf30","description":"Represents an address.","properties":{"city":{"type":"string","title":"city","description":"The city for the address."},"country":{"type":"string","title":"country","description":"The country."},"encodedKey":{"type":"string","title":"encodedKey","description":"The address encoded key, which is unique and generated."},"indexInList":{"type":"integer","title":"indexInList","description":"The index of this address in the list of addresses."},"latitude":{"type":"number","title":"latitude","description":"The GPS latitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -90 to +90."},"line1":{"type":"string","title":"line1","description":"The first line of the address."},"line2":{"type":"string","title":"line2","description":"The second line of the address."},"longitude":{"type":"number","title":"longitude","description":"The GPS longitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -180 to +180."},"parentKey":{"type":"string","title":"parentKey","description":"The address parent key indicating the object owning this address. For example: client, centre, or branch."},"postcode":{"type":"string","title":"postcode","description":"The post code."},"region":{"type":"string","title":"region","description":"The region for the address."}},"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.dateFormat === undefined) && (missing0 = "dateFormat")) || ((data.dateTimeFormat === undefined) && (missing0 = "dateTimeFormat"))) || ((data.decimalSeparator === undefined) && (missing0 = "decimalSeparator"))) || ((data.institutionName === undefined) && (missing0 = "institutionName"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.address !== undefined){let data0 = data.address;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.city !== undefined){const _errs6 = errors;if(typeof data0.city !== "string"){validate10.errors = [{instancePath:instancePath+"/address/city",schemaPath:"#/$defs/Addressaf30/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.country !== undefined){const _errs8 = errors;if(typeof data0.country !== "string"){validate10.errors = [{instancePath:instancePath+"/address/country",schemaPath:"#/$defs/Addressaf30/properties/country/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs10 = errors;if(typeof data0.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/address/encodedKey",schemaPath:"#/$defs/Addressaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.indexInList !== undefined){let data4 = data0.indexInList;const _errs12 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate10.errors = [{instancePath:instancePath+"/address/indexInList",schemaPath:"#/$defs/Addressaf30/properties/indexInList/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data0.latitude !== undefined){let data5 = data0.latitude;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate10.errors = [{instancePath:instancePath+"/address/latitude",schemaPath:"#/$defs/Addressaf30/properties/latitude/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data0.line1 !== undefined){const _errs16 = errors;if(typeof data0.line1 !== "string"){validate10.errors = [{instancePath:instancePath+"/address/line1",schemaPath:"#/$defs/Addressaf30/properties/line1/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data0.line2 !== undefined){const _errs18 = errors;if(typeof data0.line2 !== "string"){validate10.errors = [{instancePath:instancePath+"/address/line2",schemaPath:"#/$defs/Addressaf30/properties/line2/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data0.longitude !== undefined){let data8 = data0.longitude;const _errs20 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate10.errors = [{instancePath:instancePath+"/address/longitude",schemaPath:"#/$defs/Addressaf30/properties/longitude/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data0.parentKey !== undefined){const _errs22 = errors;if(typeof data0.parentKey !== "string"){validate10.errors = [{instancePath:instancePath+"/address/parentKey",schemaPath:"#/$defs/Addressaf30/properties/parentKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}if(valid2){if(data0.postcode !== undefined){const _errs24 = errors;if(typeof data0.postcode !== "string"){validate10.errors = [{instancePath:instancePath+"/address/postcode",schemaPath:"#/$defs/Addressaf30/properties/postcode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs24 === errors;}else {var valid2 = true;}if(valid2){if(data0.region !== undefined){const _errs26 = errors;if(typeof data0.region !== "string"){validate10.errors = [{instancePath:instancePath+"/address/region",schemaPath:"#/$defs/Addressaf30/properties/region/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs26 === errors;}else {var valid2 = true;}}}}}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/address",schemaPath:"#/$defs/Addressaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs28 = errors;if(errors === _errs28){if(errors === _errs28){if(!(typeof data.creationDate === "string")){validate10.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.currency !== undefined){const _errs30 = errors;if(typeof data.currency !== "string"){validate10.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/properties/currency/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.dateFormat !== undefined){const _errs32 = errors;if(typeof data.dateFormat !== "string"){validate10.errors = [{instancePath:instancePath+"/dateFormat",schemaPath:"#/properties/dateFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.dateTimeFormat !== undefined){const _errs34 = errors;if(typeof data.dateTimeFormat !== "string"){validate10.errors = [{instancePath:instancePath+"/dateTimeFormat",schemaPath:"#/properties/dateTimeFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.decimalSeparator !== undefined){let data16 = data.decimalSeparator;const _errs36 = errors;if(!((data16 === "COMMA") || (data16 === "POINT"))){validate10.errors = [{instancePath:instancePath+"/decimalSeparator",schemaPath:"#/properties/decimalSeparator/enum",keyword:"enum",params:{allowedValues: schema11.properties.decimalSeparator.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.emailAddress !== undefined){const _errs37 = errors;if(typeof data.emailAddress !== "string"){validate10.errors = [{instancePath:instancePath+"/emailAddress",schemaPath:"#/properties/emailAddress/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs37 === errors;}else {var valid0 = true;}if(valid0){if(data.institutionName !== undefined){const _errs39 = errors;if(typeof data.institutionName !== "string"){validate10.errors = [{instancePath:instancePath+"/institutionName",schemaPath:"#/properties/institutionName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs41 = errors;if(errors === _errs41){if(errors === _errs41){if(!(typeof data.lastModifiedDate === "string")){validate10.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.phoneNumber !== undefined){const _errs43 = errors;if(typeof data.phoneNumber !== "string"){validate10.errors = [{instancePath:instancePath+"/phoneNumber",schemaPath:"#/properties/phoneNumber/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.timeZoneID !== undefined){const _errs45 = errors;if(typeof data.timeZoneID !== "string"){validate10.errors = [{instancePath:instancePath+"/timeZoneID",schemaPath:"#/properties/timeZoneID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;