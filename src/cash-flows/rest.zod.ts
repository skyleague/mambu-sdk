/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
// biome-ignore-all lint: this file is generated
/* eslint-disable */

import { z } from 'zod/v4'

export const CashFlowPoolSettings = z
    .object({
        cashFlowSettingsId: z.number().int().describe('The identifier of the cash flow settings').optional(),
        creationDate: z.iso.datetime({ offset: true }).describe('The creation time of the cash flow pool settings').optional(),
        id: z.number().int().describe('The identifier of the cash flow pool settings').optional(),
        lastModifiedDate: z.iso
            .datetime({ offset: true })
            .describe('The last modified time of the cash flow pool setting')
            .optional(),
        percentage: z.number().describe('The percentage of the income or expense category'),
        poolId: z.number().int().describe('The identifier of the pool').optional(),
    })
    .describe('A cash flow settings')

export type CashFlowPoolSettings = z.infer<typeof CashFlowPoolSettings>

export const CashFlowSettings = z
    .object({
        allocationMethod: z
            .enum(['AVERAGE_BALANCE', 'NUMBER_OF_ACCOUNTS', 'PERCENTAGE'])
            .describe('The allocation method of the cash flow settings'),
        assetGlAccountEncodedKey: z.string().describe('The asset GL account field value of the cash flow settings').optional(),
        cashFlowId: z.number().int().describe('The identifier of the cash flow').optional(),
        creationDate: z.iso.datetime({ offset: true }).describe('The creation time of the cash flow settings').optional(),
        effectiveDate: z.iso.date().describe('The effective date of the cash flow settings'),
        glAccountEncodedKey: z.string().describe('The GL account field value of the cash flow settings').optional(),
        id: z.number().int().describe('The identifier of the cash flow settings').optional(),
        lastModifiedDate: z.iso.datetime({ offset: true }).describe('The last modified time of the cash flow setting').optional(),
        pools: CashFlowPoolSettings.array().describe('The pools associations of the cash flow settings').optional(),
        source: z.enum(['ISLAMIC_FINANCE', 'OTHERS']).describe('The source of the cash flow').optional(),
    })
    .describe('Cash flow settings')

export type CashFlowSettings = z.infer<typeof CashFlowSettings>

export const RestError = z.object({
    errorCode: z.number().int().optional(),
    errorReason: z.string().optional(),
    errorSource: z.string().optional(),
})

export type RestError = z.infer<typeof RestError>

export const CashFlow = z
    .object({
        creationDate: z.iso.datetime({ offset: true }).describe('The creation time of the cash flow').optional(),
        description: z.string().min(0).max(1024).describe('The description of the cash flow').optional(),
        id: z.number().int().describe('The identifier of the cash flow').optional(),
        lastModifiedDate: z.iso.datetime({ offset: true }).describe('The last modified time of the cash flow').optional(),
        name: z.string().min(3).max(64).describe('The name of the cash flow'),
        settings: CashFlowSettings.array().describe('List of cash flow settings').optional(),
        type: z.enum(['INCOME_CATEGORY', 'EXPENSE_CATEGORY']).describe('The type of the cash flow'),
    })
    .describe('A cash flow that defines income and expenses')

export type CashFlow = z.infer<typeof CashFlow>

export const ErrorResponse = z.object({
    errors: RestError.array().optional(),
})

export type ErrorResponse = z.infer<typeof ErrorResponse>

export const GetCashFlowsResponse = CashFlow.array()

export type GetCashFlowsResponse = z.infer<typeof GetCashFlowsResponse>
