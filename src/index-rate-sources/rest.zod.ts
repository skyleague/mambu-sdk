/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'

export const RestError = z.object({
    errorCode: z.number().int().optional(),
    errorReason: z.string().optional(),
    errorSource: z.string().optional(),
})

export type RestError = z.infer<typeof RestError>

export const IndexRateSource = z
    .object({
        creationDate: z.string().datetime({ offset: true }).describe('The creation date of the index rate source').optional(),
        encodedKey: z
            .string()
            .describe('The encoded key of the index rate source, which is auto generated, and unique.')
            .optional(),
        id: z
            .string()
            .describe('The ID of the index rate source, which can be generated and customized, and must be unique.')
            .optional(),
        lastModifiedDate: z
            .string()
            .datetime({ offset: true })
            .describe('The last date this rate source was modified')
            .optional(),
        name: z.string().describe('The name of the index rate source.').optional(),
        notes: z.string().describe('The notes about the the index rate source.').optional(),
        type: z
            .enum(['INTEREST_RATE', 'TAX_RATE', 'WITHHOLDING_TAX_RATE', 'PRINCIPAL_TAX_RATE'])
            .describe('The type of index rate source.')
            .optional(),
    })
    .describe('Represents an index rate source.')

export type IndexRateSource = z.infer<typeof IndexRateSource>

export const IndexRate = z
    .object({
        assignedIndexRateSourceKey: z.string().describe('The index rate source that the index rate belongs to.').optional(),
        encodedKey: z.string().describe('The encoded key of the index rate, which is auto generated, and unique.').optional(),
        id: z
            .string()
            .describe('The ID of the index rate, which can be generated and customized, and must be unique.')
            .optional(),
        notes: z.string().describe('The notes or description attached to this object.').optional(),
        rate: z.number().describe('The percentage value of the index rate.').optional(),
        startDate: z
            .string()
            .datetime({ offset: true })
            .describe('The date when the index rate starts being the active rate for its source.')
            .optional(),
        userKey: z.string().describe('The key for the user that last modified the index rate.').optional(),
    })
    .describe('Represents an index rate.')

export type IndexRate = z.infer<typeof IndexRate>

export const ErrorResponse = z.object({
    errors: RestError.array().optional(),
})

export type ErrorResponse = z.infer<typeof ErrorResponse>

export const GetAllIndexRateSourcesResponse = IndexRateSource.array()

export type GetAllIndexRateSourcesResponse = z.infer<typeof GetAllIndexRateSourcesResponse>

export const GetAllIndexRatesResponse = IndexRate.array()

export type GetAllIndexRatesResponse = z.infer<typeof GetAllIndexRatesResponse>
