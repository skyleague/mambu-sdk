/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"getAllResponse","type":"array","items":{"$ref":"#/$defs/IndexRateSource"},"$defs":{"IndexRateSource":{"type":"object","title":"IndexRateSource","description":"An index rate source used for dynamic interest rates e.g. EURIBOR","properties":{"name":{"type":"string","title":"name","description":"The name of the index rate source"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the index rate source, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the index rate source, can be generated and customized, unique"},"notes":{"type":"string","title":"notes","description":"Any custom text to be associated with the index rate source"},"type":{"title":"type","description":"The type of this index rate source","enum":["INTEREST_RATE","TAX_RATE","WITHHOLDING_TAX_RATE","PRINCIPAL_TAX_RATE"]}},"additionalProperties":false}}};const schema12 = {"type":"object","title":"IndexRateSource","description":"An index rate source used for dynamic interest rates e.g. EURIBOR","properties":{"name":{"type":"string","title":"name","description":"The name of the index rate source"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the index rate source, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the index rate source, can be generated and customized, unique"},"notes":{"type":"string","title":"notes","description":"Any custom text to be associated with the index rate source"},"type":{"title":"type","description":"The type of this index rate source","enum":["INTEREST_RATE","TAX_RATE","WITHHOLDING_TAX_RATE","PRINCIPAL_TAX_RATE"]}},"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs4 = errors;for(const key0 in data0){if(!(((((key0 === "name") || (key0 === "encodedKey")) || (key0 === "id")) || (key0 === "notes")) || (key0 === "type"))){validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/IndexRateSource/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs4 === errors){if(data0.name !== undefined){const _errs5 = errors;if(typeof data0.name !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/name",schemaPath:"#/$defs/IndexRateSource/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs5 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs7 = errors;if(typeof data0.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/encodedKey",schemaPath:"#/$defs/IndexRateSource/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data0.id !== undefined){const _errs9 = errors;if(typeof data0.id !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/id",schemaPath:"#/$defs/IndexRateSource/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data0.notes !== undefined){const _errs11 = errors;if(typeof data0.notes !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/notes",schemaPath:"#/$defs/IndexRateSource/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data0.type !== undefined){let data5 = data0.type;const _errs13 = errors;if(!((((data5 === "INTEREST_RATE") || (data5 === "TAX_RATE")) || (data5 === "WITHHOLDING_TAX_RATE")) || (data5 === "PRINCIPAL_TAX_RATE"))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/type",schemaPath:"#/$defs/IndexRateSource/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/IndexRateSource/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;