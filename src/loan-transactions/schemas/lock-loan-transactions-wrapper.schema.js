/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"LockLoanTransactionsWrapper","type":"object","description":"Represents a wrapper over a list of loan transactions, to be used when locking and unlocking an account.","properties":{"loanTransactions":{"type":"array","description":"The list of loan transactions","items":{"$ref":"#/$defs/LoanTransaction"}}},"additionalProperties":true,"$defs":{"LoanTransaction":{"type":"object","description":"Represents the action performed on a loan account after which the account's amount changes its value.","properties":{"accountBalances":{"$ref":"#/$defs/TransactionBalances"},"adjustmentTransactionKey":{"type":"string","description":"The key of the loan transaction where the adjustment for the transaction was made (if any adjustment was involved)."},"affectedAmounts":{"$ref":"#/$defs/LoanAffectedAmounts"},"amount":{"type":"number","description":"The amount that was added or removed on the loan account."},"bookingDate":{"type":"string","description":"The date when the corresponding journal entry is booked.","format":"date-time"},"branchKey":{"type":"string","description":"The branch where the transaction was performed."},"cardTransaction":{"$ref":"#/$defs/CardTransaction"},"centreKey":{"type":"string","description":"The center where the transaction was performed."},"creationDate":{"type":"string","description":"The date when this loan transaction was created.","format":"date-time"},"currency":{"$ref":"#/$defs/Currency"},"customPaymentAmounts":{"type":"array","description":"The list of custom amounts which the user has paid as part of this transaction.","items":{"$ref":"#/$defs/CustomPaymentAmount"}},"encodedKey":{"type":"string","description":"The encoded key of the loan transaction, which is auto generated, and must be unique."},"externalId":{"type":"string","description":"The external ID of the loan transaction, it is customizable, and must be unique."},"fees":{"type":"array","description":"The amounts that have been applied or paid as part of this transaction and involved predefined fees.","items":{"$ref":"#/$defs/Fee"}},"id":{"type":"string","description":"The ID of the loan transaction, can be generated and customized, and must be unique."},"installmentEncodedKey":{"type":"string","description":"The specific installment encoded key associated to the loan transaction."},"migrationEventKey":{"type":"string","description":"The migration event encoded key associated with the loan account. If the account was imported, track which 'migration event' it came from."},"notes":{"type":"string","description":"The notes or description for the loan transaction."},"originalAmount":{"type":"number","description":"The amount that was posted in a foreign currency. This amount was converted using the exchange rate available at entry date and set into the amount field."},"originalCurrencyCode":{"type":"string","description":"The currency in which this transaction was posted. The amounts are stored in the base currency, but the user may enter it in a foreign currency."},"originalTransactionKey":{"type":"string","description":"The encoded key of the transaction that was adjusted as part of this one. Available only for adjustment transactions."},"parentAccountKey":{"type":"string","description":"The key of the parent loan account."},"parentLoanTransactionKey":{"type":"string","description":"The key of the parent loan transaction."},"prepaymentRecalculationMethod":{"description":"The prepayment recalculation method of the loan transaction.","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]},"taxes":{"$ref":"#/$defs/Taxes"},"terms":{"$ref":"#/$defs/LoanTerms"},"tillKey":{"type":"string","description":"The till key associated with the transaction."},"transactionDetails":{"$ref":"#/$defs/TransactionDetails"},"transferDetails":{"$ref":"#/$defs/TransferDetails"},"type":{"description":"The type of loan transaction.","enum":["IMPORT","DISBURSEMENT","DISBURSEMENT_ADJUSTMENT","WRITE_OFF","WRITE_OFF_ADJUSTMENT","REPAYMENT","PAYMENT_MADE","WITHDRAWAL_REDRAW","WITHDRAWAL_REDRAW_ADJUSTMENT","FEE_APPLIED","FEE_CHARGED","FEES_DUE_REDUCED","FEE_ADJUSTMENT","PENALTY_APPLIED","PENALTY_ADJUSTMENT","PENALTIES_DUE_REDUCED","REPAYMENT_ADJUSTMENT","PAYMENT_MADE_ADJUSTMENT","INTEREST_RATE_CHANGED","TAX_RATE_CHANGED","PENALTY_RATE_CHANGED","INTEREST_APPLIED","INTEREST_APPLIED_ADJUSTMENT","INTEREST_DUE_REDUCED","PENALTY_REDUCTION_ADJUSTMENT","FEE_REDUCTION_ADJUSTMENT","INTEREST_REDUCTION_ADJUSTMENT","DEFERRED_INTEREST_APPLIED","DEFERRED_INTEREST_APPLIED_ADJUSTMENT","DEFERRED_INTEREST_PAID","DEFERRED_INTEREST_PAID_ADJUSTMENT","INTEREST_LOCKED","FEE_LOCKED","PENALTY_LOCKED","INTEREST_UNLOCKED","FEE_UNLOCKED","PENALTY_UNLOCKED","REDRAW_TRANSFER","REDRAW_REPAYMENT","REDRAW_TRANSFER_ADJUSTMENT","REDRAW_REPAYMENT_ADJUSTMENT","TRANSFER","TRANSFER_ADJUSTMENT","BRANCH_CHANGED","TERMS_CHANGED","CARD_TRANSACTION_REVERSAL","CARD_TRANSACTION_REVERSAL_ADJUSTMENT","DUE_DATE_CHANGED","DUE_DATE_CHANGED_ADJUSTMENT","ACCOUNT_TERMINATED","ACCOUNT_TERMINATED_ADJUSTMENT"]},"userKey":{"type":"string","description":"The user that performed the transaction."},"valueDate":{"type":"string","description":"The date of the entry in the organization time format and timezone.","format":"date-time"}},"additionalProperties":true},"TransactionBalances":{"type":"object","description":"The balances changed within a transaction.","properties":{"advancePosition":{"type":"number","description":"Captures the advance (prepaid) amount."},"arrearsPosition":{"type":"number","description":"Captures the arrears position amount for the account in arrears."},"expectedPrincipalRedraw":{"type":"number","description":"The difference between principal balance and redraw balance after each transaction performed on the loan account."},"principalBalance":{"type":"number","description":"The account redraw balance captured after the transaction update."},"redrawBalance":{"type":"number","description":"The account redraw balance captured after the transaction update."},"totalBalance":{"type":"number","description":"The running balance still owed for the loan."}},"additionalProperties":true},"LoanAffectedAmounts":{"type":"object","description":"The amounts affected after completing the loan transaction","properties":{"deferredInterestAmount":{"type":"number","description":"How much interest pre-paid was added/removed in account, within this transaction (including taxes)."},"feesAmount":{"type":"number","description":" How much fees was added/removed in account, within this transaction."},"fundersInterestAmount":{"type":"number","description":"How much interest is given to the investors, within this transaction (only for p2p products)"},"interestAmount":{"type":"number","description":"How much interest was added/removed in account, within this transaction (including taxes). If there is any deferred interest amount set in this transaction, that amount should be included in this field."},"interestFromArrearsAmount":{"type":"number","description":"How much interest from arrears was added/removed in account, within this transaction (including taxes)."},"organizationCommissionAmount":{"type":"number","description":"How much interest is given to the organization, within this transaction (only for p2p products)"},"paymentHolidaysInterestAmount":{"type":"number","description":"How much Payment Holidays interest was added/removed in account, within this transaction (including taxes)."},"penaltyAmount":{"type":"number","description":"How much penalties was added/removed in account, within this transaction."},"principalAmount":{"type":"number","description":"How much principal was added/removed in account, within this transaction."}},"additionalProperties":true},"CardTransaction":{"type":"object","description":"A card transaction entry which will have a corresponding a financial transaction performed.","properties":{"advice":{"type":"boolean","description":"Whether the given request should be accepted without balance validations."},"amount":{"type":"number","description":"The amount of money to be withdrawn in the financial transaction."},"cardAcceptor":{"$ref":"#/$defs/CardAcceptor"},"cardToken":{"type":"string","description":"The reference token of the card."},"currencyCode":{"type":"string","description":"The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."},"encodedKey":{"type":"string","description":"The encoded key of the entity, generated, globally unique"},"externalAuthorizationReferenceId":{"type":"string","description":"The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."},"externalReferenceId":{"type":"string","description":"The external reference ID to be used to reference the card transaction in subsequent requests."},"userTransactionTime":{"type":"string","description":"The formatted time at which the user made this card transaction."}},"required":["advice","amount","externalReferenceId"],"additionalProperties":true},"CardAcceptor":{"type":"object","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"city":{"type":"string","description":"The city in which the card acceptor has the business."},"country":{"type":"string","description":"The country in which the card acceptor has the business."},"mcc":{"type":"integer","description":"The Merchant Category Code of the card acceptor."},"name":{"type":"string","description":"The name of the card acceptor."},"state":{"type":"string","description":"The state in which the card acceptor has the business."},"street":{"type":"string","description":"The street in which the card acceptor has the business."},"zip":{"type":"string","description":"The ZIP code of the location in which the card acceptor has the business."}},"additionalProperties":true},"Currency":{"type":"object","description":"Represents a currency eg. USD, EUR.","properties":{"code":{"description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZIG","ZMK","ZWL","ZMW","SSP","NON_FIAT"]},"currencyCode":{"type":"string","description":"Currency code for NON_FIAT currency."}},"additionalProperties":true},"CustomPaymentAmount":{"type":"object","description":"Custom payment amount for a specific element type","properties":{"amount":{"type":"number","description":"The amount of the payment paid in the transaction for the given type."},"customPaymentAmountType":{"description":"The type of the custom payment","enum":["PRINCIPAL","INTEREST","MANUAL_FEE","UPFRONT_DISBURSEMENT_FEE","LATE_REPAYMENT_FEE","PAYMENT_DUE_FEE","PENALTY"]},"predefinedFeeKey":{"type":"string","description":"The encodedKey of the predefined fee to be paid."},"taxOnAmount":{"type":"number","description":"The amount of the taxes paid in the transaction for the given type."}},"required":["amount","customPaymentAmountType"],"additionalProperties":true},"Fee":{"type":"object","description":"An amount of predefined fee that was applied or paid on an account.","properties":{"amount":{"type":"number","description":"The amount of the fee that was applied/paid in the transaction for the given predefined fee."},"name":{"type":"string","description":"The name of the predefined fee"},"predefinedFeeKey":{"type":"string","description":"The encoded key of the predefined fee, auto generated, unique"},"taxAmount":{"type":"number","description":"The amount of the taxes on fee that was applied/paid in the transaction."},"trigger":{"description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY","IOF","EARLY_REPAYMENT_CHARGE"]}},"required":["predefinedFeeKey"],"additionalProperties":true},"Taxes":{"type":"object","description":"The taxes applied within a transaction.","properties":{"deferredTaxOnInterestAmount":{"type":"number","description":"How much taxes on the interest that was pre-paid were added/removed in account, within this transaction. If there is any deferred tax on interest amount set in this transaction, that amount should be included in this field."},"taxOnFeesAmount":{"type":"number","description":"How much taxes on the fees that were paid in this transaction were added/removed in account, within this transaction."},"taxOnInterestAmount":{"type":"number","description":"How much taxes on the interest that was paid in this transaction were added/removed in account, within this transaction."},"taxOnInterestFromArrearsAmount":{"type":"number","description":"The amount of taxes on the interest from arrears that were applied/paid in account, within this transaction."},"taxOnPaymentHolidaysInterest":{"type":"number","description":"The amount of taxes on the Payment Holidays interest that were added/removed in account, within this transaction."},"taxOnPenaltyAmount":{"type":"number","description":"How much taxes on the penalties that were paid in this transaction were added/removed in account, within this transaction."},"taxRate":{"type":"number","description":"The tax rate that was set or changed in this transaction."}},"additionalProperties":true},"LoanTerms":{"type":"object","description":"The loan transaction terms","properties":{"interestSettings":{"$ref":"#/$defs/TransactionInterestSettings"},"periodicPayment":{"type":"number","description":"The periodic payment value logged when changing it for a Balloon Payments account"},"principalPaymentAmount":{"type":"number","description":"The principal payment flat amount logged when changing it for a Revolving Credit account"},"principalPaymentPercentage":{"type":"number","description":"The principal payment percentage value logged when changing it for a Revolving Credit account"}},"additionalProperties":true},"TransactionInterestSettings":{"type":"object","description":"The interest settings, holds all the properties regarding interests for the loan account.","properties":{"indexInterestRate":{"type":"number","description":"The value of the index interest rate"},"interestRate":{"type":"number","description":"The interest rate. Represents the interest rate for the loan account. The interest on loans is accrued on a daily basis, which allows charging the clients only for the days they actually used the loan amount."}},"additionalProperties":true},"TransactionDetails":{"type":"object","description":"Contains the details about transaction including fields like transaction channel key and channel id","properties":{"transactionChannelId":{"type":"string","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":true},"TransferDetails":{"type":"object","description":"Represents the transfer details, such as the linked transaction key","properties":{"linkedDepositTransactionKey":{"type":"string","description":"The key of the related deposit transaction"},"linkedLoanTransactionKey":{"type":"string","description":"The key of the related loan transaction"}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents the action performed on a loan account after which the account's amount changes its value.","properties":{"accountBalances":{"$ref":"#/$defs/TransactionBalances"},"adjustmentTransactionKey":{"type":"string","description":"The key of the loan transaction where the adjustment for the transaction was made (if any adjustment was involved)."},"affectedAmounts":{"$ref":"#/$defs/LoanAffectedAmounts"},"amount":{"type":"number","description":"The amount that was added or removed on the loan account."},"bookingDate":{"type":"string","description":"The date when the corresponding journal entry is booked.","format":"date-time"},"branchKey":{"type":"string","description":"The branch where the transaction was performed."},"cardTransaction":{"$ref":"#/$defs/CardTransaction"},"centreKey":{"type":"string","description":"The center where the transaction was performed."},"creationDate":{"type":"string","description":"The date when this loan transaction was created.","format":"date-time"},"currency":{"$ref":"#/$defs/Currency"},"customPaymentAmounts":{"type":"array","description":"The list of custom amounts which the user has paid as part of this transaction.","items":{"$ref":"#/$defs/CustomPaymentAmount"}},"encodedKey":{"type":"string","description":"The encoded key of the loan transaction, which is auto generated, and must be unique."},"externalId":{"type":"string","description":"The external ID of the loan transaction, it is customizable, and must be unique."},"fees":{"type":"array","description":"The amounts that have been applied or paid as part of this transaction and involved predefined fees.","items":{"$ref":"#/$defs/Fee"}},"id":{"type":"string","description":"The ID of the loan transaction, can be generated and customized, and must be unique."},"installmentEncodedKey":{"type":"string","description":"The specific installment encoded key associated to the loan transaction."},"migrationEventKey":{"type":"string","description":"The migration event encoded key associated with the loan account. If the account was imported, track which 'migration event' it came from."},"notes":{"type":"string","description":"The notes or description for the loan transaction."},"originalAmount":{"type":"number","description":"The amount that was posted in a foreign currency. This amount was converted using the exchange rate available at entry date and set into the amount field."},"originalCurrencyCode":{"type":"string","description":"The currency in which this transaction was posted. The amounts are stored in the base currency, but the user may enter it in a foreign currency."},"originalTransactionKey":{"type":"string","description":"The encoded key of the transaction that was adjusted as part of this one. Available only for adjustment transactions."},"parentAccountKey":{"type":"string","description":"The key of the parent loan account."},"parentLoanTransactionKey":{"type":"string","description":"The key of the parent loan transaction."},"prepaymentRecalculationMethod":{"description":"The prepayment recalculation method of the loan transaction.","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]},"taxes":{"$ref":"#/$defs/Taxes"},"terms":{"$ref":"#/$defs/LoanTerms"},"tillKey":{"type":"string","description":"The till key associated with the transaction."},"transactionDetails":{"$ref":"#/$defs/TransactionDetails"},"transferDetails":{"$ref":"#/$defs/TransferDetails"},"type":{"description":"The type of loan transaction.","enum":["IMPORT","DISBURSEMENT","DISBURSEMENT_ADJUSTMENT","WRITE_OFF","WRITE_OFF_ADJUSTMENT","REPAYMENT","PAYMENT_MADE","WITHDRAWAL_REDRAW","WITHDRAWAL_REDRAW_ADJUSTMENT","FEE_APPLIED","FEE_CHARGED","FEES_DUE_REDUCED","FEE_ADJUSTMENT","PENALTY_APPLIED","PENALTY_ADJUSTMENT","PENALTIES_DUE_REDUCED","REPAYMENT_ADJUSTMENT","PAYMENT_MADE_ADJUSTMENT","INTEREST_RATE_CHANGED","TAX_RATE_CHANGED","PENALTY_RATE_CHANGED","INTEREST_APPLIED","INTEREST_APPLIED_ADJUSTMENT","INTEREST_DUE_REDUCED","PENALTY_REDUCTION_ADJUSTMENT","FEE_REDUCTION_ADJUSTMENT","INTEREST_REDUCTION_ADJUSTMENT","DEFERRED_INTEREST_APPLIED","DEFERRED_INTEREST_APPLIED_ADJUSTMENT","DEFERRED_INTEREST_PAID","DEFERRED_INTEREST_PAID_ADJUSTMENT","INTEREST_LOCKED","FEE_LOCKED","PENALTY_LOCKED","INTEREST_UNLOCKED","FEE_UNLOCKED","PENALTY_UNLOCKED","REDRAW_TRANSFER","REDRAW_REPAYMENT","REDRAW_TRANSFER_ADJUSTMENT","REDRAW_REPAYMENT_ADJUSTMENT","TRANSFER","TRANSFER_ADJUSTMENT","BRANCH_CHANGED","TERMS_CHANGED","CARD_TRANSACTION_REVERSAL","CARD_TRANSACTION_REVERSAL_ADJUSTMENT","DUE_DATE_CHANGED","DUE_DATE_CHANGED_ADJUSTMENT","ACCOUNT_TERMINATED","ACCOUNT_TERMINATED_ADJUSTMENT"]},"userKey":{"type":"string","description":"The user that performed the transaction."},"valueDate":{"type":"string","description":"The date of the entry in the organization time format and timezone.","format":"date-time"}},"additionalProperties":true};const schema13 = {"type":"object","description":"The balances changed within a transaction.","properties":{"advancePosition":{"type":"number","description":"Captures the advance (prepaid) amount."},"arrearsPosition":{"type":"number","description":"Captures the arrears position amount for the account in arrears."},"expectedPrincipalRedraw":{"type":"number","description":"The difference between principal balance and redraw balance after each transaction performed on the loan account."},"principalBalance":{"type":"number","description":"The account redraw balance captured after the transaction update."},"redrawBalance":{"type":"number","description":"The account redraw balance captured after the transaction update."},"totalBalance":{"type":"number","description":"The running balance still owed for the loan."}},"additionalProperties":true};const schema14 = {"type":"object","description":"The amounts affected after completing the loan transaction","properties":{"deferredInterestAmount":{"type":"number","description":"How much interest pre-paid was added/removed in account, within this transaction (including taxes)."},"feesAmount":{"type":"number","description":" How much fees was added/removed in account, within this transaction."},"fundersInterestAmount":{"type":"number","description":"How much interest is given to the investors, within this transaction (only for p2p products)"},"interestAmount":{"type":"number","description":"How much interest was added/removed in account, within this transaction (including taxes). If there is any deferred interest amount set in this transaction, that amount should be included in this field."},"interestFromArrearsAmount":{"type":"number","description":"How much interest from arrears was added/removed in account, within this transaction (including taxes)."},"organizationCommissionAmount":{"type":"number","description":"How much interest is given to the organization, within this transaction (only for p2p products)"},"paymentHolidaysInterestAmount":{"type":"number","description":"How much Payment Holidays interest was added/removed in account, within this transaction (including taxes)."},"penaltyAmount":{"type":"number","description":"How much penalties was added/removed in account, within this transaction."},"principalAmount":{"type":"number","description":"How much principal was added/removed in account, within this transaction."}},"additionalProperties":true};const schema17 = {"type":"object","description":"Represents a currency eg. USD, EUR.","properties":{"code":{"description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZIG","ZMK","ZWL","ZMW","SSP","NON_FIAT"]},"currencyCode":{"type":"string","description":"Currency code for NON_FIAT currency."}},"additionalProperties":true};const schema18 = {"type":"object","description":"Custom payment amount for a specific element type","properties":{"amount":{"type":"number","description":"The amount of the payment paid in the transaction for the given type."},"customPaymentAmountType":{"description":"The type of the custom payment","enum":["PRINCIPAL","INTEREST","MANUAL_FEE","UPFRONT_DISBURSEMENT_FEE","LATE_REPAYMENT_FEE","PAYMENT_DUE_FEE","PENALTY"]},"predefinedFeeKey":{"type":"string","description":"The encodedKey of the predefined fee to be paid."},"taxOnAmount":{"type":"number","description":"The amount of the taxes paid in the transaction for the given type."}},"required":["amount","customPaymentAmountType"],"additionalProperties":true};const schema19 = {"type":"object","description":"An amount of predefined fee that was applied or paid on an account.","properties":{"amount":{"type":"number","description":"The amount of the fee that was applied/paid in the transaction for the given predefined fee."},"name":{"type":"string","description":"The name of the predefined fee"},"predefinedFeeKey":{"type":"string","description":"The encoded key of the predefined fee, auto generated, unique"},"taxAmount":{"type":"number","description":"The amount of the taxes on fee that was applied/paid in the transaction."},"trigger":{"description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY","IOF","EARLY_REPAYMENT_CHARGE"]}},"required":["predefinedFeeKey"],"additionalProperties":true};const schema20 = {"type":"object","description":"The taxes applied within a transaction.","properties":{"deferredTaxOnInterestAmount":{"type":"number","description":"How much taxes on the interest that was pre-paid were added/removed in account, within this transaction. If there is any deferred tax on interest amount set in this transaction, that amount should be included in this field."},"taxOnFeesAmount":{"type":"number","description":"How much taxes on the fees that were paid in this transaction were added/removed in account, within this transaction."},"taxOnInterestAmount":{"type":"number","description":"How much taxes on the interest that was paid in this transaction were added/removed in account, within this transaction."},"taxOnInterestFromArrearsAmount":{"type":"number","description":"The amount of taxes on the interest from arrears that were applied/paid in account, within this transaction."},"taxOnPaymentHolidaysInterest":{"type":"number","description":"The amount of taxes on the Payment Holidays interest that were added/removed in account, within this transaction."},"taxOnPenaltyAmount":{"type":"number","description":"How much taxes on the penalties that were paid in this transaction were added/removed in account, within this transaction."},"taxRate":{"type":"number","description":"The tax rate that was set or changed in this transaction."}},"additionalProperties":true};const schema23 = {"type":"object","description":"Contains the details about transaction including fields like transaction channel key and channel id","properties":{"transactionChannelId":{"type":"string","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":true};const schema24 = {"type":"object","description":"Represents the transfer details, such as the linked transaction key","properties":{"linkedDepositTransactionKey":{"type":"string","description":"The key of the related deposit transaction"},"linkedLoanTransactionKey":{"type":"string","description":"The key of the related loan transaction"}},"additionalProperties":true};const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];const schema15 = {"type":"object","description":"A card transaction entry which will have a corresponding a financial transaction performed.","properties":{"advice":{"type":"boolean","description":"Whether the given request should be accepted without balance validations."},"amount":{"type":"number","description":"The amount of money to be withdrawn in the financial transaction."},"cardAcceptor":{"$ref":"#/$defs/CardAcceptor"},"cardToken":{"type":"string","description":"The reference token of the card."},"currencyCode":{"type":"string","description":"The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."},"encodedKey":{"type":"string","description":"The encoded key of the entity, generated, globally unique"},"externalAuthorizationReferenceId":{"type":"string","description":"The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."},"externalReferenceId":{"type":"string","description":"The external reference ID to be used to reference the card transaction in subsequent requests."},"userTransactionTime":{"type":"string","description":"The formatted time at which the user made this card transaction."}},"required":["advice","amount","externalReferenceId"],"additionalProperties":true};const schema16 = {"type":"object","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"city":{"type":"string","description":"The city in which the card acceptor has the business."},"country":{"type":"string","description":"The country in which the card acceptor has the business."},"mcc":{"type":"integer","description":"The Merchant Category Code of the card acceptor."},"name":{"type":"string","description":"The name of the card acceptor."},"state":{"type":"string","description":"The state in which the card acceptor has the business."},"street":{"type":"string","description":"The street in which the card acceptor has the business."},"zip":{"type":"string","description":"The ZIP code of the location in which the card acceptor has the business."}},"additionalProperties":true};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.advice === undefined) && (missing0 = "advice")) || ((data.amount === undefined) && (missing0 = "amount"))) || ((data.externalReferenceId === undefined) && (missing0 = "externalReferenceId"))){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.advice !== undefined){const _errs2 = errors;if(typeof data.advice !== "boolean"){validate12.errors = [{instancePath:instancePath+"/advice",schemaPath:"#/properties/advice/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data1 = data.amount;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate12.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.cardAcceptor !== undefined){let data2 = data.cardAcceptor;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.city !== undefined){const _errs10 = errors;if(typeof data2.city !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/city",schemaPath:"#/$defs/CardAcceptor/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.country !== undefined){const _errs12 = errors;if(typeof data2.country !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/country",schemaPath:"#/$defs/CardAcceptor/properties/country/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.mcc !== undefined){let data5 = data2.mcc;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/mcc",schemaPath:"#/$defs/CardAcceptor/properties/mcc/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data2.name !== undefined){const _errs16 = errors;if(typeof data2.name !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/name",schemaPath:"#/$defs/CardAcceptor/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data2.state !== undefined){const _errs18 = errors;if(typeof data2.state !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/state",schemaPath:"#/$defs/CardAcceptor/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data2.street !== undefined){const _errs20 = errors;if(typeof data2.street !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/street",schemaPath:"#/$defs/CardAcceptor/properties/street/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data2.zip !== undefined){const _errs22 = errors;if(typeof data2.zip !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/zip",schemaPath:"#/$defs/CardAcceptor/properties/zip/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/cardAcceptor",schemaPath:"#/$defs/CardAcceptor/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.cardToken !== undefined){const _errs24 = errors;if(typeof data.cardToken !== "string"){validate12.errors = [{instancePath:instancePath+"/cardToken",schemaPath:"#/properties/cardToken/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.currencyCode !== undefined){const _errs26 = errors;if(typeof data.currencyCode !== "string"){validate12.errors = [{instancePath:instancePath+"/currencyCode",schemaPath:"#/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs28 = errors;if(typeof data.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.externalAuthorizationReferenceId !== undefined){const _errs30 = errors;if(typeof data.externalAuthorizationReferenceId !== "string"){validate12.errors = [{instancePath:instancePath+"/externalAuthorizationReferenceId",schemaPath:"#/properties/externalAuthorizationReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferenceId !== undefined){const _errs32 = errors;if(typeof data.externalReferenceId !== "string"){validate12.errors = [{instancePath:instancePath+"/externalReferenceId",schemaPath:"#/properties/externalReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.userTransactionTime !== undefined){const _errs34 = errors;if(typeof data.userTransactionTime !== "string"){validate12.errors = [{instancePath:instancePath+"/userTransactionTime",schemaPath:"#/properties/userTransactionTime/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema21 = {"type":"object","description":"The loan transaction terms","properties":{"interestSettings":{"$ref":"#/$defs/TransactionInterestSettings"},"periodicPayment":{"type":"number","description":"The periodic payment value logged when changing it for a Balloon Payments account"},"principalPaymentAmount":{"type":"number","description":"The principal payment flat amount logged when changing it for a Revolving Credit account"},"principalPaymentPercentage":{"type":"number","description":"The principal payment percentage value logged when changing it for a Revolving Credit account"}},"additionalProperties":true};const schema22 = {"type":"object","description":"The interest settings, holds all the properties regarding interests for the loan account.","properties":{"indexInterestRate":{"type":"number","description":"The value of the index interest rate"},"interestRate":{"type":"number","description":"The interest rate. Represents the interest rate for the loan account. The interest on loans is accrued on a daily basis, which allows charging the clients only for the days they actually used the loan amount."}},"additionalProperties":true};function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestSettings !== undefined){let data0 = data.interestSettings;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.indexInterestRate !== undefined){let data1 = data0.indexInterestRate;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate14.errors = [{instancePath:instancePath+"/interestSettings/indexInterestRate",schemaPath:"#/$defs/TransactionInterestSettings/properties/indexInterestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.interestRate !== undefined){let data2 = data0.interestRate;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate14.errors = [{instancePath:instancePath+"/interestSettings/interestRate",schemaPath:"#/$defs/TransactionInterestSettings/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}else {validate14.errors = [{instancePath:instancePath+"/interestSettings",schemaPath:"#/$defs/TransactionInterestSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.periodicPayment !== undefined){let data3 = data.periodicPayment;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate14.errors = [{instancePath:instancePath+"/periodicPayment",schemaPath:"#/properties/periodicPayment/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentAmount !== undefined){let data4 = data.principalPaymentAmount;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate14.errors = [{instancePath:instancePath+"/principalPaymentAmount",schemaPath:"#/properties/principalPaymentAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentPercentage !== undefined){let data5 = data.principalPaymentPercentage;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate14.errors = [{instancePath:instancePath+"/principalPaymentPercentage",schemaPath:"#/properties/principalPaymentPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}const func0 = require("ajv/dist/runtime/equal").default;function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.accountBalances !== undefined){let data0 = data.accountBalances;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.advancePosition !== undefined){let data1 = data0.advancePosition;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/advancePosition",schemaPath:"#/$defs/TransactionBalances/properties/advancePosition/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.arrearsPosition !== undefined){let data2 = data0.arrearsPosition;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/arrearsPosition",schemaPath:"#/$defs/TransactionBalances/properties/arrearsPosition/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.expectedPrincipalRedraw !== undefined){let data3 = data0.expectedPrincipalRedraw;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/expectedPrincipalRedraw",schemaPath:"#/$defs/TransactionBalances/properties/expectedPrincipalRedraw/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.principalBalance !== undefined){let data4 = data0.principalBalance;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/principalBalance",schemaPath:"#/$defs/TransactionBalances/properties/principalBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data0.redrawBalance !== undefined){let data5 = data0.redrawBalance;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/redrawBalance",schemaPath:"#/$defs/TransactionBalances/properties/redrawBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data0.totalBalance !== undefined){let data6 = data0.totalBalance;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/totalBalance",schemaPath:"#/$defs/TransactionBalances/properties/totalBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/accountBalances",schemaPath:"#/$defs/TransactionBalances/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.adjustmentTransactionKey !== undefined){const _errs18 = errors;if(typeof data.adjustmentTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/adjustmentTransactionKey",schemaPath:"#/properties/adjustmentTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.affectedAmounts !== undefined){let data8 = data.affectedAmounts;const _errs20 = errors;const _errs21 = errors;if(errors === _errs21){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){if(data8.deferredInterestAmount !== undefined){let data9 = data8.deferredInterestAmount;const _errs24 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/deferredInterestAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/deferredInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs24 === errors;}else {var valid4 = true;}if(valid4){if(data8.feesAmount !== undefined){let data10 = data8.feesAmount;const _errs26 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/feesAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/feesAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs26 === errors;}else {var valid4 = true;}if(valid4){if(data8.fundersInterestAmount !== undefined){let data11 = data8.fundersInterestAmount;const _errs28 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/fundersInterestAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/fundersInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs28 === errors;}else {var valid4 = true;}if(valid4){if(data8.interestAmount !== undefined){let data12 = data8.interestAmount;const _errs30 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/interestAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/interestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs30 === errors;}else {var valid4 = true;}if(valid4){if(data8.interestFromArrearsAmount !== undefined){let data13 = data8.interestFromArrearsAmount;const _errs32 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/interestFromArrearsAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/interestFromArrearsAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs32 === errors;}else {var valid4 = true;}if(valid4){if(data8.organizationCommissionAmount !== undefined){let data14 = data8.organizationCommissionAmount;const _errs34 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/organizationCommissionAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/organizationCommissionAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs34 === errors;}else {var valid4 = true;}if(valid4){if(data8.paymentHolidaysInterestAmount !== undefined){let data15 = data8.paymentHolidaysInterestAmount;const _errs36 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/paymentHolidaysInterestAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/paymentHolidaysInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs36 === errors;}else {var valid4 = true;}if(valid4){if(data8.penaltyAmount !== undefined){let data16 = data8.penaltyAmount;const _errs38 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/penaltyAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/penaltyAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs38 === errors;}else {var valid4 = true;}if(valid4){if(data8.principalAmount !== undefined){let data17 = data8.principalAmount;const _errs40 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/principalAmount",schemaPath:"#/$defs/LoanAffectedAmounts/properties/principalAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs40 === errors;}else {var valid4 = true;}}}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/affectedAmounts",schemaPath:"#/$defs/LoanAffectedAmounts/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data18 = data.amount;const _errs42 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){validate11.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.bookingDate !== undefined){let data19 = data.bookingDate;const _errs44 = errors;if(errors === _errs44){if(errors === _errs44){if(typeof data19 === "string"){if(!(formats0.validate(data19))){validate11.errors = [{instancePath:instancePath+"/bookingDate",schemaPath:"#/properties/bookingDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/bookingDate",schemaPath:"#/properties/bookingDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.branchKey !== undefined){const _errs46 = errors;if(typeof data.branchKey !== "string"){validate11.errors = [{instancePath:instancePath+"/branchKey",schemaPath:"#/properties/branchKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs46 === errors;}else {var valid0 = true;}if(valid0){if(data.cardTransaction !== undefined){const _errs48 = errors;if(!(validate12(data.cardTransaction, {instancePath:instancePath+"/cardTransaction",parentData:data,parentDataProperty:"cardTransaction",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.centreKey !== undefined){const _errs49 = errors;if(typeof data.centreKey !== "string"){validate11.errors = [{instancePath:instancePath+"/centreKey",schemaPath:"#/properties/centreKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs49 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){let data23 = data.creationDate;const _errs51 = errors;if(errors === _errs51){if(errors === _errs51){if(typeof data23 === "string"){if(!(formats0.validate(data23))){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.currency !== undefined){let data24 = data.currency;const _errs53 = errors;const _errs54 = errors;if(errors === _errs54){if(data24 && typeof data24 == "object" && !Array.isArray(data24)){if(data24.code !== undefined){const _errs57 = errors;let valid7;valid7 = false;for(const v0 of schema17.properties.code.enum){if(func0(data24.code, v0)){valid7 = true;break;}}if(!valid7){validate11.errors = [{instancePath:instancePath+"/currency/code",schemaPath:"#/$defs/Currency/properties/code/enum",keyword:"enum",params:{allowedValues: schema17.properties.code.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs57 === errors;}else {var valid6 = true;}if(valid6){if(data24.currencyCode !== undefined){const _errs58 = errors;if(typeof data24.currencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/currency/currencyCode",schemaPath:"#/$defs/Currency/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs58 === errors;}else {var valid6 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/$defs/Currency/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs53 === errors;}else {var valid0 = true;}if(valid0){if(data.customPaymentAmounts !== undefined){let data27 = data.customPaymentAmounts;const _errs60 = errors;if(errors === _errs60){if(Array.isArray(data27)){var valid8 = true;const len0 = data27.length;for(let i0=0; i0<len0; i0++){let data28 = data27[i0];const _errs62 = errors;const _errs63 = errors;if(errors === _errs63){if(data28 && typeof data28 == "object" && !Array.isArray(data28)){let missing0;if(((data28.amount === undefined) && (missing0 = "amount")) || ((data28.customPaymentAmountType === undefined) && (missing0 = "customPaymentAmountType"))){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i0,schemaPath:"#/$defs/CustomPaymentAmount/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data28.amount !== undefined){let data29 = data28.amount;const _errs66 = errors;if(!((typeof data29 == "number") && (isFinite(data29)))){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i0+"/amount",schemaPath:"#/$defs/CustomPaymentAmount/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs66 === errors;}else {var valid10 = true;}if(valid10){if(data28.customPaymentAmountType !== undefined){const _errs68 = errors;let valid11;valid11 = false;for(const v1 of schema18.properties.customPaymentAmountType.enum){if(func0(data28.customPaymentAmountType, v1)){valid11 = true;break;}}if(!valid11){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i0+"/customPaymentAmountType",schemaPath:"#/$defs/CustomPaymentAmount/properties/customPaymentAmountType/enum",keyword:"enum",params:{allowedValues: schema18.properties.customPaymentAmountType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid10 = _errs68 === errors;}else {var valid10 = true;}if(valid10){if(data28.predefinedFeeKey !== undefined){const _errs69 = errors;if(typeof data28.predefinedFeeKey !== "string"){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i0+"/predefinedFeeKey",schemaPath:"#/$defs/CustomPaymentAmount/properties/predefinedFeeKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid10 = _errs69 === errors;}else {var valid10 = true;}if(valid10){if(data28.taxOnAmount !== undefined){let data32 = data28.taxOnAmount;const _errs71 = errors;if(!((typeof data32 == "number") && (isFinite(data32)))){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i0+"/taxOnAmount",schemaPath:"#/$defs/CustomPaymentAmount/properties/taxOnAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs71 === errors;}else {var valid10 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i0,schemaPath:"#/$defs/CustomPaymentAmount/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid8 = _errs62 === errors;if(!valid8){break;}}}else {validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts",schemaPath:"#/properties/customPaymentAmounts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs60 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs73 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs73 === errors;}else {var valid0 = true;}if(valid0){if(data.externalId !== undefined){const _errs75 = errors;if(typeof data.externalId !== "string"){validate11.errors = [{instancePath:instancePath+"/externalId",schemaPath:"#/properties/externalId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs75 === errors;}else {var valid0 = true;}if(valid0){if(data.fees !== undefined){let data35 = data.fees;const _errs77 = errors;if(errors === _errs77){if(Array.isArray(data35)){var valid12 = true;const len1 = data35.length;for(let i1=0; i1<len1; i1++){let data36 = data35[i1];const _errs79 = errors;const _errs80 = errors;if(errors === _errs80){if(data36 && typeof data36 == "object" && !Array.isArray(data36)){let missing1;if((data36.predefinedFeeKey === undefined) && (missing1 = "predefinedFeeKey")){validate11.errors = [{instancePath:instancePath+"/fees/" + i1,schemaPath:"#/$defs/Fee/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data36.amount !== undefined){let data37 = data36.amount;const _errs83 = errors;if(!((typeof data37 == "number") && (isFinite(data37)))){validate11.errors = [{instancePath:instancePath+"/fees/" + i1+"/amount",schemaPath:"#/$defs/Fee/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid14 = _errs83 === errors;}else {var valid14 = true;}if(valid14){if(data36.name !== undefined){const _errs85 = errors;if(typeof data36.name !== "string"){validate11.errors = [{instancePath:instancePath+"/fees/" + i1+"/name",schemaPath:"#/$defs/Fee/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs85 === errors;}else {var valid14 = true;}if(valid14){if(data36.predefinedFeeKey !== undefined){const _errs87 = errors;if(typeof data36.predefinedFeeKey !== "string"){validate11.errors = [{instancePath:instancePath+"/fees/" + i1+"/predefinedFeeKey",schemaPath:"#/$defs/Fee/properties/predefinedFeeKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs87 === errors;}else {var valid14 = true;}if(valid14){if(data36.taxAmount !== undefined){let data40 = data36.taxAmount;const _errs89 = errors;if(!((typeof data40 == "number") && (isFinite(data40)))){validate11.errors = [{instancePath:instancePath+"/fees/" + i1+"/taxAmount",schemaPath:"#/$defs/Fee/properties/taxAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid14 = _errs89 === errors;}else {var valid14 = true;}if(valid14){if(data36.trigger !== undefined){const _errs91 = errors;let valid15;valid15 = false;for(const v2 of schema19.properties.trigger.enum){if(func0(data36.trigger, v2)){valid15 = true;break;}}if(!valid15){validate11.errors = [{instancePath:instancePath+"/fees/" + i1+"/trigger",schemaPath:"#/$defs/Fee/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema19.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid14 = _errs91 === errors;}else {var valid14 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/fees/" + i1,schemaPath:"#/$defs/Fee/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid12 = _errs79 === errors;if(!valid12){break;}}}else {validate11.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs77 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs92 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs92 === errors;}else {var valid0 = true;}if(valid0){if(data.installmentEncodedKey !== undefined){const _errs94 = errors;if(typeof data.installmentEncodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/installmentEncodedKey",schemaPath:"#/properties/installmentEncodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs94 === errors;}else {var valid0 = true;}if(valid0){if(data.migrationEventKey !== undefined){const _errs96 = errors;if(typeof data.migrationEventKey !== "string"){validate11.errors = [{instancePath:instancePath+"/migrationEventKey",schemaPath:"#/properties/migrationEventKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs96 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){const _errs98 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs98 === errors;}else {var valid0 = true;}if(valid0){if(data.originalAmount !== undefined){let data46 = data.originalAmount;const _errs100 = errors;if(!((typeof data46 == "number") && (isFinite(data46)))){validate11.errors = [{instancePath:instancePath+"/originalAmount",schemaPath:"#/properties/originalAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs100 === errors;}else {var valid0 = true;}if(valid0){if(data.originalCurrencyCode !== undefined){const _errs102 = errors;if(typeof data.originalCurrencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/originalCurrencyCode",schemaPath:"#/properties/originalCurrencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs102 === errors;}else {var valid0 = true;}if(valid0){if(data.originalTransactionKey !== undefined){const _errs104 = errors;if(typeof data.originalTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/originalTransactionKey",schemaPath:"#/properties/originalTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs104 === errors;}else {var valid0 = true;}if(valid0){if(data.parentAccountKey !== undefined){const _errs106 = errors;if(typeof data.parentAccountKey !== "string"){validate11.errors = [{instancePath:instancePath+"/parentAccountKey",schemaPath:"#/properties/parentAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs106 === errors;}else {var valid0 = true;}if(valid0){if(data.parentLoanTransactionKey !== undefined){const _errs108 = errors;if(typeof data.parentLoanTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/parentLoanTransactionKey",schemaPath:"#/properties/parentLoanTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs108 === errors;}else {var valid0 = true;}if(valid0){if(data.prepaymentRecalculationMethod !== undefined){const _errs110 = errors;let valid16;valid16 = false;for(const v3 of schema12.properties.prepaymentRecalculationMethod.enum){if(func0(data.prepaymentRecalculationMethod, v3)){valid16 = true;break;}}if(!valid16){validate11.errors = [{instancePath:instancePath+"/prepaymentRecalculationMethod",schemaPath:"#/properties/prepaymentRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema12.properties.prepaymentRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs110 === errors;}else {var valid0 = true;}if(valid0){if(data.taxes !== undefined){let data52 = data.taxes;const _errs111 = errors;const _errs112 = errors;if(errors === _errs112){if(data52 && typeof data52 == "object" && !Array.isArray(data52)){if(data52.deferredTaxOnInterestAmount !== undefined){let data53 = data52.deferredTaxOnInterestAmount;const _errs115 = errors;if(!((typeof data53 == "number") && (isFinite(data53)))){validate11.errors = [{instancePath:instancePath+"/taxes/deferredTaxOnInterestAmount",schemaPath:"#/$defs/Taxes/properties/deferredTaxOnInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs115 === errors;}else {var valid18 = true;}if(valid18){if(data52.taxOnFeesAmount !== undefined){let data54 = data52.taxOnFeesAmount;const _errs117 = errors;if(!((typeof data54 == "number") && (isFinite(data54)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnFeesAmount",schemaPath:"#/$defs/Taxes/properties/taxOnFeesAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs117 === errors;}else {var valid18 = true;}if(valid18){if(data52.taxOnInterestAmount !== undefined){let data55 = data52.taxOnInterestAmount;const _errs119 = errors;if(!((typeof data55 == "number") && (isFinite(data55)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnInterestAmount",schemaPath:"#/$defs/Taxes/properties/taxOnInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs119 === errors;}else {var valid18 = true;}if(valid18){if(data52.taxOnInterestFromArrearsAmount !== undefined){let data56 = data52.taxOnInterestFromArrearsAmount;const _errs121 = errors;if(!((typeof data56 == "number") && (isFinite(data56)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnInterestFromArrearsAmount",schemaPath:"#/$defs/Taxes/properties/taxOnInterestFromArrearsAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs121 === errors;}else {var valid18 = true;}if(valid18){if(data52.taxOnPaymentHolidaysInterest !== undefined){let data57 = data52.taxOnPaymentHolidaysInterest;const _errs123 = errors;if(!((typeof data57 == "number") && (isFinite(data57)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnPaymentHolidaysInterest",schemaPath:"#/$defs/Taxes/properties/taxOnPaymentHolidaysInterest/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs123 === errors;}else {var valid18 = true;}if(valid18){if(data52.taxOnPenaltyAmount !== undefined){let data58 = data52.taxOnPenaltyAmount;const _errs125 = errors;if(!((typeof data58 == "number") && (isFinite(data58)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnPenaltyAmount",schemaPath:"#/$defs/Taxes/properties/taxOnPenaltyAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs125 === errors;}else {var valid18 = true;}if(valid18){if(data52.taxRate !== undefined){let data59 = data52.taxRate;const _errs127 = errors;if(!((typeof data59 == "number") && (isFinite(data59)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxRate",schemaPath:"#/$defs/Taxes/properties/taxRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid18 = _errs127 === errors;}else {var valid18 = true;}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/taxes",schemaPath:"#/$defs/Taxes/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs111 === errors;}else {var valid0 = true;}if(valid0){if(data.terms !== undefined){const _errs129 = errors;if(!(validate14(data.terms, {instancePath:instancePath+"/terms",parentData:data,parentDataProperty:"terms",rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid0 = _errs129 === errors;}else {var valid0 = true;}if(valid0){if(data.tillKey !== undefined){const _errs130 = errors;if(typeof data.tillKey !== "string"){validate11.errors = [{instancePath:instancePath+"/tillKey",schemaPath:"#/properties/tillKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs130 === errors;}else {var valid0 = true;}if(valid0){if(data.transactionDetails !== undefined){let data62 = data.transactionDetails;const _errs132 = errors;const _errs133 = errors;if(errors === _errs133){if(data62 && typeof data62 == "object" && !Array.isArray(data62)){if(data62.transactionChannelId !== undefined){const _errs136 = errors;if(typeof data62.transactionChannelId !== "string"){validate11.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelId",schemaPath:"#/$defs/TransactionDetails/properties/transactionChannelId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid20 = _errs136 === errors;}else {var valid20 = true;}if(valid20){if(data62.transactionChannelKey !== undefined){const _errs138 = errors;if(typeof data62.transactionChannelKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelKey",schemaPath:"#/$defs/TransactionDetails/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid20 = _errs138 === errors;}else {var valid20 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/transactionDetails",schemaPath:"#/$defs/TransactionDetails/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs132 === errors;}else {var valid0 = true;}if(valid0){if(data.transferDetails !== undefined){let data65 = data.transferDetails;const _errs140 = errors;const _errs141 = errors;if(errors === _errs141){if(data65 && typeof data65 == "object" && !Array.isArray(data65)){if(data65.linkedDepositTransactionKey !== undefined){const _errs144 = errors;if(typeof data65.linkedDepositTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transferDetails/linkedDepositTransactionKey",schemaPath:"#/$defs/TransferDetails/properties/linkedDepositTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid22 = _errs144 === errors;}else {var valid22 = true;}if(valid22){if(data65.linkedLoanTransactionKey !== undefined){const _errs146 = errors;if(typeof data65.linkedLoanTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transferDetails/linkedLoanTransactionKey",schemaPath:"#/$defs/TransferDetails/properties/linkedLoanTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid22 = _errs146 === errors;}else {var valid22 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/transferDetails",schemaPath:"#/$defs/TransferDetails/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs140 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){const _errs148 = errors;let valid23;valid23 = false;for(const v4 of schema12.properties.type.enum){if(func0(data.type, v4)){valid23 = true;break;}}if(!valid23){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs148 === errors;}else {var valid0 = true;}if(valid0){if(data.userKey !== undefined){const _errs149 = errors;if(typeof data.userKey !== "string"){validate11.errors = [{instancePath:instancePath+"/userKey",schemaPath:"#/properties/userKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs149 === errors;}else {var valid0 = true;}if(valid0){if(data.valueDate !== undefined){let data70 = data.valueDate;const _errs151 = errors;if(errors === _errs151){if(errors === _errs151){if(typeof data70 === "string"){if(!(formats0.validate(data70))){validate11.errors = [{instancePath:instancePath+"/valueDate",schemaPath:"#/properties/valueDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/valueDate",schemaPath:"#/properties/valueDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs151 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.loanTransactions !== undefined){let data0 = data.loanTransactions;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs4 = errors;if(!(validate11(data0[i0], {instancePath:instancePath+"/loanTransactions/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/loanTransactions",schemaPath:"#/properties/loanTransactions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;