/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"searchResponse","type":"array","items":{"$ref":"#/$defs/LoanTransaction"},"$defs":{"LoanTransaction":{"type":"object","title":"LoanTransaction","description":"Represents the action performed on an Loan Account after which the account's amount changes its value.","properties":{"migrationEventKey":{"type":"string","title":"migrationEventKey","description":"The migration event encoded key associated with this loan account. If this account was imported, track which 'migration event' they came from"},"transactionDetails":{"title":"transactionDetails","$ref":"#/$defs/TransactionDetailsaf30"},"fees":{"type":"array","title":"fees","description":"All the amounts that have been applied or paid within this transaction and involved predefined fees","items":{"description":"All the amounts that have been applied or paid within this transaction and involved predefined fees","$ref":"#/$defs/Feeaf30"}},"notes":{"type":"string","title":"notes","description":"Extra notes about this loan transaction"},"affectedAmounts":{"title":"affectedAmounts","$ref":"#/$defs/LoanAffectedAmountsaf30"},"cardTransaction":{"title":"cardTransaction","$ref":"#/$defs/CardTransactionaf30"},"taxes":{"title":"taxes","$ref":"#/$defs/Taxesaf30"},"tillKey":{"type":"string","title":"tillKey","description":"The till key associated with this transaction"},"adjustmentTransactionKey":{"type":"string","title":"adjustmentTransactionKey","description":"The key of the loan transaction where the adjustment for this transaction was made (if any adjustment was involved)"},"type":{"title":"type","description":"The type of the loan transaction","enum":["IMPORT","DISBURSEMENT","DISBURSEMENT_ADJUSTMENT","WRITE_OFF","WRITE_OFF_ADJUSTMENT","REPAYMENT","PAYMENT_MADE","WITHDRAWAL_REDRAW","WITHDRAWAL_REDRAW_ADJUSTMENT","FEE_APPLIED","FEE_CHARGED","FEES_DUE_REDUCED","FEE_ADJUSTMENT","PENALTY_APPLIED","PENALTY_ADJUSTMENT","PENALTIES_DUE_REDUCED","REPAYMENT_ADJUSTMENT","PAYMENT_MADE_ADJUSTMENT","INTEREST_RATE_CHANGED","TAX_RATE_CHANGED","PENALTY_RATE_CHANGED","INTEREST_APPLIED","INTEREST_APPLIED_ADJUSTMENT","INTEREST_DUE_REDUCED","PENALTY_REDUCTION_ADJUSTMENT","FEE_REDUCTION_ADJUSTMENT","INTEREST_REDUCTION_ADJUSTMENT","DEFERRED_INTEREST_APPLIED","DEFERRED_INTEREST_APPLIED_ADJUSTMENT","DEFERRED_INTEREST_PAID","DEFERRED_INTEREST_PAID_ADJUSTMENT","INTEREST_LOCKED","FEE_LOCKED","PENALTY_LOCKED","INTEREST_UNLOCKED","FEE_UNLOCKED","PENALTY_UNLOCKED","REDRAW_TRANSFER","REDRAW_REPAYMENT","REDRAW_TRANSFER_ADJUSTMENT","REDRAW_REPAYMENT_ADJUSTMENT","TRANSFER","TRANSFER_ADJUSTMENT","BRANCH_CHANGED","TERMS_CHANGED","CARD_TRANSACTION_REVERSAL","CARD_TRANSACTION_REVERSAL_ADJUSTMENT","DUE_DATE_CHANGED","DUE_DATE_CHANGED_ADJUSTMENT","ACCOUNT_TERMINATED","ACCOUNT_TERMINATED_ADJUSTMENT"]},"branchKey":{"type":"string","title":"branchKey","description":"The branch where the transaction was performed"},"terms":{"title":"terms","$ref":"#/$defs/LoanTermsaf30"},"transferDetails":{"title":"transferDetails","$ref":"#/$defs/TransferDetailsaf30"},"parentLoanTransactionKey":{"type":"string","title":"parentLoanTransactionKey","description":"The key of the parent loan transaction"},"customPaymentAmounts":{"type":"array","title":"customPaymentAmounts","description":"The list of custom amounts which the user has paid within this transaction","items":{"description":"The list of custom amounts which the user has paid within this transaction","$ref":"#/$defs/CustomPaymentAmountaf30"}},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the loan transaction, auto generated, unique"},"currency":{"title":"currency","$ref":"#/$defs/Currencyaf30"},"id":{"type":"string","title":"id","description":"The id of the loan transaction, can be generated and customized, unique"},"originalCurrencyCode":{"type":"string","title":"originalCurrencyCode","description":"The currency in which this transaction was posted. The amounts are stored in the base currency, but the user could have enter it in a foreign currency"},"originalTransactionKey":{"type":"string","title":"originalTransactionKey","description":"The encodedKey of the transaction that was adjusted as part of this one. Available only for adjustment transactions"},"amount":{"type":"number","title":"amount","description":"The amount that was added/removed on loan account"},"centreKey":{"type":"string","title":"centreKey","description":"The center where the transaction was performed"},"externalId":{"type":"string","title":"externalId","description":"The external id of the loan transaction, customizable, unique"},"valueDate":{"type":"string","title":"valueDate","description":"Date of the entry (eg date of repayment or disbursal, etc.) (as Organization Time)","format":"date-time"},"creationDate":{"type":"string","title":"creationDate","description":"The date when this loan transaction was created","format":"date-time"},"userKey":{"type":"string","title":"userKey","description":"The user that performed the transaction"},"parentAccountKey":{"type":"string","title":"parentAccountKey","description":"The key of the parent loan account"},"originalAmount":{"type":"number","title":"originalAmount","description":"The amount that was posted in a foreign currency. This amount was converted using the exchange rate available at entry date and set into the amount field"},"accountBalances":{"title":"accountBalances","$ref":"#/$defs/TransactionBalancesaf30"},"bookingDate":{"type":"string","title":"bookingDate","description":"The date when corresponding JE is booked","format":"date-time"},"prepaymentRecalculationMethod":{"title":"prepaymentRecalculationMethod","description":"Prepayment recalculation method of this loan transaction","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]},"installmentEncodedKey":{"type":"string","title":"installmentEncodedKey","description":"The specific installment encoded key associated to this loan transaction"}},"additionalProperties":true},"TransactionDetailsaf30":{"type":"object","title":"TransactionDetailsaf30","description":"Contains the details about transaction including fields like transaction channel key and channel id","properties":{"transactionChannelId":{"type":"string","title":"transactionChannelId","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":true},"Feeaf30":{"type":"object","title":"Feeaf30","description":"An amount of predefined fee that was applied or paid on an account.","properties":{"name":{"type":"string","title":"name","description":"The name of the predefined fee"},"amount":{"type":"number","title":"amount","description":"The amount of the fee that was applied/paid in the transaction for the given predefined fee."},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","MONTHLY_FEE","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY"]},"taxAmount":{"type":"number","title":"taxAmount","description":"The amount of the taxes on fee that was applied/paid in the transaction."},"predefinedFeeKey":{"type":"string","title":"predefinedFeeKey","description":"The encoded key of the predefined fee, auto generated, unique"}},"required":["predefinedFeeKey"],"additionalProperties":true},"LoanAffectedAmountsaf30":{"type":"object","title":"LoanAffectedAmountsaf30","description":"The amounts affected after completing the loan transaction","properties":{"feesAmount":{"type":"number","title":"feesAmount","description":" How much fees was added/removed in account, within this transaction."},"fundersInterestAmount":{"type":"number","title":"fundersInterestAmount","description":"How much interest is given to the investors, within this transaction (only for p2p products)"},"organizationCommissionAmount":{"type":"number","title":"organizationCommissionAmount","description":"How much interest is given to the organization, within this transaction (only for p2p products)"},"deferredInterestAmount":{"type":"number","title":"deferredInterestAmount","description":"How much interest pre-paid was added/removed in account, within this transaction (including taxes)."},"interestAmount":{"type":"number","title":"interestAmount","description":"How much interest was added/removed in account, within this transaction (including taxes). If there is any deferred interest amount set in this transaction, that amount should be included in this field."},"paymentHolidaysInterestAmount":{"type":"number","title":"paymentHolidaysInterestAmount","description":"How much Payment Holidays interest was added/removed in account, within this transaction (including taxes)."},"penaltyAmount":{"type":"number","title":"penaltyAmount","description":"How much penalties was added/removed in account, within this transaction."},"principalAmount":{"type":"number","title":"principalAmount","description":"How much principal was added/removed in account, within this transaction."},"interestFromArrearsAmount":{"type":"number","title":"interestFromArrearsAmount","description":"How much interest from arrears was added/removed in account, within this transaction (including taxes)."}},"additionalProperties":true},"CardTransactionaf30":{"type":"object","title":"CardTransactionaf30","description":"A card transaction entry which will have a corresponding a financial transaction performed.","properties":{"externalReferenceId":{"type":"string","title":"externalReferenceId","description":"The external reference ID to be used to reference the card transaction in subsequent requests."},"amount":{"type":"number","title":"amount","description":"The amount of money to be withdrawn in the financial transaction."},"advice":{"type":"boolean","title":"advice","description":"Whether the given request should be accepted without balance validations."},"externalAuthorizationReferenceId":{"type":"string","title":"externalAuthorizationReferenceId","description":"The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."},"cardAcceptor":{"title":"cardAcceptor","$ref":"#/$defs/CardAcceptoraf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the entity, generated, globally unique"},"userTransactionTime":{"type":"string","title":"userTransactionTime","description":"The formatted time at which the user made this card transaction."},"currencyCode":{"type":"string","title":"currencyCode","description":"The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."},"cardToken":{"type":"string","title":"cardToken","description":"The reference token of the card."}},"required":["externalReferenceId","amount","advice"],"additionalProperties":true},"CardAcceptoraf30":{"type":"object","title":"CardAcceptoraf30","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"zip":{"type":"string","title":"zip","description":"The ZIP code of the location in which the card acceptor has the business."},"country":{"type":"string","title":"country","description":"The country in which the card acceptor has the business."},"city":{"type":"string","title":"city","description":"The city in which the card acceptor has the business."},"street":{"type":"string","title":"street","description":"The street in which the card acceptor has the business."},"name":{"type":"string","title":"name","description":"The name of the card acceptor."},"state":{"type":"string","title":"state","description":"The state in which the card acceptor has the business."},"mcc":{"type":"integer","title":"mcc","description":"The Merchant Category Code of the card acceptor."}},"additionalProperties":true},"Taxesaf30":{"type":"object","title":"Taxesaf30","description":"The taxes applied within a transaction.","properties":{"taxOnInterestFromArrearsAmount":{"type":"number","title":"taxOnInterestFromArrearsAmount","description":"The amount of taxes on the interest from arrears that were applied/paid in account, within this transaction."},"taxOnFeesAmount":{"type":"number","title":"taxOnFeesAmount","description":"How much taxes on the fees that were paid in this transaction were added/removed in account, within this transaction."},"taxRate":{"type":"number","title":"taxRate","description":"The tax rate that was set or changed in this transaction."},"taxOnPaymentHolidaysInterest":{"type":"number","title":"taxOnPaymentHolidaysInterest","description":"The amount of taxes on the Payment Holidays interest that were added/removed in account, within this transaction."},"taxOnInterestAmount":{"type":"number","title":"taxOnInterestAmount","description":"How much taxes on the interest that was paid in this transaction were added/removed in account, within this transaction."},"taxOnPenaltyAmount":{"type":"number","title":"taxOnPenaltyAmount","description":"How much taxes on the penalties that were paid in this transaction were added/removed in account, within this transaction."},"deferredTaxOnInterestAmount":{"type":"number","title":"deferredTaxOnInterestAmount","description":"How much taxes on the interest that was pre-paid were added/removed in account, within this transaction. If there is any deferred tax on interest amount set in this transaction, that amount should be included in this field."}},"additionalProperties":true},"LoanTermsaf30":{"type":"object","title":"LoanTermsaf30","description":"The loan transaction terms","properties":{"interestSettings":{"title":"interestSettings","$ref":"#/$defs/TransactionInterestSettingsaf30"},"periodicPayment":{"type":"number","title":"periodicPayment","description":"The periodic payment value logged when changing it for a Balloon Payments account"},"principalPaymentAmount":{"type":"number","title":"principalPaymentAmount","description":"The principal payment flat amount logged when changing it for a Revolving Credit account"},"principalPaymentPercentage":{"type":"number","title":"principalPaymentPercentage","description":"The principal payment percentage value logged when changing it for a Revolving Credit account"}},"additionalProperties":true},"TransactionInterestSettingsaf30":{"type":"object","title":"TransactionInterestSettingsaf30","description":"The interest settings, holds all the properties regarding interests for the loan account.","properties":{"interestRate":{"type":"number","title":"interestRate","description":"The interest rate. Represents the interest rate for the loan account. The interest on loans is accrued on a daily basis, which allows charging the clients only for the days they actually used the loan amount."},"indexInterestRate":{"type":"number","title":"indexInterestRate","description":"The value of the index interest rate"}},"additionalProperties":true},"TransferDetailsaf30":{"type":"object","title":"TransferDetailsaf30","description":"Represents the transfer details, such as the linked transaction key","properties":{"linkedLoanTransactionKey":{"type":"string","title":"linkedLoanTransactionKey","description":"The key of the related loan transaction"},"linkedDepositTransactionKey":{"type":"string","title":"linkedDepositTransactionKey","description":"The key of the related deposit transaction"}},"additionalProperties":true},"CustomPaymentAmountaf30":{"type":"object","title":"CustomPaymentAmountaf30","description":"Custom payment amount for a specific element type","properties":{"taxOnAmount":{"type":"number","title":"taxOnAmount","description":"The amount of the taxes paid in the transaction for the given type."},"amount":{"type":"number","title":"amount","description":"The amount of the payment paid in the transaction for the given type."},"predefinedFeeKey":{"type":"string","title":"predefinedFeeKey","description":"The encodedKey of the predefined fee to be paid."},"customPaymentAmountType":{"title":"customPaymentAmountType","description":"The type of the custom payment","enum":["PRINCIPAL","INTEREST","MANUAL_FEE","UPFRONT_DISBURSEMENT_FEE","LATE_REPAYMENT_FEE","PAYMENT_DUE_FEE","PENALTY"]}},"required":["amount","customPaymentAmountType"],"additionalProperties":true},"Currencyaf30":{"type":"object","title":"Currencyaf30","description":"Represents a currency eg. USD, EUR.","properties":{"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."},"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTC","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]}},"additionalProperties":true},"TransactionBalancesaf30":{"type":"object","title":"TransactionBalancesaf30","description":"The balances changed within a transaction.","properties":{"redrawBalance":{"type":"number","title":"redrawBalance","description":"The account redraw balance captured after the transaction update."},"principalBalance":{"type":"number","title":"principalBalance","description":"The account redraw balance captured after the transaction update."},"totalBalance":{"type":"number","title":"totalBalance","description":"The running balance still owed for the loan."},"expectedPrincipalRedraw":{"type":"number","title":"expectedPrincipalRedraw","description":"The difference between principal balance and redraw balance after each transaction performed on the loan account."},"advancePosition":{"type":"number","title":"advancePosition","description":"Captures the advance (prepaid) amount."},"arrearsPosition":{"type":"number","title":"arrearsPosition","description":"Captures the arrears position amount for the account in arrears."}},"additionalProperties":true}}};const schema12 = {"type":"object","title":"LoanTransaction","description":"Represents the action performed on an Loan Account after which the account's amount changes its value.","properties":{"migrationEventKey":{"type":"string","title":"migrationEventKey","description":"The migration event encoded key associated with this loan account. If this account was imported, track which 'migration event' they came from"},"transactionDetails":{"title":"transactionDetails","$ref":"#/$defs/TransactionDetailsaf30"},"fees":{"type":"array","title":"fees","description":"All the amounts that have been applied or paid within this transaction and involved predefined fees","items":{"description":"All the amounts that have been applied or paid within this transaction and involved predefined fees","$ref":"#/$defs/Feeaf30"}},"notes":{"type":"string","title":"notes","description":"Extra notes about this loan transaction"},"affectedAmounts":{"title":"affectedAmounts","$ref":"#/$defs/LoanAffectedAmountsaf30"},"cardTransaction":{"title":"cardTransaction","$ref":"#/$defs/CardTransactionaf30"},"taxes":{"title":"taxes","$ref":"#/$defs/Taxesaf30"},"tillKey":{"type":"string","title":"tillKey","description":"The till key associated with this transaction"},"adjustmentTransactionKey":{"type":"string","title":"adjustmentTransactionKey","description":"The key of the loan transaction where the adjustment for this transaction was made (if any adjustment was involved)"},"type":{"title":"type","description":"The type of the loan transaction","enum":["IMPORT","DISBURSEMENT","DISBURSEMENT_ADJUSTMENT","WRITE_OFF","WRITE_OFF_ADJUSTMENT","REPAYMENT","PAYMENT_MADE","WITHDRAWAL_REDRAW","WITHDRAWAL_REDRAW_ADJUSTMENT","FEE_APPLIED","FEE_CHARGED","FEES_DUE_REDUCED","FEE_ADJUSTMENT","PENALTY_APPLIED","PENALTY_ADJUSTMENT","PENALTIES_DUE_REDUCED","REPAYMENT_ADJUSTMENT","PAYMENT_MADE_ADJUSTMENT","INTEREST_RATE_CHANGED","TAX_RATE_CHANGED","PENALTY_RATE_CHANGED","INTEREST_APPLIED","INTEREST_APPLIED_ADJUSTMENT","INTEREST_DUE_REDUCED","PENALTY_REDUCTION_ADJUSTMENT","FEE_REDUCTION_ADJUSTMENT","INTEREST_REDUCTION_ADJUSTMENT","DEFERRED_INTEREST_APPLIED","DEFERRED_INTEREST_APPLIED_ADJUSTMENT","DEFERRED_INTEREST_PAID","DEFERRED_INTEREST_PAID_ADJUSTMENT","INTEREST_LOCKED","FEE_LOCKED","PENALTY_LOCKED","INTEREST_UNLOCKED","FEE_UNLOCKED","PENALTY_UNLOCKED","REDRAW_TRANSFER","REDRAW_REPAYMENT","REDRAW_TRANSFER_ADJUSTMENT","REDRAW_REPAYMENT_ADJUSTMENT","TRANSFER","TRANSFER_ADJUSTMENT","BRANCH_CHANGED","TERMS_CHANGED","CARD_TRANSACTION_REVERSAL","CARD_TRANSACTION_REVERSAL_ADJUSTMENT","DUE_DATE_CHANGED","DUE_DATE_CHANGED_ADJUSTMENT","ACCOUNT_TERMINATED","ACCOUNT_TERMINATED_ADJUSTMENT"]},"branchKey":{"type":"string","title":"branchKey","description":"The branch where the transaction was performed"},"terms":{"title":"terms","$ref":"#/$defs/LoanTermsaf30"},"transferDetails":{"title":"transferDetails","$ref":"#/$defs/TransferDetailsaf30"},"parentLoanTransactionKey":{"type":"string","title":"parentLoanTransactionKey","description":"The key of the parent loan transaction"},"customPaymentAmounts":{"type":"array","title":"customPaymentAmounts","description":"The list of custom amounts which the user has paid within this transaction","items":{"description":"The list of custom amounts which the user has paid within this transaction","$ref":"#/$defs/CustomPaymentAmountaf30"}},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the loan transaction, auto generated, unique"},"currency":{"title":"currency","$ref":"#/$defs/Currencyaf30"},"id":{"type":"string","title":"id","description":"The id of the loan transaction, can be generated and customized, unique"},"originalCurrencyCode":{"type":"string","title":"originalCurrencyCode","description":"The currency in which this transaction was posted. The amounts are stored in the base currency, but the user could have enter it in a foreign currency"},"originalTransactionKey":{"type":"string","title":"originalTransactionKey","description":"The encodedKey of the transaction that was adjusted as part of this one. Available only for adjustment transactions"},"amount":{"type":"number","title":"amount","description":"The amount that was added/removed on loan account"},"centreKey":{"type":"string","title":"centreKey","description":"The center where the transaction was performed"},"externalId":{"type":"string","title":"externalId","description":"The external id of the loan transaction, customizable, unique"},"valueDate":{"type":"string","title":"valueDate","description":"Date of the entry (eg date of repayment or disbursal, etc.) (as Organization Time)","format":"date-time"},"creationDate":{"type":"string","title":"creationDate","description":"The date when this loan transaction was created","format":"date-time"},"userKey":{"type":"string","title":"userKey","description":"The user that performed the transaction"},"parentAccountKey":{"type":"string","title":"parentAccountKey","description":"The key of the parent loan account"},"originalAmount":{"type":"number","title":"originalAmount","description":"The amount that was posted in a foreign currency. This amount was converted using the exchange rate available at entry date and set into the amount field"},"accountBalances":{"title":"accountBalances","$ref":"#/$defs/TransactionBalancesaf30"},"bookingDate":{"type":"string","title":"bookingDate","description":"The date when corresponding JE is booked","format":"date-time"},"prepaymentRecalculationMethod":{"title":"prepaymentRecalculationMethod","description":"Prepayment recalculation method of this loan transaction","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]},"installmentEncodedKey":{"type":"string","title":"installmentEncodedKey","description":"The specific installment encoded key associated to this loan transaction"}},"additionalProperties":true};const schema13 = {"type":"object","title":"TransactionDetailsaf30","description":"Contains the details about transaction including fields like transaction channel key and channel id","properties":{"transactionChannelId":{"type":"string","title":"transactionChannelId","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":true};const schema14 = {"type":"object","title":"Feeaf30","description":"An amount of predefined fee that was applied or paid on an account.","properties":{"name":{"type":"string","title":"name","description":"The name of the predefined fee"},"amount":{"type":"number","title":"amount","description":"The amount of the fee that was applied/paid in the transaction for the given predefined fee."},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","MONTHLY_FEE","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY"]},"taxAmount":{"type":"number","title":"taxAmount","description":"The amount of the taxes on fee that was applied/paid in the transaction."},"predefinedFeeKey":{"type":"string","title":"predefinedFeeKey","description":"The encoded key of the predefined fee, auto generated, unique"}},"required":["predefinedFeeKey"],"additionalProperties":true};const schema15 = {"type":"object","title":"LoanAffectedAmountsaf30","description":"The amounts affected after completing the loan transaction","properties":{"feesAmount":{"type":"number","title":"feesAmount","description":" How much fees was added/removed in account, within this transaction."},"fundersInterestAmount":{"type":"number","title":"fundersInterestAmount","description":"How much interest is given to the investors, within this transaction (only for p2p products)"},"organizationCommissionAmount":{"type":"number","title":"organizationCommissionAmount","description":"How much interest is given to the organization, within this transaction (only for p2p products)"},"deferredInterestAmount":{"type":"number","title":"deferredInterestAmount","description":"How much interest pre-paid was added/removed in account, within this transaction (including taxes)."},"interestAmount":{"type":"number","title":"interestAmount","description":"How much interest was added/removed in account, within this transaction (including taxes). If there is any deferred interest amount set in this transaction, that amount should be included in this field."},"paymentHolidaysInterestAmount":{"type":"number","title":"paymentHolidaysInterestAmount","description":"How much Payment Holidays interest was added/removed in account, within this transaction (including taxes)."},"penaltyAmount":{"type":"number","title":"penaltyAmount","description":"How much penalties was added/removed in account, within this transaction."},"principalAmount":{"type":"number","title":"principalAmount","description":"How much principal was added/removed in account, within this transaction."},"interestFromArrearsAmount":{"type":"number","title":"interestFromArrearsAmount","description":"How much interest from arrears was added/removed in account, within this transaction (including taxes)."}},"additionalProperties":true};const schema18 = {"type":"object","title":"Taxesaf30","description":"The taxes applied within a transaction.","properties":{"taxOnInterestFromArrearsAmount":{"type":"number","title":"taxOnInterestFromArrearsAmount","description":"The amount of taxes on the interest from arrears that were applied/paid in account, within this transaction."},"taxOnFeesAmount":{"type":"number","title":"taxOnFeesAmount","description":"How much taxes on the fees that were paid in this transaction were added/removed in account, within this transaction."},"taxRate":{"type":"number","title":"taxRate","description":"The tax rate that was set or changed in this transaction."},"taxOnPaymentHolidaysInterest":{"type":"number","title":"taxOnPaymentHolidaysInterest","description":"The amount of taxes on the Payment Holidays interest that were added/removed in account, within this transaction."},"taxOnInterestAmount":{"type":"number","title":"taxOnInterestAmount","description":"How much taxes on the interest that was paid in this transaction were added/removed in account, within this transaction."},"taxOnPenaltyAmount":{"type":"number","title":"taxOnPenaltyAmount","description":"How much taxes on the penalties that were paid in this transaction were added/removed in account, within this transaction."},"deferredTaxOnInterestAmount":{"type":"number","title":"deferredTaxOnInterestAmount","description":"How much taxes on the interest that was pre-paid were added/removed in account, within this transaction. If there is any deferred tax on interest amount set in this transaction, that amount should be included in this field."}},"additionalProperties":true};const schema21 = {"type":"object","title":"TransferDetailsaf30","description":"Represents the transfer details, such as the linked transaction key","properties":{"linkedLoanTransactionKey":{"type":"string","title":"linkedLoanTransactionKey","description":"The key of the related loan transaction"},"linkedDepositTransactionKey":{"type":"string","title":"linkedDepositTransactionKey","description":"The key of the related deposit transaction"}},"additionalProperties":true};const schema22 = {"type":"object","title":"CustomPaymentAmountaf30","description":"Custom payment amount for a specific element type","properties":{"taxOnAmount":{"type":"number","title":"taxOnAmount","description":"The amount of the taxes paid in the transaction for the given type."},"amount":{"type":"number","title":"amount","description":"The amount of the payment paid in the transaction for the given type."},"predefinedFeeKey":{"type":"string","title":"predefinedFeeKey","description":"The encodedKey of the predefined fee to be paid."},"customPaymentAmountType":{"title":"customPaymentAmountType","description":"The type of the custom payment","enum":["PRINCIPAL","INTEREST","MANUAL_FEE","UPFRONT_DISBURSEMENT_FEE","LATE_REPAYMENT_FEE","PAYMENT_DUE_FEE","PENALTY"]}},"required":["amount","customPaymentAmountType"],"additionalProperties":true};const schema23 = {"type":"object","title":"Currencyaf30","description":"Represents a currency eg. USD, EUR.","properties":{"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."},"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTC","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]}},"additionalProperties":true};const schema24 = {"type":"object","title":"TransactionBalancesaf30","description":"The balances changed within a transaction.","properties":{"redrawBalance":{"type":"number","title":"redrawBalance","description":"The account redraw balance captured after the transaction update."},"principalBalance":{"type":"number","title":"principalBalance","description":"The account redraw balance captured after the transaction update."},"totalBalance":{"type":"number","title":"totalBalance","description":"The running balance still owed for the loan."},"expectedPrincipalRedraw":{"type":"number","title":"expectedPrincipalRedraw","description":"The difference between principal balance and redraw balance after each transaction performed on the loan account."},"advancePosition":{"type":"number","title":"advancePosition","description":"Captures the advance (prepaid) amount."},"arrearsPosition":{"type":"number","title":"arrearsPosition","description":"Captures the arrears position amount for the account in arrears."}},"additionalProperties":true};const func0 = require("ajv/dist/runtime/equal").default;const schema16 = {"type":"object","title":"CardTransactionaf30","description":"A card transaction entry which will have a corresponding a financial transaction performed.","properties":{"externalReferenceId":{"type":"string","title":"externalReferenceId","description":"The external reference ID to be used to reference the card transaction in subsequent requests."},"amount":{"type":"number","title":"amount","description":"The amount of money to be withdrawn in the financial transaction."},"advice":{"type":"boolean","title":"advice","description":"Whether the given request should be accepted without balance validations."},"externalAuthorizationReferenceId":{"type":"string","title":"externalAuthorizationReferenceId","description":"The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."},"cardAcceptor":{"title":"cardAcceptor","$ref":"#/$defs/CardAcceptoraf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the entity, generated, globally unique"},"userTransactionTime":{"type":"string","title":"userTransactionTime","description":"The formatted time at which the user made this card transaction."},"currencyCode":{"type":"string","title":"currencyCode","description":"The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."},"cardToken":{"type":"string","title":"cardToken","description":"The reference token of the card."}},"required":["externalReferenceId","amount","advice"],"additionalProperties":true};const schema17 = {"type":"object","title":"CardAcceptoraf30","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"zip":{"type":"string","title":"zip","description":"The ZIP code of the location in which the card acceptor has the business."},"country":{"type":"string","title":"country","description":"The country in which the card acceptor has the business."},"city":{"type":"string","title":"city","description":"The city in which the card acceptor has the business."},"street":{"type":"string","title":"street","description":"The street in which the card acceptor has the business."},"name":{"type":"string","title":"name","description":"The name of the card acceptor."},"state":{"type":"string","title":"state","description":"The state in which the card acceptor has the business."},"mcc":{"type":"integer","title":"mcc","description":"The Merchant Category Code of the card acceptor."}},"additionalProperties":true};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.externalReferenceId === undefined) && (missing0 = "externalReferenceId")) || ((data.amount === undefined) && (missing0 = "amount"))) || ((data.advice === undefined) && (missing0 = "advice"))){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.externalReferenceId !== undefined){const _errs2 = errors;if(typeof data.externalReferenceId !== "string"){validate12.errors = [{instancePath:instancePath+"/externalReferenceId",schemaPath:"#/properties/externalReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data1 = data.amount;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate12.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.advice !== undefined){const _errs6 = errors;if(typeof data.advice !== "boolean"){validate12.errors = [{instancePath:instancePath+"/advice",schemaPath:"#/properties/advice/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.externalAuthorizationReferenceId !== undefined){const _errs8 = errors;if(typeof data.externalAuthorizationReferenceId !== "string"){validate12.errors = [{instancePath:instancePath+"/externalAuthorizationReferenceId",schemaPath:"#/properties/externalAuthorizationReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.cardAcceptor !== undefined){let data4 = data.cardAcceptor;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.zip !== undefined){const _errs14 = errors;if(typeof data4.zip !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/zip",schemaPath:"#/$defs/CardAcceptoraf30/properties/zip/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data4.country !== undefined){const _errs16 = errors;if(typeof data4.country !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/country",schemaPath:"#/$defs/CardAcceptoraf30/properties/country/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data4.city !== undefined){const _errs18 = errors;if(typeof data4.city !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/city",schemaPath:"#/$defs/CardAcceptoraf30/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data4.street !== undefined){const _errs20 = errors;if(typeof data4.street !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/street",schemaPath:"#/$defs/CardAcceptoraf30/properties/street/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data4.name !== undefined){const _errs22 = errors;if(typeof data4.name !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/name",schemaPath:"#/$defs/CardAcceptoraf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}if(valid2){if(data4.state !== undefined){const _errs24 = errors;if(typeof data4.state !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/state",schemaPath:"#/$defs/CardAcceptoraf30/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs24 === errors;}else {var valid2 = true;}if(valid2){if(data4.mcc !== undefined){let data11 = data4.mcc;const _errs26 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/mcc",schemaPath:"#/$defs/CardAcceptoraf30/properties/mcc/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs26 === errors;}else {var valid2 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/cardAcceptor",schemaPath:"#/$defs/CardAcceptoraf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs28 = errors;if(typeof data.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.userTransactionTime !== undefined){const _errs30 = errors;if(typeof data.userTransactionTime !== "string"){validate12.errors = [{instancePath:instancePath+"/userTransactionTime",schemaPath:"#/properties/userTransactionTime/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.currencyCode !== undefined){const _errs32 = errors;if(typeof data.currencyCode !== "string"){validate12.errors = [{instancePath:instancePath+"/currencyCode",schemaPath:"#/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.cardToken !== undefined){const _errs34 = errors;if(typeof data.cardToken !== "string"){validate12.errors = [{instancePath:instancePath+"/cardToken",schemaPath:"#/properties/cardToken/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema19 = {"type":"object","title":"LoanTermsaf30","description":"The loan transaction terms","properties":{"interestSettings":{"title":"interestSettings","$ref":"#/$defs/TransactionInterestSettingsaf30"},"periodicPayment":{"type":"number","title":"periodicPayment","description":"The periodic payment value logged when changing it for a Balloon Payments account"},"principalPaymentAmount":{"type":"number","title":"principalPaymentAmount","description":"The principal payment flat amount logged when changing it for a Revolving Credit account"},"principalPaymentPercentage":{"type":"number","title":"principalPaymentPercentage","description":"The principal payment percentage value logged when changing it for a Revolving Credit account"}},"additionalProperties":true};const schema20 = {"type":"object","title":"TransactionInterestSettingsaf30","description":"The interest settings, holds all the properties regarding interests for the loan account.","properties":{"interestRate":{"type":"number","title":"interestRate","description":"The interest rate. Represents the interest rate for the loan account. The interest on loans is accrued on a daily basis, which allows charging the clients only for the days they actually used the loan amount."},"indexInterestRate":{"type":"number","title":"indexInterestRate","description":"The value of the index interest rate"}},"additionalProperties":true};function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestSettings !== undefined){let data0 = data.interestSettings;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.interestRate !== undefined){let data1 = data0.interestRate;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate14.errors = [{instancePath:instancePath+"/interestSettings/interestRate",schemaPath:"#/$defs/TransactionInterestSettingsaf30/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.indexInterestRate !== undefined){let data2 = data0.indexInterestRate;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate14.errors = [{instancePath:instancePath+"/interestSettings/indexInterestRate",schemaPath:"#/$defs/TransactionInterestSettingsaf30/properties/indexInterestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}else {validate14.errors = [{instancePath:instancePath+"/interestSettings",schemaPath:"#/$defs/TransactionInterestSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.periodicPayment !== undefined){let data3 = data.periodicPayment;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate14.errors = [{instancePath:instancePath+"/periodicPayment",schemaPath:"#/properties/periodicPayment/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentAmount !== undefined){let data4 = data.principalPaymentAmount;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate14.errors = [{instancePath:instancePath+"/principalPaymentAmount",schemaPath:"#/properties/principalPaymentAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentPercentage !== undefined){let data5 = data.principalPaymentPercentage;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate14.errors = [{instancePath:instancePath+"/principalPaymentPercentage",schemaPath:"#/properties/principalPaymentPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.migrationEventKey !== undefined){const _errs2 = errors;if(typeof data.migrationEventKey !== "string"){validate11.errors = [{instancePath:instancePath+"/migrationEventKey",schemaPath:"#/properties/migrationEventKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.transactionDetails !== undefined){let data1 = data.transactionDetails;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.transactionChannelId !== undefined){const _errs8 = errors;if(typeof data1.transactionChannelId !== "string"){validate11.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelId",schemaPath:"#/$defs/TransactionDetailsaf30/properties/transactionChannelId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data1.transactionChannelKey !== undefined){const _errs10 = errors;if(typeof data1.transactionChannelKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelKey",schemaPath:"#/$defs/TransactionDetailsaf30/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/transactionDetails",schemaPath:"#/$defs/TransactionDetailsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.fees !== undefined){let data4 = data.fees;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data4)){var valid3 = true;const len0 = data4.length;for(let i0=0; i0<len0; i0++){let data5 = data4[i0];const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing0;if((data5.predefinedFeeKey === undefined) && (missing0 = "predefinedFeeKey")){validate11.errors = [{instancePath:instancePath+"/fees/" + i0,schemaPath:"#/$defs/Feeaf30/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data5.name !== undefined){const _errs18 = errors;if(typeof data5.name !== "string"){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/name",schemaPath:"#/$defs/Feeaf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs18 === errors;}else {var valid5 = true;}if(valid5){if(data5.amount !== undefined){let data7 = data5.amount;const _errs20 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/amount",schemaPath:"#/$defs/Feeaf30/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid5 = _errs20 === errors;}else {var valid5 = true;}if(valid5){if(data5.trigger !== undefined){const _errs22 = errors;let valid6;valid6 = false;for(const v0 of schema14.properties.trigger.enum){if(func0(data5.trigger, v0)){valid6 = true;break;}}if(!valid6){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/trigger",schemaPath:"#/$defs/Feeaf30/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema14.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid5 = _errs22 === errors;}else {var valid5 = true;}if(valid5){if(data5.taxAmount !== undefined){let data9 = data5.taxAmount;const _errs23 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/taxAmount",schemaPath:"#/$defs/Feeaf30/properties/taxAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid5 = _errs23 === errors;}else {var valid5 = true;}if(valid5){if(data5.predefinedFeeKey !== undefined){const _errs25 = errors;if(typeof data5.predefinedFeeKey !== "string"){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/predefinedFeeKey",schemaPath:"#/$defs/Feeaf30/properties/predefinedFeeKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs25 === errors;}else {var valid5 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/fees/" + i0,schemaPath:"#/$defs/Feeaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs14 === errors;if(!valid3){break;}}}else {validate11.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){const _errs27 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.affectedAmounts !== undefined){let data12 = data.affectedAmounts;const _errs29 = errors;const _errs30 = errors;if(errors === _errs30){if(data12 && typeof data12 == "object" && !Array.isArray(data12)){if(data12.feesAmount !== undefined){let data13 = data12.feesAmount;const _errs33 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/feesAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/feesAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs33 === errors;}else {var valid8 = true;}if(valid8){if(data12.fundersInterestAmount !== undefined){let data14 = data12.fundersInterestAmount;const _errs35 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/fundersInterestAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/fundersInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs35 === errors;}else {var valid8 = true;}if(valid8){if(data12.organizationCommissionAmount !== undefined){let data15 = data12.organizationCommissionAmount;const _errs37 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/organizationCommissionAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/organizationCommissionAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs37 === errors;}else {var valid8 = true;}if(valid8){if(data12.deferredInterestAmount !== undefined){let data16 = data12.deferredInterestAmount;const _errs39 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/deferredInterestAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/deferredInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs39 === errors;}else {var valid8 = true;}if(valid8){if(data12.interestAmount !== undefined){let data17 = data12.interestAmount;const _errs41 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/interestAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/interestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs41 === errors;}else {var valid8 = true;}if(valid8){if(data12.paymentHolidaysInterestAmount !== undefined){let data18 = data12.paymentHolidaysInterestAmount;const _errs43 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/paymentHolidaysInterestAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/paymentHolidaysInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs43 === errors;}else {var valid8 = true;}if(valid8){if(data12.penaltyAmount !== undefined){let data19 = data12.penaltyAmount;const _errs45 = errors;if(!((typeof data19 == "number") && (isFinite(data19)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/penaltyAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/penaltyAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs45 === errors;}else {var valid8 = true;}if(valid8){if(data12.principalAmount !== undefined){let data20 = data12.principalAmount;const _errs47 = errors;if(!((typeof data20 == "number") && (isFinite(data20)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/principalAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/principalAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs47 === errors;}else {var valid8 = true;}if(valid8){if(data12.interestFromArrearsAmount !== undefined){let data21 = data12.interestFromArrearsAmount;const _errs49 = errors;if(!((typeof data21 == "number") && (isFinite(data21)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/interestFromArrearsAmount",schemaPath:"#/$defs/LoanAffectedAmountsaf30/properties/interestFromArrearsAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs49 === errors;}else {var valid8 = true;}}}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/affectedAmounts",schemaPath:"#/$defs/LoanAffectedAmountsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.cardTransaction !== undefined){const _errs51 = errors;if(!(validate12(data.cardTransaction, {instancePath:instancePath+"/cardTransaction",parentData:data,parentDataProperty:"cardTransaction",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.taxes !== undefined){let data23 = data.taxes;const _errs52 = errors;const _errs53 = errors;if(errors === _errs53){if(data23 && typeof data23 == "object" && !Array.isArray(data23)){if(data23.taxOnInterestFromArrearsAmount !== undefined){let data24 = data23.taxOnInterestFromArrearsAmount;const _errs56 = errors;if(!((typeof data24 == "number") && (isFinite(data24)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnInterestFromArrearsAmount",schemaPath:"#/$defs/Taxesaf30/properties/taxOnInterestFromArrearsAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs56 === errors;}else {var valid10 = true;}if(valid10){if(data23.taxOnFeesAmount !== undefined){let data25 = data23.taxOnFeesAmount;const _errs58 = errors;if(!((typeof data25 == "number") && (isFinite(data25)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnFeesAmount",schemaPath:"#/$defs/Taxesaf30/properties/taxOnFeesAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs58 === errors;}else {var valid10 = true;}if(valid10){if(data23.taxRate !== undefined){let data26 = data23.taxRate;const _errs60 = errors;if(!((typeof data26 == "number") && (isFinite(data26)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxRate",schemaPath:"#/$defs/Taxesaf30/properties/taxRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs60 === errors;}else {var valid10 = true;}if(valid10){if(data23.taxOnPaymentHolidaysInterest !== undefined){let data27 = data23.taxOnPaymentHolidaysInterest;const _errs62 = errors;if(!((typeof data27 == "number") && (isFinite(data27)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnPaymentHolidaysInterest",schemaPath:"#/$defs/Taxesaf30/properties/taxOnPaymentHolidaysInterest/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs62 === errors;}else {var valid10 = true;}if(valid10){if(data23.taxOnInterestAmount !== undefined){let data28 = data23.taxOnInterestAmount;const _errs64 = errors;if(!((typeof data28 == "number") && (isFinite(data28)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnInterestAmount",schemaPath:"#/$defs/Taxesaf30/properties/taxOnInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs64 === errors;}else {var valid10 = true;}if(valid10){if(data23.taxOnPenaltyAmount !== undefined){let data29 = data23.taxOnPenaltyAmount;const _errs66 = errors;if(!((typeof data29 == "number") && (isFinite(data29)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxOnPenaltyAmount",schemaPath:"#/$defs/Taxesaf30/properties/taxOnPenaltyAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs66 === errors;}else {var valid10 = true;}if(valid10){if(data23.deferredTaxOnInterestAmount !== undefined){let data30 = data23.deferredTaxOnInterestAmount;const _errs68 = errors;if(!((typeof data30 == "number") && (isFinite(data30)))){validate11.errors = [{instancePath:instancePath+"/taxes/deferredTaxOnInterestAmount",schemaPath:"#/$defs/Taxesaf30/properties/deferredTaxOnInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs68 === errors;}else {var valid10 = true;}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/taxes",schemaPath:"#/$defs/Taxesaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs52 === errors;}else {var valid0 = true;}if(valid0){if(data.tillKey !== undefined){const _errs70 = errors;if(typeof data.tillKey !== "string"){validate11.errors = [{instancePath:instancePath+"/tillKey",schemaPath:"#/properties/tillKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs70 === errors;}else {var valid0 = true;}if(valid0){if(data.adjustmentTransactionKey !== undefined){const _errs72 = errors;if(typeof data.adjustmentTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/adjustmentTransactionKey",schemaPath:"#/properties/adjustmentTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs72 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){const _errs74 = errors;let valid11;valid11 = false;for(const v1 of schema12.properties.type.enum){if(func0(data.type, v1)){valid11 = true;break;}}if(!valid11){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs74 === errors;}else {var valid0 = true;}if(valid0){if(data.branchKey !== undefined){const _errs75 = errors;if(typeof data.branchKey !== "string"){validate11.errors = [{instancePath:instancePath+"/branchKey",schemaPath:"#/properties/branchKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs75 === errors;}else {var valid0 = true;}if(valid0){if(data.terms !== undefined){const _errs77 = errors;if(!(validate14(data.terms, {instancePath:instancePath+"/terms",parentData:data,parentDataProperty:"terms",rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid0 = _errs77 === errors;}else {var valid0 = true;}if(valid0){if(data.transferDetails !== undefined){let data36 = data.transferDetails;const _errs78 = errors;const _errs79 = errors;if(errors === _errs79){if(data36 && typeof data36 == "object" && !Array.isArray(data36)){if(data36.linkedLoanTransactionKey !== undefined){const _errs82 = errors;if(typeof data36.linkedLoanTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transferDetails/linkedLoanTransactionKey",schemaPath:"#/$defs/TransferDetailsaf30/properties/linkedLoanTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid13 = _errs82 === errors;}else {var valid13 = true;}if(valid13){if(data36.linkedDepositTransactionKey !== undefined){const _errs84 = errors;if(typeof data36.linkedDepositTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transferDetails/linkedDepositTransactionKey",schemaPath:"#/$defs/TransferDetailsaf30/properties/linkedDepositTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid13 = _errs84 === errors;}else {var valid13 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/transferDetails",schemaPath:"#/$defs/TransferDetailsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs78 === errors;}else {var valid0 = true;}if(valid0){if(data.parentLoanTransactionKey !== undefined){const _errs86 = errors;if(typeof data.parentLoanTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/parentLoanTransactionKey",schemaPath:"#/properties/parentLoanTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs86 === errors;}else {var valid0 = true;}if(valid0){if(data.customPaymentAmounts !== undefined){let data40 = data.customPaymentAmounts;const _errs88 = errors;if(errors === _errs88){if(Array.isArray(data40)){var valid14 = true;const len1 = data40.length;for(let i1=0; i1<len1; i1++){let data41 = data40[i1];const _errs90 = errors;const _errs91 = errors;if(errors === _errs91){if(data41 && typeof data41 == "object" && !Array.isArray(data41)){let missing1;if(((data41.amount === undefined) && (missing1 = "amount")) || ((data41.customPaymentAmountType === undefined) && (missing1 = "customPaymentAmountType"))){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i1,schemaPath:"#/$defs/CustomPaymentAmountaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data41.taxOnAmount !== undefined){let data42 = data41.taxOnAmount;const _errs94 = errors;if(!((typeof data42 == "number") && (isFinite(data42)))){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i1+"/taxOnAmount",schemaPath:"#/$defs/CustomPaymentAmountaf30/properties/taxOnAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid16 = _errs94 === errors;}else {var valid16 = true;}if(valid16){if(data41.amount !== undefined){let data43 = data41.amount;const _errs96 = errors;if(!((typeof data43 == "number") && (isFinite(data43)))){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i1+"/amount",schemaPath:"#/$defs/CustomPaymentAmountaf30/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid16 = _errs96 === errors;}else {var valid16 = true;}if(valid16){if(data41.predefinedFeeKey !== undefined){const _errs98 = errors;if(typeof data41.predefinedFeeKey !== "string"){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i1+"/predefinedFeeKey",schemaPath:"#/$defs/CustomPaymentAmountaf30/properties/predefinedFeeKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid16 = _errs98 === errors;}else {var valid16 = true;}if(valid16){if(data41.customPaymentAmountType !== undefined){const _errs100 = errors;let valid17;valid17 = false;for(const v2 of schema22.properties.customPaymentAmountType.enum){if(func0(data41.customPaymentAmountType, v2)){valid17 = true;break;}}if(!valid17){validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i1+"/customPaymentAmountType",schemaPath:"#/$defs/CustomPaymentAmountaf30/properties/customPaymentAmountType/enum",keyword:"enum",params:{allowedValues: schema22.properties.customPaymentAmountType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid16 = _errs100 === errors;}else {var valid16 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts/" + i1,schemaPath:"#/$defs/CustomPaymentAmountaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid14 = _errs90 === errors;if(!valid14){break;}}}else {validate11.errors = [{instancePath:instancePath+"/customPaymentAmounts",schemaPath:"#/properties/customPaymentAmounts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs88 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs101 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs101 === errors;}else {var valid0 = true;}if(valid0){if(data.currency !== undefined){let data47 = data.currency;const _errs103 = errors;const _errs104 = errors;if(errors === _errs104){if(data47 && typeof data47 == "object" && !Array.isArray(data47)){if(data47.currencyCode !== undefined){const _errs107 = errors;if(typeof data47.currencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/currency/currencyCode",schemaPath:"#/$defs/Currencyaf30/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid19 = _errs107 === errors;}else {var valid19 = true;}if(valid19){if(data47.code !== undefined){const _errs109 = errors;let valid20;valid20 = false;for(const v3 of schema23.properties.code.enum){if(func0(data47.code, v3)){valid20 = true;break;}}if(!valid20){validate11.errors = [{instancePath:instancePath+"/currency/code",schemaPath:"#/$defs/Currencyaf30/properties/code/enum",keyword:"enum",params:{allowedValues: schema23.properties.code.enum},message:"must be equal to one of the allowed values"}];return false;}var valid19 = _errs109 === errors;}else {var valid19 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/$defs/Currencyaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs103 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs110 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs110 === errors;}else {var valid0 = true;}if(valid0){if(data.originalCurrencyCode !== undefined){const _errs112 = errors;if(typeof data.originalCurrencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/originalCurrencyCode",schemaPath:"#/properties/originalCurrencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs112 === errors;}else {var valid0 = true;}if(valid0){if(data.originalTransactionKey !== undefined){const _errs114 = errors;if(typeof data.originalTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/originalTransactionKey",schemaPath:"#/properties/originalTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs114 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data53 = data.amount;const _errs116 = errors;if(!((typeof data53 == "number") && (isFinite(data53)))){validate11.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs116 === errors;}else {var valid0 = true;}if(valid0){if(data.centreKey !== undefined){const _errs118 = errors;if(typeof data.centreKey !== "string"){validate11.errors = [{instancePath:instancePath+"/centreKey",schemaPath:"#/properties/centreKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs118 === errors;}else {var valid0 = true;}if(valid0){if(data.externalId !== undefined){const _errs120 = errors;if(typeof data.externalId !== "string"){validate11.errors = [{instancePath:instancePath+"/externalId",schemaPath:"#/properties/externalId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs120 === errors;}else {var valid0 = true;}if(valid0){if(data.valueDate !== undefined){const _errs122 = errors;if(errors === _errs122){if(errors === _errs122){if(!(typeof data.valueDate === "string")){validate11.errors = [{instancePath:instancePath+"/valueDate",schemaPath:"#/properties/valueDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs122 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs124 = errors;if(errors === _errs124){if(errors === _errs124){if(!(typeof data.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs124 === errors;}else {var valid0 = true;}if(valid0){if(data.userKey !== undefined){const _errs126 = errors;if(typeof data.userKey !== "string"){validate11.errors = [{instancePath:instancePath+"/userKey",schemaPath:"#/properties/userKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs126 === errors;}else {var valid0 = true;}if(valid0){if(data.parentAccountKey !== undefined){const _errs128 = errors;if(typeof data.parentAccountKey !== "string"){validate11.errors = [{instancePath:instancePath+"/parentAccountKey",schemaPath:"#/properties/parentAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs128 === errors;}else {var valid0 = true;}if(valid0){if(data.originalAmount !== undefined){let data60 = data.originalAmount;const _errs130 = errors;if(!((typeof data60 == "number") && (isFinite(data60)))){validate11.errors = [{instancePath:instancePath+"/originalAmount",schemaPath:"#/properties/originalAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs130 === errors;}else {var valid0 = true;}if(valid0){if(data.accountBalances !== undefined){let data61 = data.accountBalances;const _errs132 = errors;const _errs133 = errors;if(errors === _errs133){if(data61 && typeof data61 == "object" && !Array.isArray(data61)){if(data61.redrawBalance !== undefined){let data62 = data61.redrawBalance;const _errs136 = errors;if(!((typeof data62 == "number") && (isFinite(data62)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/redrawBalance",schemaPath:"#/$defs/TransactionBalancesaf30/properties/redrawBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid22 = _errs136 === errors;}else {var valid22 = true;}if(valid22){if(data61.principalBalance !== undefined){let data63 = data61.principalBalance;const _errs138 = errors;if(!((typeof data63 == "number") && (isFinite(data63)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/principalBalance",schemaPath:"#/$defs/TransactionBalancesaf30/properties/principalBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid22 = _errs138 === errors;}else {var valid22 = true;}if(valid22){if(data61.totalBalance !== undefined){let data64 = data61.totalBalance;const _errs140 = errors;if(!((typeof data64 == "number") && (isFinite(data64)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/totalBalance",schemaPath:"#/$defs/TransactionBalancesaf30/properties/totalBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid22 = _errs140 === errors;}else {var valid22 = true;}if(valid22){if(data61.expectedPrincipalRedraw !== undefined){let data65 = data61.expectedPrincipalRedraw;const _errs142 = errors;if(!((typeof data65 == "number") && (isFinite(data65)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/expectedPrincipalRedraw",schemaPath:"#/$defs/TransactionBalancesaf30/properties/expectedPrincipalRedraw/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid22 = _errs142 === errors;}else {var valid22 = true;}if(valid22){if(data61.advancePosition !== undefined){let data66 = data61.advancePosition;const _errs144 = errors;if(!((typeof data66 == "number") && (isFinite(data66)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/advancePosition",schemaPath:"#/$defs/TransactionBalancesaf30/properties/advancePosition/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid22 = _errs144 === errors;}else {var valid22 = true;}if(valid22){if(data61.arrearsPosition !== undefined){let data67 = data61.arrearsPosition;const _errs146 = errors;if(!((typeof data67 == "number") && (isFinite(data67)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/arrearsPosition",schemaPath:"#/$defs/TransactionBalancesaf30/properties/arrearsPosition/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid22 = _errs146 === errors;}else {var valid22 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/accountBalances",schemaPath:"#/$defs/TransactionBalancesaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs132 === errors;}else {var valid0 = true;}if(valid0){if(data.bookingDate !== undefined){const _errs148 = errors;if(errors === _errs148){if(errors === _errs148){if(!(typeof data.bookingDate === "string")){validate11.errors = [{instancePath:instancePath+"/bookingDate",schemaPath:"#/properties/bookingDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs148 === errors;}else {var valid0 = true;}if(valid0){if(data.prepaymentRecalculationMethod !== undefined){const _errs150 = errors;let valid23;valid23 = false;for(const v4 of schema12.properties.prepaymentRecalculationMethod.enum){if(func0(data.prepaymentRecalculationMethod, v4)){valid23 = true;break;}}if(!valid23){validate11.errors = [{instancePath:instancePath+"/prepaymentRecalculationMethod",schemaPath:"#/properties/prepaymentRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema12.properties.prepaymentRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs150 === errors;}else {var valid0 = true;}if(valid0){if(data.installmentEncodedKey !== undefined){const _errs151 = errors;if(typeof data.installmentEncodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/installmentEncodedKey",schemaPath:"#/properties/installmentEncodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs151 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;