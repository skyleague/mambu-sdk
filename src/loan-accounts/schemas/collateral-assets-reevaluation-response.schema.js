/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CollateralAssetsReevaluationResponse","description":"Holds the information about collateral assets reevaluation status.","properties":{"bulkProcessKey":{"type":"string","title":"bulkProcessKey","description":"The encoded key of the collateral assets reevaluation task"},"status":{"title":"status","description":"The collateral assets reevaluation status","enum":["QUEUED","IN_PROGRESS","COMPLETE","NOT_FOUND","CANCEL","TO_BE_CANCELED","TIMED_OUT","ERROR","TRANSIENT_ERROR","OVERRIDDEN"]}},"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "bulkProcessKey") || (key0 === "status"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.bulkProcessKey !== undefined){const _errs2 = errors;if(typeof data.bulkProcessKey !== "string"){validate10.errors = [{instancePath:instancePath+"/bulkProcessKey",schemaPath:"#/properties/bulkProcessKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.status !== undefined){let data1 = data.status;const _errs4 = errors;if(!((((((((((data1 === "QUEUED") || (data1 === "IN_PROGRESS")) || (data1 === "COMPLETE")) || (data1 === "NOT_FOUND")) || (data1 === "CANCEL")) || (data1 === "TO_BE_CANCELED")) || (data1 === "TIMED_OUT")) || (data1 === "ERROR")) || (data1 === "TRANSIENT_ERROR")) || (data1 === "OVERRIDDEN"))){validate10.errors = [{instancePath:instancePath+"/status",schemaPath:"#/properties/status/enum",keyword:"enum",params:{allowedValues: schema11.properties.status.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}