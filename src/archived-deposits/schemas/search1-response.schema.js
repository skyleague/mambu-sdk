/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import { default as ajvDistRuntimeEqualDefault } from 'ajv/dist/runtime/equal.js';
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Search1Response","type":"array","items":{"$ref":"#/$defs/Client"},"$defs":{"Client":{"type":"object","description":"Represents a client.","properties":{"activationDate":{"type":"string","description":"The date when a client was set as active for the first time.","format":"date-time"},"addresses":{"type":"array","description":"The addresses associated with this client.","items":{"$ref":"#/$defs/Address"}},"approvedDate":{"type":"string","description":"The date when a client was approved.","format":"date-time"},"assignedBranchKey":{"type":"string","description":"The encoded key of the branch a client is assigned to."},"assignedCentreKey":{"type":"string","description":"The encoded key of the centre a client is assigned to."},"assignedUserKey":{"type":"string","description":"The encoded key of the user a client is assigned to."},"birthDate":{"type":"string","description":"The client's date of birth.","format":"date"},"clientRoleKey":{"type":"string","description":"A role which describes the intended use of a client in the system."},"closedDate":{"type":"string","description":"The date when the client state was changed to closed.","format":"date-time"},"creationDate":{"type":"string","description":"The date a client was created.","format":"date-time"},"emailAddress":{"type":"string","description":"The client's email address."},"encodedKey":{"type":"string","description":"The encoded key of the client, which is unique and generated."},"firstName":{"type":"string","description":"The first name, personal name, given name, or forename of the client."},"gender":{"description":"The client's gender, the options are male or female.","enum":["MALE","FEMALE"]},"groupKeys":{"type":"array","description":"The groups to which this client belongs.","items":{"type":"string"}},"groupLoanCycle":{"type":"integer","description":"Number of paid and closed (with 'obligations met') accounts for a client's group; when the closing operation is reverted, this is reduced."},"homePhone":{"type":"string","description":"The client's home phone number."},"id":{"type":"string","description":"The ID of the client, which can be generated and customized - but must be unique."},"idDocuments":{"type":"array","description":"The identification documents for this client.","items":{"$ref":"#/$defs/IdentificationDocument"}},"lastModifiedDate":{"type":"string","description":"The last date a client was modified.","format":"date-time"},"lastName":{"type":"string","description":"The last name, surname, or family name of the client."},"loanCycle":{"type":"integer","description":"Number of paid and closed (with 'obligations met') accounts for a client; when the closing operation is reverted, this is reduced."},"middleName":{"type":"string","description":"The middle name of the client."},"migrationEventKey":{"type":"string","description":"The migration event encoded key associated with a client."},"mobilePhone":{"type":"string","description":"The client's mobile phone number."},"mobilePhone2":{"type":"string","description":"The client's second mobile phone number."},"notes":{"type":"string","description":"The additional notes about a client."},"portalSettings":{"$ref":"#/$defs/PortalSettings"},"preferredLanguage":{"description":"The client's preferred language. This will determine the language for the reports, schedules, and account statements you generate for the client.","enum":["ENGLISH","PORTUGESE","SPANISH","RUSSIAN","FRENCH","GEORGIAN","CHINESE","INDONESIAN","ROMANIAN","BURMESE","GERMAN","PORTUGUESE_BRAZIL","VIETNAMESE","ITALIAN","THAI","NORWEGIAN","PHRASE"]},"profilePictureKey":{"type":"string","description":"The encoded key of a client's profile picture."},"profileSignatureKey":{"type":"string","description":"The encoded key of the client's profile signature."},"state":{"description":"The state of a client. It shows where the client is in the client life cycle.","enum":["PENDING_APPROVAL","INACTIVE","ACTIVE","EXITED","BLACKLISTED","REJECTED"]}},"required":["firstName","lastName"],"additionalProperties":true},"Address":{"type":"object","description":"Represents an address.","properties":{"city":{"type":"string","description":"The city for the address."},"country":{"type":"string","description":"The country."},"encodedKey":{"type":"string","description":"The address encoded key, which is unique and generated."},"indexInList":{"type":"integer","description":"The index of this address in the list of addresses."},"latitude":{"type":"number","description":"The GPS latitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -90 to +90."},"line1":{"type":"string","description":"The first line of the address."},"line2":{"type":"string","description":"The second line of the address."},"longitude":{"type":"number","description":"The GPS longitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -180 to +180."},"parentKey":{"type":"string","description":"The address parent key indicating the object owning this address. For example: client, centre, or branch."},"postcode":{"type":"string","description":"The post code."},"region":{"type":"string","description":"The region for the address."}},"additionalProperties":true},"IdentificationDocument":{"type":"object","description":"An Id document represents a document that can be used to identify a person like a passport, a drivers license an id card etc.","properties":{"attachments":{"type":"array","description":"A list containing information about the attached files for this document","items":{"$ref":"#/$defs/Document"}},"clientKey":{"type":"string","description":"The encoded key of the client that owns this document"},"documentId":{"type":"string","description":"The id of the document"},"documentType":{"type":"string","description":"The type of the document, Passport, Id card Drivers license, etc."},"encodedKey":{"type":"string","description":"The encoded key of the document, generated, unique"},"identificationDocumentTemplateKey":{"type":"string","description":"Encoded key of the template used for this document"},"indexInList":{"type":"integer","description":"This document's index in the list of documents"},"issuingAuthority":{"type":"string","description":"Authority that issued the document, eg. Police"},"validUntil":{"type":"string","description":"Date when the validity of the document ends","format":"date"}},"required":["documentId","documentType"],"additionalProperties":true},"Document":{"type":"object","description":"Holds information regarding the documents uploaded as attachments","properties":{"creationDate":{"type":"string","description":"The creation date of the document, stored as UTC","format":"date-time"},"encodedKey":{"type":"string","description":"The document encodedKey"},"fileName":{"type":"string","description":"The original file name of the document"},"fileSize":{"type":"integer","description":"The file size of the document"},"id":{"type":"integer","description":"The document id"},"lastModifiedDate":{"type":"string","description":"The last modified date of the document, stored as UTC","format":"date-time"},"location":{"type":"string","description":"Location where the document can be found, eg /myfiles/mypicture.jpeg"},"name":{"type":"string","description":"The name of the document"},"notes":{"type":"string","description":"Detailed notes about the document"},"ownerKey":{"type":"string","description":"Represents the holder of this document. If null, means nobody is the owner of this document"},"ownerType":{"description":"Determines the owner type of the document","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"type":{"type":"string","description":"The extension of the document"}},"required":["id","name","type"],"additionalProperties":true},"PortalSettings":{"type":"object","description":"Represents portal settings for an individual client.","properties":{"encodedKey":{"type":"string","description":"The encoded key of the entity, generated, globally unique"},"lastLoggedInDate":{"type":"string","description":"The last date the client logged in to the portal.","format":"date-time"},"portalState":{"description":"The state of the client's portal preferences.","enum":["ENABLED","DISABLED"]}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents a client.","properties":{"activationDate":{"type":"string","description":"The date when a client was set as active for the first time.","format":"date-time"},"addresses":{"type":"array","description":"The addresses associated with this client.","items":{"$ref":"#/$defs/Address"}},"approvedDate":{"type":"string","description":"The date when a client was approved.","format":"date-time"},"assignedBranchKey":{"type":"string","description":"The encoded key of the branch a client is assigned to."},"assignedCentreKey":{"type":"string","description":"The encoded key of the centre a client is assigned to."},"assignedUserKey":{"type":"string","description":"The encoded key of the user a client is assigned to."},"birthDate":{"type":"string","description":"The client's date of birth.","format":"date"},"clientRoleKey":{"type":"string","description":"A role which describes the intended use of a client in the system."},"closedDate":{"type":"string","description":"The date when the client state was changed to closed.","format":"date-time"},"creationDate":{"type":"string","description":"The date a client was created.","format":"date-time"},"emailAddress":{"type":"string","description":"The client's email address."},"encodedKey":{"type":"string","description":"The encoded key of the client, which is unique and generated."},"firstName":{"type":"string","description":"The first name, personal name, given name, or forename of the client."},"gender":{"description":"The client's gender, the options are male or female.","enum":["MALE","FEMALE"]},"groupKeys":{"type":"array","description":"The groups to which this client belongs.","items":{"type":"string"}},"groupLoanCycle":{"type":"integer","description":"Number of paid and closed (with 'obligations met') accounts for a client's group; when the closing operation is reverted, this is reduced."},"homePhone":{"type":"string","description":"The client's home phone number."},"id":{"type":"string","description":"The ID of the client, which can be generated and customized - but must be unique."},"idDocuments":{"type":"array","description":"The identification documents for this client.","items":{"$ref":"#/$defs/IdentificationDocument"}},"lastModifiedDate":{"type":"string","description":"The last date a client was modified.","format":"date-time"},"lastName":{"type":"string","description":"The last name, surname, or family name of the client."},"loanCycle":{"type":"integer","description":"Number of paid and closed (with 'obligations met') accounts for a client; when the closing operation is reverted, this is reduced."},"middleName":{"type":"string","description":"The middle name of the client."},"migrationEventKey":{"type":"string","description":"The migration event encoded key associated with a client."},"mobilePhone":{"type":"string","description":"The client's mobile phone number."},"mobilePhone2":{"type":"string","description":"The client's second mobile phone number."},"notes":{"type":"string","description":"The additional notes about a client."},"portalSettings":{"$ref":"#/$defs/PortalSettings"},"preferredLanguage":{"description":"The client's preferred language. This will determine the language for the reports, schedules, and account statements you generate for the client.","enum":["ENGLISH","PORTUGESE","SPANISH","RUSSIAN","FRENCH","GEORGIAN","CHINESE","INDONESIAN","ROMANIAN","BURMESE","GERMAN","PORTUGUESE_BRAZIL","VIETNAMESE","ITALIAN","THAI","NORWEGIAN","PHRASE"]},"profilePictureKey":{"type":"string","description":"The encoded key of a client's profile picture."},"profileSignatureKey":{"type":"string","description":"The encoded key of the client's profile signature."},"state":{"description":"The state of a client. It shows where the client is in the client life cycle.","enum":["PENDING_APPROVAL","INACTIVE","ACTIVE","EXITED","BLACKLISTED","REJECTED"]}},"required":["firstName","lastName"],"additionalProperties":true};const schema13 = {"type":"object","description":"Represents an address.","properties":{"city":{"type":"string","description":"The city for the address."},"country":{"type":"string","description":"The country."},"encodedKey":{"type":"string","description":"The address encoded key, which is unique and generated."},"indexInList":{"type":"integer","description":"The index of this address in the list of addresses."},"latitude":{"type":"number","description":"The GPS latitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -90 to +90."},"line1":{"type":"string","description":"The first line of the address."},"line2":{"type":"string","description":"The second line of the address."},"longitude":{"type":"number","description":"The GPS longitude of this address in signed degrees format (DDD.dddd) with 6 decimal positions, ranging from -180 to +180."},"parentKey":{"type":"string","description":"The address parent key indicating the object owning this address. For example: client, centre, or branch."},"postcode":{"type":"string","description":"The post code."},"region":{"type":"string","description":"The region for the address."}},"additionalProperties":true};const schema16 = {"type":"object","description":"Represents portal settings for an individual client.","properties":{"encodedKey":{"type":"string","description":"The encoded key of the entity, generated, globally unique"},"lastLoggedInDate":{"type":"string","description":"The last date the client logged in to the portal.","format":"date-time"},"portalState":{"description":"The state of the client's portal preferences.","enum":["ENABLED","DISABLED"]}},"additionalProperties":true};const schema14 = {"type":"object","description":"An Id document represents a document that can be used to identify a person like a passport, a drivers license an id card etc.","properties":{"attachments":{"type":"array","description":"A list containing information about the attached files for this document","items":{"$ref":"#/$defs/Document"}},"clientKey":{"type":"string","description":"The encoded key of the client that owns this document"},"documentId":{"type":"string","description":"The id of the document"},"documentType":{"type":"string","description":"The type of the document, Passport, Id card Drivers license, etc."},"encodedKey":{"type":"string","description":"The encoded key of the document, generated, unique"},"identificationDocumentTemplateKey":{"type":"string","description":"Encoded key of the template used for this document"},"indexInList":{"type":"integer","description":"This document's index in the list of documents"},"issuingAuthority":{"type":"string","description":"Authority that issued the document, eg. Police"},"validUntil":{"type":"string","description":"Date when the validity of the document ends","format":"date"}},"required":["documentId","documentType"],"additionalProperties":true};const schema15 = {"type":"object","description":"Holds information regarding the documents uploaded as attachments","properties":{"creationDate":{"type":"string","description":"The creation date of the document, stored as UTC","format":"date-time"},"encodedKey":{"type":"string","description":"The document encodedKey"},"fileName":{"type":"string","description":"The original file name of the document"},"fileSize":{"type":"integer","description":"The file size of the document"},"id":{"type":"integer","description":"The document id"},"lastModifiedDate":{"type":"string","description":"The last modified date of the document, stored as UTC","format":"date-time"},"location":{"type":"string","description":"Location where the document can be found, eg /myfiles/mypicture.jpeg"},"name":{"type":"string","description":"The name of the document"},"notes":{"type":"string","description":"Detailed notes about the document"},"ownerKey":{"type":"string","description":"Represents the holder of this document. If null, means nobody is the owner of this document"},"ownerType":{"description":"Determines the owner type of the document","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"type":{"type":"string","description":"The extension of the document"}},"required":["id","name","type"],"additionalProperties":true};const func0 = (ajvDistRuntimeEqualDefault.default ?? ajvDistRuntimeEqualDefault);function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.documentId === undefined) && (missing0 = "documentId")) || ((data.documentType === undefined) && (missing0 = "documentType"))){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.attachments !== undefined){let data0 = data.attachments;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((((data1.id === undefined) && (missing1 = "id")) || ((data1.name === undefined) && (missing1 = "name"))) || ((data1.type === undefined) && (missing1 = "type"))){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0,schemaPath:"#/$defs/Document/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.creationDate !== undefined){const _errs8 = errors;if(errors === _errs8){if(errors === _errs8){if(!(typeof data1.creationDate === "string")){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/creationDate",schemaPath:"#/$defs/Document/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.encodedKey !== undefined){const _errs10 = errors;if(typeof data1.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/encodedKey",schemaPath:"#/$defs/Document/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data1.fileName !== undefined){const _errs12 = errors;if(typeof data1.fileName !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/fileName",schemaPath:"#/$defs/Document/properties/fileName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data1.fileSize !== undefined){let data5 = data1.fileSize;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/fileSize",schemaPath:"#/$defs/Document/properties/fileSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}if(valid3){if(data1.id !== undefined){let data6 = data1.id;const _errs16 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/id",schemaPath:"#/$defs/Document/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}if(valid3){if(data1.lastModifiedDate !== undefined){const _errs18 = errors;if(errors === _errs18){if(errors === _errs18){if(!(typeof data1.lastModifiedDate === "string")){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/Document/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid3 = _errs18 === errors;}else {var valid3 = true;}if(valid3){if(data1.location !== undefined){const _errs20 = errors;if(typeof data1.location !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/location",schemaPath:"#/$defs/Document/properties/location/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs20 === errors;}else {var valid3 = true;}if(valid3){if(data1.name !== undefined){const _errs22 = errors;if(typeof data1.name !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/name",schemaPath:"#/$defs/Document/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs22 === errors;}else {var valid3 = true;}if(valid3){if(data1.notes !== undefined){const _errs24 = errors;if(typeof data1.notes !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/notes",schemaPath:"#/$defs/Document/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs24 === errors;}else {var valid3 = true;}if(valid3){if(data1.ownerKey !== undefined){const _errs26 = errors;if(typeof data1.ownerKey !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/ownerKey",schemaPath:"#/$defs/Document/properties/ownerKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs26 === errors;}else {var valid3 = true;}if(valid3){if(data1.ownerType !== undefined){const _errs28 = errors;let valid4;valid4 = false;for(const v0 of schema15.properties.ownerType.enum){if(func0(data1.ownerType, v0)){valid4 = true;break;}}if(!valid4){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/ownerType",schemaPath:"#/$defs/Document/properties/ownerType/enum",keyword:"enum",params:{allowedValues: schema15.properties.ownerType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs28 === errors;}else {var valid3 = true;}if(valid3){if(data1.type !== undefined){const _errs29 = errors;if(typeof data1.type !== "string"){validate12.errors = [{instancePath:instancePath+"/attachments/" + i0+"/type",schemaPath:"#/$defs/Document/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs29 === errors;}else {var valid3 = true;}}}}}}}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/attachments/" + i0,schemaPath:"#/$defs/Document/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/attachments",schemaPath:"#/properties/attachments/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.clientKey !== undefined){const _errs31 = errors;if(typeof data.clientKey !== "string"){validate12.errors = [{instancePath:instancePath+"/clientKey",schemaPath:"#/properties/clientKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.documentId !== undefined){const _errs33 = errors;if(typeof data.documentId !== "string"){validate12.errors = [{instancePath:instancePath+"/documentId",schemaPath:"#/properties/documentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs33 === errors;}else {var valid0 = true;}if(valid0){if(data.documentType !== undefined){const _errs35 = errors;if(typeof data.documentType !== "string"){validate12.errors = [{instancePath:instancePath+"/documentType",schemaPath:"#/properties/documentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs37 = errors;if(typeof data.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs37 === errors;}else {var valid0 = true;}if(valid0){if(data.identificationDocumentTemplateKey !== undefined){const _errs39 = errors;if(typeof data.identificationDocumentTemplateKey !== "string"){validate12.errors = [{instancePath:instancePath+"/identificationDocumentTemplateKey",schemaPath:"#/properties/identificationDocumentTemplateKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.indexInList !== undefined){let data19 = data.indexInList;const _errs41 = errors;if(!(((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19)))){validate12.errors = [{instancePath:instancePath+"/indexInList",schemaPath:"#/properties/indexInList/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.issuingAuthority !== undefined){const _errs43 = errors;if(typeof data.issuingAuthority !== "string"){validate12.errors = [{instancePath:instancePath+"/issuingAuthority",schemaPath:"#/properties/issuingAuthority/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.validUntil !== undefined){const _errs45 = errors;if(errors === _errs45){if(errors === _errs45){if(!(typeof data.validUntil === "string")){validate12.errors = [{instancePath:instancePath+"/validUntil",schemaPath:"#/properties/validUntil/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs45 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.firstName === undefined) && (missing0 = "firstName")) || ((data.lastName === undefined) && (missing0 = "lastName"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.activationDate !== undefined){const _errs2 = errors;if(errors === _errs2){if(errors === _errs2){if(!(typeof data.activationDate === "string")){validate11.errors = [{instancePath:instancePath+"/activationDate",schemaPath:"#/properties/activationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.addresses !== undefined){let data1 = data.addresses;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.city !== undefined){const _errs10 = errors;if(typeof data2.city !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/city",schemaPath:"#/$defs/Address/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data2.country !== undefined){const _errs12 = errors;if(typeof data2.country !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/country",schemaPath:"#/$defs/Address/properties/country/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data2.encodedKey !== undefined){const _errs14 = errors;if(typeof data2.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/encodedKey",schemaPath:"#/$defs/Address/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}if(valid3){if(data2.indexInList !== undefined){let data6 = data2.indexInList;const _errs16 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/indexInList",schemaPath:"#/$defs/Address/properties/indexInList/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}if(valid3){if(data2.latitude !== undefined){let data7 = data2.latitude;const _errs18 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/latitude",schemaPath:"#/$defs/Address/properties/latitude/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs18 === errors;}else {var valid3 = true;}if(valid3){if(data2.line1 !== undefined){const _errs20 = errors;if(typeof data2.line1 !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/line1",schemaPath:"#/$defs/Address/properties/line1/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs20 === errors;}else {var valid3 = true;}if(valid3){if(data2.line2 !== undefined){const _errs22 = errors;if(typeof data2.line2 !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/line2",schemaPath:"#/$defs/Address/properties/line2/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs22 === errors;}else {var valid3 = true;}if(valid3){if(data2.longitude !== undefined){let data10 = data2.longitude;const _errs24 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/longitude",schemaPath:"#/$defs/Address/properties/longitude/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs24 === errors;}else {var valid3 = true;}if(valid3){if(data2.parentKey !== undefined){const _errs26 = errors;if(typeof data2.parentKey !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/parentKey",schemaPath:"#/$defs/Address/properties/parentKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs26 === errors;}else {var valid3 = true;}if(valid3){if(data2.postcode !== undefined){const _errs28 = errors;if(typeof data2.postcode !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/postcode",schemaPath:"#/$defs/Address/properties/postcode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs28 === errors;}else {var valid3 = true;}if(valid3){if(data2.region !== undefined){const _errs30 = errors;if(typeof data2.region !== "string"){validate11.errors = [{instancePath:instancePath+"/addresses/" + i0+"/region",schemaPath:"#/$defs/Address/properties/region/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs30 === errors;}else {var valid3 = true;}}}}}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/addresses/" + i0,schemaPath:"#/$defs/Address/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/addresses",schemaPath:"#/properties/addresses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.approvedDate !== undefined){const _errs32 = errors;if(errors === _errs32){if(errors === _errs32){if(!(typeof data.approvedDate === "string")){validate11.errors = [{instancePath:instancePath+"/approvedDate",schemaPath:"#/properties/approvedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.assignedBranchKey !== undefined){const _errs34 = errors;if(typeof data.assignedBranchKey !== "string"){validate11.errors = [{instancePath:instancePath+"/assignedBranchKey",schemaPath:"#/properties/assignedBranchKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.assignedCentreKey !== undefined){const _errs36 = errors;if(typeof data.assignedCentreKey !== "string"){validate11.errors = [{instancePath:instancePath+"/assignedCentreKey",schemaPath:"#/properties/assignedCentreKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.assignedUserKey !== undefined){const _errs38 = errors;if(typeof data.assignedUserKey !== "string"){validate11.errors = [{instancePath:instancePath+"/assignedUserKey",schemaPath:"#/properties/assignedUserKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.birthDate !== undefined){const _errs40 = errors;if(errors === _errs40){if(errors === _errs40){if(!(typeof data.birthDate === "string")){validate11.errors = [{instancePath:instancePath+"/birthDate",schemaPath:"#/properties/birthDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.clientRoleKey !== undefined){const _errs42 = errors;if(typeof data.clientRoleKey !== "string"){validate11.errors = [{instancePath:instancePath+"/clientRoleKey",schemaPath:"#/properties/clientRoleKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.closedDate !== undefined){const _errs44 = errors;if(errors === _errs44){if(errors === _errs44){if(!(typeof data.closedDate === "string")){validate11.errors = [{instancePath:instancePath+"/closedDate",schemaPath:"#/properties/closedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs46 = errors;if(errors === _errs46){if(errors === _errs46){if(!(typeof data.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs46 === errors;}else {var valid0 = true;}if(valid0){if(data.emailAddress !== undefined){const _errs48 = errors;if(typeof data.emailAddress !== "string"){validate11.errors = [{instancePath:instancePath+"/emailAddress",schemaPath:"#/properties/emailAddress/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs50 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs50 === errors;}else {var valid0 = true;}if(valid0){if(data.firstName !== undefined){const _errs52 = errors;if(typeof data.firstName !== "string"){validate11.errors = [{instancePath:instancePath+"/firstName",schemaPath:"#/properties/firstName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs52 === errors;}else {var valid0 = true;}if(valid0){if(data.gender !== undefined){let data25 = data.gender;const _errs54 = errors;if(!((data25 === "MALE") || (data25 === "FEMALE"))){validate11.errors = [{instancePath:instancePath+"/gender",schemaPath:"#/properties/gender/enum",keyword:"enum",params:{allowedValues: schema12.properties.gender.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs54 === errors;}else {var valid0 = true;}if(valid0){if(data.groupKeys !== undefined){let data26 = data.groupKeys;const _errs55 = errors;if(errors === _errs55){if(Array.isArray(data26)){var valid4 = true;const len1 = data26.length;for(let i1=0; i1<len1; i1++){const _errs57 = errors;if(typeof data26[i1] !== "string"){validate11.errors = [{instancePath:instancePath+"/groupKeys/" + i1,schemaPath:"#/properties/groupKeys/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs57 === errors;if(!valid4){break;}}}else {validate11.errors = [{instancePath:instancePath+"/groupKeys",schemaPath:"#/properties/groupKeys/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs55 === errors;}else {var valid0 = true;}if(valid0){if(data.groupLoanCycle !== undefined){let data28 = data.groupLoanCycle;const _errs59 = errors;if(!(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28)))){validate11.errors = [{instancePath:instancePath+"/groupLoanCycle",schemaPath:"#/properties/groupLoanCycle/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs59 === errors;}else {var valid0 = true;}if(valid0){if(data.homePhone !== undefined){const _errs61 = errors;if(typeof data.homePhone !== "string"){validate11.errors = [{instancePath:instancePath+"/homePhone",schemaPath:"#/properties/homePhone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs61 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs63 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs63 === errors;}else {var valid0 = true;}if(valid0){if(data.idDocuments !== undefined){let data31 = data.idDocuments;const _errs65 = errors;if(errors === _errs65){if(Array.isArray(data31)){var valid5 = true;const len2 = data31.length;for(let i2=0; i2<len2; i2++){const _errs67 = errors;if(!(validate12(data31[i2], {instancePath:instancePath+"/idDocuments/" + i2,parentData:data31,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid5 = _errs67 === errors;if(!valid5){break;}}}else {validate11.errors = [{instancePath:instancePath+"/idDocuments",schemaPath:"#/properties/idDocuments/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs65 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs68 = errors;if(errors === _errs68){if(errors === _errs68){if(!(typeof data.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs68 === errors;}else {var valid0 = true;}if(valid0){if(data.lastName !== undefined){const _errs70 = errors;if(typeof data.lastName !== "string"){validate11.errors = [{instancePath:instancePath+"/lastName",schemaPath:"#/properties/lastName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs70 === errors;}else {var valid0 = true;}if(valid0){if(data.loanCycle !== undefined){let data35 = data.loanCycle;const _errs72 = errors;if(!(((typeof data35 == "number") && (!(data35 % 1) && !isNaN(data35))) && (isFinite(data35)))){validate11.errors = [{instancePath:instancePath+"/loanCycle",schemaPath:"#/properties/loanCycle/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs72 === errors;}else {var valid0 = true;}if(valid0){if(data.middleName !== undefined){const _errs74 = errors;if(typeof data.middleName !== "string"){validate11.errors = [{instancePath:instancePath+"/middleName",schemaPath:"#/properties/middleName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs74 === errors;}else {var valid0 = true;}if(valid0){if(data.migrationEventKey !== undefined){const _errs76 = errors;if(typeof data.migrationEventKey !== "string"){validate11.errors = [{instancePath:instancePath+"/migrationEventKey",schemaPath:"#/properties/migrationEventKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs76 === errors;}else {var valid0 = true;}if(valid0){if(data.mobilePhone !== undefined){const _errs78 = errors;if(typeof data.mobilePhone !== "string"){validate11.errors = [{instancePath:instancePath+"/mobilePhone",schemaPath:"#/properties/mobilePhone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs78 === errors;}else {var valid0 = true;}if(valid0){if(data.mobilePhone2 !== undefined){const _errs80 = errors;if(typeof data.mobilePhone2 !== "string"){validate11.errors = [{instancePath:instancePath+"/mobilePhone2",schemaPath:"#/properties/mobilePhone2/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs80 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){const _errs82 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs82 === errors;}else {var valid0 = true;}if(valid0){if(data.portalSettings !== undefined){let data41 = data.portalSettings;const _errs84 = errors;const _errs85 = errors;if(errors === _errs85){if(data41 && typeof data41 == "object" && !Array.isArray(data41)){if(data41.encodedKey !== undefined){const _errs88 = errors;if(typeof data41.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/portalSettings/encodedKey",schemaPath:"#/$defs/PortalSettings/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs88 === errors;}else {var valid7 = true;}if(valid7){if(data41.lastLoggedInDate !== undefined){const _errs90 = errors;if(errors === _errs90){if(errors === _errs90){if(!(typeof data41.lastLoggedInDate === "string")){validate11.errors = [{instancePath:instancePath+"/portalSettings/lastLoggedInDate",schemaPath:"#/$defs/PortalSettings/properties/lastLoggedInDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid7 = _errs90 === errors;}else {var valid7 = true;}if(valid7){if(data41.portalState !== undefined){let data44 = data41.portalState;const _errs92 = errors;if(!((data44 === "ENABLED") || (data44 === "DISABLED"))){validate11.errors = [{instancePath:instancePath+"/portalSettings/portalState",schemaPath:"#/$defs/PortalSettings/properties/portalState/enum",keyword:"enum",params:{allowedValues: schema16.properties.portalState.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs92 === errors;}else {var valid7 = true;}}}}else {validate11.errors = [{instancePath:instancePath+"/portalSettings",schemaPath:"#/$defs/PortalSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs84 === errors;}else {var valid0 = true;}if(valid0){if(data.preferredLanguage !== undefined){const _errs93 = errors;let valid8;valid8 = false;for(const v0 of schema12.properties.preferredLanguage.enum){if(func0(data.preferredLanguage, v0)){valid8 = true;break;}}if(!valid8){validate11.errors = [{instancePath:instancePath+"/preferredLanguage",schemaPath:"#/properties/preferredLanguage/enum",keyword:"enum",params:{allowedValues: schema12.properties.preferredLanguage.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs93 === errors;}else {var valid0 = true;}if(valid0){if(data.profilePictureKey !== undefined){const _errs94 = errors;if(typeof data.profilePictureKey !== "string"){validate11.errors = [{instancePath:instancePath+"/profilePictureKey",schemaPath:"#/properties/profilePictureKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs94 === errors;}else {var valid0 = true;}if(valid0){if(data.profileSignatureKey !== undefined){const _errs96 = errors;if(typeof data.profileSignatureKey !== "string"){validate11.errors = [{instancePath:instancePath+"/profileSignatureKey",schemaPath:"#/properties/profileSignatureKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs96 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){const _errs98 = errors;let valid9;valid9 = false;for(const v1 of schema12.properties.state.enum){if(func0(data.state, v1)){valid9 = true;break;}}if(!valid9){validate11.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema12.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs98 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;