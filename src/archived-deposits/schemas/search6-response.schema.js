/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import { default as ajvDistRuntimeEqualDefault } from 'ajv/dist/runtime/equal.js';
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Search6Response","type":"array","items":{"$ref":"#/$defs/DepositTransaction"},"$defs":{"DepositTransaction":{"type":"object","description":"Represents the action performed on an Deposit Account after which the account's amount changes its value.","properties":{"accountBalances":{"$ref":"#/$defs/DepositTransactionBalances"},"adjustmentTransactionKey":{"type":"string","description":"The key of the deposit transaction where the adjustment for this transaction was made (if any adjustment was involved)"},"affectedAmounts":{"$ref":"#/$defs/DepositAffectedAmounts"},"amount":{"type":"number","description":"How much was added/removed in account"},"blockId":{"type":"string","description":"The block fund id associated with the transaction"},"bookingDate":{"type":"string","description":"The date when corresponding JE is booked (as Organization Time)","format":"date-time"},"branchKey":{"type":"string","description":"The branch where the transaction was performed"},"cardTransaction":{"$ref":"#/$defs/CardTransaction"},"centreKey":{"type":"string","description":"The center where the transaction was performed"},"creationDate":{"type":"string","description":"The date when this deposit transaction was created","format":"date-time"},"currencyCode":{"type":"string","description":"The currency in which this transaction was posted"},"customFieldsArchived":{"type":"boolean","description":"Whether the custom fields of the transaction are archived"},"encodedKey":{"type":"string","description":"The encoded key of the deposit transaction, auto generated, unique"},"externalId":{"type":"string","description":"The external id of the deposit transaction, customizable, unique"},"fees":{"type":"array","description":"All the amounts that have been applied or paid within this transaction and involved predefined fees","items":{"$ref":"#/$defs/DepositFee"}},"holdExternalReferenceId":{"type":"string","description":"The external id of an account authorization hold"},"id":{"type":"string","description":"The id of the deposit transaction, auto generated, unique"},"interestAccruedAmounts":{"$ref":"#/$defs/DepositInterestAccruedAmounts"},"migrationEventKey":{"type":"string","description":"The migration event encoded key associated with this deposit account. If this account was imported, track which 'migration event' they came from"},"notes":{"type":"string","description":"Extra notes about this deposit transaction"},"originalTransactionKey":{"type":"string","description":"The encodedKey of the transaction that was adjusted as part of this one. Available only for adjustment transactions"},"parentAccountKey":{"type":"string","description":"The key of the parent deposit account"},"paymentDetails":{"$ref":"#/$defs/PaymentDetails"},"paymentOrderId":{"type":"string","description":"The payment order id of the deposit transaction, customizable"},"taxes":{"$ref":"#/$defs/DepositTaxes"},"terms":{"$ref":"#/$defs/DepositTerms"},"tillKey":{"type":"string","description":"The till key associated with this transaction"},"transactionDetails":{"$ref":"#/$defs/TransactionDetails"},"transferDetails":{"$ref":"#/$defs/TransferDetails"},"type":{"description":"The type of the deposit transaction","enum":["IMPORT","WRITE_OFF","WRITE_OFF_ADJUSTMENT","DEPOSIT","ADJUSTMENT","WITHDRAWAL","WITHDRAWAL_ADJUSTMENT","CARD_TRANSACTION_REVERSAL","CARD_TRANSACTION_REVERSAL_ADJUSTMENT","TRANSFER","TRANSFER_ADJUSTMENT","FEE_APPLIED","FEE_ADJUSTED","FEES_DUE_REDUCED","INTEREST_APPLIED","INTEREST_APPLIED_ADJUSTMENT","NET_DIFF_INTEREST","FEE_REDUCTION_ADJUSTMENT","WITHHOLDING_TAX","WITHHOLDING_TAX_ADJUSTMENT","INTEREST_RATE_CHANGED","OVERDRAFT_INTEREST_RATE_CHANGED","OVERDRAFT_LIMIT_CHANGED","BRANCH_CHANGED","ACCOUNT_HOLDER_CHANGED","LOAN_FUNDED","LOAN_FUNDED_ADJUSTMENT","LOAN_REPAID","LOAN_REPAID_ADJUSTMENT","LOAN_FRACTION_BOUGHT","LOAN_FRACTION_BOUGHT_ADJUSTMENT","LOAN_FRACTION_SOLD","LOAN_FRACTION_SOLD_ADJUSTMENT","SEIZED_AMOUNT"]},"userKey":{"type":"string","description":"The person that performed the transaction"},"valueDate":{"type":"string","description":"Date of the entry (eg date of repayment or disbursal, etc.) (as Organization Time)","format":"date-time"}},"additionalProperties":true},"DepositTransactionBalances":{"type":"object","description":"The balances changed within a transaction.","properties":{"totalBalance":{"type":"number","description":"The running balance owed by deposit"}},"additionalProperties":true},"DepositAffectedAmounts":{"type":"object","description":"The amounts affected after completing the deposit transaction","properties":{"feesAmount":{"type":"number","description":"Amount of fees involved in a transaction that affects an account with positive balance"},"fractionAmount":{"type":"number","description":"In the case of an LOAN_FRACTION_BOUGHT this represent the fraction amount which was bought from another investor"},"fundsAmount":{"type":"number","description":"Balance change amount involved in a transaction that affects an account with positive balance"},"interestAmount":{"type":"number","description":"Amount of interest involved in a transaction that affects an account with positive balance"},"overdraftAmount":{"type":"number","description":"The amount of money that was added/subtracted from the account by this transaction as overdraft"},"overdraftFeesAmount":{"type":"number","description":"Fees amount involved in a transaction that affects an overdraft"},"overdraftInterestAmount":{"type":"number","description":"Interest amount involved in a transaction that affects an overdraft"},"technicalOverdraftAmount":{"type":"number","description":"The amount of money that was added/subtracted from the account by this transaction as technical overdraft"},"technicalOverdraftInterestAmount":{"type":"number","description":"The amount of money that was added/subtracted from the account by this transaction as technical overdraft interest"}},"additionalProperties":true},"CardTransaction":{"type":"object","description":"A card transaction entry which will have a corresponding a financial transaction performed.","properties":{"advice":{"type":"boolean","description":"Whether the given request should be accepted without balance validations."},"amount":{"type":"number","description":"The amount of money to be withdrawn in the financial transaction."},"cardAcceptor":{"$ref":"#/$defs/CardAcceptor"},"cardToken":{"type":"string","description":"The reference token of the card."},"currencyCode":{"type":"string","description":"The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."},"encodedKey":{"type":"string","description":"The encoded key of the entity, generated, globally unique"},"externalAuthorizationReferenceId":{"type":"string","description":"The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."},"externalReferenceId":{"type":"string","description":"The external reference ID to be used to reference the card transaction in subsequent requests."},"userTransactionTime":{"type":"string","description":"The formatted time at which the user made this card transaction."}},"required":["advice","amount","externalReferenceId"],"additionalProperties":true},"CardAcceptor":{"type":"object","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"city":{"type":"string","description":"The city in which the card acceptor has the business."},"country":{"type":"string","description":"The country in which the card acceptor has the business."},"mcc":{"type":"integer","description":"The Merchant Category Code of the card acceptor."},"name":{"type":"string","description":"The name of the card acceptor."},"state":{"type":"string","description":"The state in which the card acceptor has the business."},"street":{"type":"string","description":"The street in which the card acceptor has the business."},"zip":{"type":"string","description":"The ZIP code of the location in which the card acceptor has the business."}},"additionalProperties":true},"DepositFee":{"type":"object","description":"An amount of predefined fee that was applied or paid on an account.","properties":{"amount":{"type":"number","description":"The amount of the fee that was applied/paid in the transaction for the given predefined fee."},"name":{"type":"string","description":"The name of the predefined fee"},"predefinedFeeKey":{"type":"string","description":"The encoded key of the predefined fee, auto generated, unique"},"taxAmount":{"type":"number","description":"The amount of the taxes on fee that was applied/paid in the transaction."},"trigger":{"description":"Shows the event that will trigger a fee","enum":["MANUAL","MONTHLY_FEE","ARBITRARY"]}},"required":["predefinedFeeKey"],"additionalProperties":true},"DepositInterestAccruedAmounts":{"type":"object","description":"Represents the accrued interest amounts for an Interest Applied deposit transaction.","properties":{"interestAccrued":{"type":"number","description":"The amount of positive interest accrued since last interest application/activation date and applied within Interest Applied transaction"},"negativeInterestAccrued":{"type":"number","description":"The amount of negative interest accrued since last interest application/activation date and applied within Interest Applied transaction"},"overdraftInterestAccrued":{"type":"number","description":"The amount of overdraft interest accrued since last interest application/activation date and applied within Interest Applied transaction"},"technicalOverdraftInterestAccrued":{"type":"number","description":"The amount of technical overdraft interest accrued since last interest application/activation date and applied within Interest Applied transaction"}},"additionalProperties":true},"PaymentDetails":{"type":"object","description":"The payment information including account identification details","properties":{"creditor":{"$ref":"#/$defs/Party"},"creditorAccount":{"$ref":"#/$defs/AccountDetails"},"creditorAgent":{"$ref":"#/$defs/Agent"},"debtor":{"$ref":"#/$defs/Party"},"debtorAccount":{"$ref":"#/$defs/AccountDetails"},"debtorAgent":{"$ref":"#/$defs/Agent"},"paymentIdentification":{"$ref":"#/$defs/PaymentIdentification"},"paymentTypeInformation":{"$ref":"#/$defs/PaymentTypeInformation"},"remittanceInformation":{"$ref":"#/$defs/RemittanceInformation"}},"additionalProperties":true},"Party":{"type":"object","description":"The details of the party for a transaction","properties":{"name":{"type":"string","description":"The name of the party"}},"additionalProperties":true},"AccountDetails":{"type":"object","description":"The account currency and identification","properties":{"currency":{"type":"string","description":"The currency of the account"},"identification":{"$ref":"#/$defs/AccountIdentification"}},"additionalProperties":true},"AccountIdentification":{"type":"object","description":"The account identification details","properties":{"iban":{"type":"string","description":"The account unique identifier"},"other":{"$ref":"#/$defs/OtherAccountIdentification"}},"additionalProperties":true},"OtherAccountIdentification":{"type":"object","description":"Represents other way of identification for the account.","properties":{"identification":{"type":"string","description":"The identification of the payer/payee"},"scheme":{"type":"string","description":"The identification scheme"}},"additionalProperties":true},"Agent":{"type":"object","description":"The agent details for a party","properties":{"financialInstitutionIdentification":{"$ref":"#/$defs/FinancialInstitutionIdentification"}},"additionalProperties":true},"FinancialInstitutionIdentification":{"type":"object","description":"The identification of the financial institution","properties":{"bic":{"type":"string","description":"Business identifier code"}},"additionalProperties":true},"PaymentIdentification":{"type":"object","description":"The payment identification details","properties":{"endToEndIdentification":{"type":"string","description":"Identifier assigned by the initiating party to the transaction"},"instructionIdentification":{"type":"string","description":"Identifier of a payment instruction"},"transactionIdentification":{"type":"string","description":"Identifier unique for a period assigned by the first initiating party to the transaction"}},"additionalProperties":true},"PaymentTypeInformation":{"type":"object","description":"The information specifying the type of transaction","properties":{"serviceLevel":{"$ref":"#/$defs/ServiceLevel"}},"additionalProperties":true},"ServiceLevel":{"type":"object","description":"The rules under which the transaction should be processed","properties":{"code":{"type":"string","description":"The code for a pre-agreed service or level of service between the parties"}},"additionalProperties":true},"RemittanceInformation":{"type":"object","description":"The information specifying the payment items that are intended to settle","properties":{"structured":{"$ref":"#/$defs/Structured"},"unstructured":{"type":"string","description":"Information supplied to match the items of the payment in an unstructured form"}},"additionalProperties":true},"Structured":{"type":"object","description":"The information specifying the payment items that are intended to settle","properties":{"creditorReferenceInformation":{"$ref":"#/$defs/CreditorReferenceInformation"}},"additionalProperties":true},"CreditorReferenceInformation":{"type":"object","description":"Represents the reference to the underlying documents of the payment.","properties":{"reference":{"type":"string","description":"The reference information of the creditor's underlying documents"},"referenceIssuer":{"type":"string","description":"The entity that assigns the reference type"},"referenceType":{"type":"string","description":"The type of creditor reference"}},"additionalProperties":true},"DepositTaxes":{"type":"object","description":"The taxes applied within a transaction","properties":{"taxRate":{"type":"number","description":"The tax rate that was set or changed in this transaction"}},"additionalProperties":true},"DepositTerms":{"type":"object","description":"The deposit transaction terms","properties":{"interestSettings":{"$ref":"#/$defs/DepositTransactionInterestSettings"},"overdraftInterestSettings":{"$ref":"#/$defs/DepositOverdraftInterestSettings"},"overdraftSettings":{"$ref":"#/$defs/DepositOverdraftSettings"}},"additionalProperties":true},"DepositTransactionInterestSettings":{"type":"object","description":"The interest settings, holds all the properties regarding interests for the deposit account","properties":{"indexInterestRate":{"type":"number","description":"The value of the index interest rate set or changed in this transaction"},"interestRate":{"type":"number","description":"The interest rate for the deposit account"}},"additionalProperties":true},"DepositOverdraftInterestSettings":{"type":"object","description":"Holds the deposit overdraft interest settings","properties":{"indexInterestRate":{"type":"number","description":"The value of the index interest rate set or changed in this transaction"},"interestRate":{"type":"number","description":"The interest rate that was set or changed in this transaction. Used on product interest rate changes or interest tier switches"}},"additionalProperties":true},"DepositOverdraftSettings":{"type":"object","description":"Holds the deposit overdraft settings for a transaction","properties":{"overdraftLimit":{"type":"number","description":"The overdraft limit that was set or changed in this transaction"}},"additionalProperties":true},"TransactionDetails":{"type":"object","description":"Contains the details about transaction including fields like transaction channel key and channel id","properties":{"transactionChannelId":{"type":"string","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":true},"TransferDetails":{"type":"object","description":"Represents the transfer details, such as the linked transaction key","properties":{"linkedDepositTransactionKey":{"type":"string","description":"The key of the related deposit transaction"},"linkedLoanTransactionKey":{"type":"string","description":"The key of the related loan transaction"}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents the action performed on an Deposit Account after which the account's amount changes its value.","properties":{"accountBalances":{"$ref":"#/$defs/DepositTransactionBalances"},"adjustmentTransactionKey":{"type":"string","description":"The key of the deposit transaction where the adjustment for this transaction was made (if any adjustment was involved)"},"affectedAmounts":{"$ref":"#/$defs/DepositAffectedAmounts"},"amount":{"type":"number","description":"How much was added/removed in account"},"blockId":{"type":"string","description":"The block fund id associated with the transaction"},"bookingDate":{"type":"string","description":"The date when corresponding JE is booked (as Organization Time)","format":"date-time"},"branchKey":{"type":"string","description":"The branch where the transaction was performed"},"cardTransaction":{"$ref":"#/$defs/CardTransaction"},"centreKey":{"type":"string","description":"The center where the transaction was performed"},"creationDate":{"type":"string","description":"The date when this deposit transaction was created","format":"date-time"},"currencyCode":{"type":"string","description":"The currency in which this transaction was posted"},"customFieldsArchived":{"type":"boolean","description":"Whether the custom fields of the transaction are archived"},"encodedKey":{"type":"string","description":"The encoded key of the deposit transaction, auto generated, unique"},"externalId":{"type":"string","description":"The external id of the deposit transaction, customizable, unique"},"fees":{"type":"array","description":"All the amounts that have been applied or paid within this transaction and involved predefined fees","items":{"$ref":"#/$defs/DepositFee"}},"holdExternalReferenceId":{"type":"string","description":"The external id of an account authorization hold"},"id":{"type":"string","description":"The id of the deposit transaction, auto generated, unique"},"interestAccruedAmounts":{"$ref":"#/$defs/DepositInterestAccruedAmounts"},"migrationEventKey":{"type":"string","description":"The migration event encoded key associated with this deposit account. If this account was imported, track which 'migration event' they came from"},"notes":{"type":"string","description":"Extra notes about this deposit transaction"},"originalTransactionKey":{"type":"string","description":"The encodedKey of the transaction that was adjusted as part of this one. Available only for adjustment transactions"},"parentAccountKey":{"type":"string","description":"The key of the parent deposit account"},"paymentDetails":{"$ref":"#/$defs/PaymentDetails"},"paymentOrderId":{"type":"string","description":"The payment order id of the deposit transaction, customizable"},"taxes":{"$ref":"#/$defs/DepositTaxes"},"terms":{"$ref":"#/$defs/DepositTerms"},"tillKey":{"type":"string","description":"The till key associated with this transaction"},"transactionDetails":{"$ref":"#/$defs/TransactionDetails"},"transferDetails":{"$ref":"#/$defs/TransferDetails"},"type":{"description":"The type of the deposit transaction","enum":["IMPORT","WRITE_OFF","WRITE_OFF_ADJUSTMENT","DEPOSIT","ADJUSTMENT","WITHDRAWAL","WITHDRAWAL_ADJUSTMENT","CARD_TRANSACTION_REVERSAL","CARD_TRANSACTION_REVERSAL_ADJUSTMENT","TRANSFER","TRANSFER_ADJUSTMENT","FEE_APPLIED","FEE_ADJUSTED","FEES_DUE_REDUCED","INTEREST_APPLIED","INTEREST_APPLIED_ADJUSTMENT","NET_DIFF_INTEREST","FEE_REDUCTION_ADJUSTMENT","WITHHOLDING_TAX","WITHHOLDING_TAX_ADJUSTMENT","INTEREST_RATE_CHANGED","OVERDRAFT_INTEREST_RATE_CHANGED","OVERDRAFT_LIMIT_CHANGED","BRANCH_CHANGED","ACCOUNT_HOLDER_CHANGED","LOAN_FUNDED","LOAN_FUNDED_ADJUSTMENT","LOAN_REPAID","LOAN_REPAID_ADJUSTMENT","LOAN_FRACTION_BOUGHT","LOAN_FRACTION_BOUGHT_ADJUSTMENT","LOAN_FRACTION_SOLD","LOAN_FRACTION_SOLD_ADJUSTMENT","SEIZED_AMOUNT"]},"userKey":{"type":"string","description":"The person that performed the transaction"},"valueDate":{"type":"string","description":"Date of the entry (eg date of repayment or disbursal, etc.) (as Organization Time)","format":"date-time"}},"additionalProperties":true};const schema13 = {"type":"object","description":"The balances changed within a transaction.","properties":{"totalBalance":{"type":"number","description":"The running balance owed by deposit"}},"additionalProperties":true};const schema14 = {"type":"object","description":"The amounts affected after completing the deposit transaction","properties":{"feesAmount":{"type":"number","description":"Amount of fees involved in a transaction that affects an account with positive balance"},"fractionAmount":{"type":"number","description":"In the case of an LOAN_FRACTION_BOUGHT this represent the fraction amount which was bought from another investor"},"fundsAmount":{"type":"number","description":"Balance change amount involved in a transaction that affects an account with positive balance"},"interestAmount":{"type":"number","description":"Amount of interest involved in a transaction that affects an account with positive balance"},"overdraftAmount":{"type":"number","description":"The amount of money that was added/subtracted from the account by this transaction as overdraft"},"overdraftFeesAmount":{"type":"number","description":"Fees amount involved in a transaction that affects an overdraft"},"overdraftInterestAmount":{"type":"number","description":"Interest amount involved in a transaction that affects an overdraft"},"technicalOverdraftAmount":{"type":"number","description":"The amount of money that was added/subtracted from the account by this transaction as technical overdraft"},"technicalOverdraftInterestAmount":{"type":"number","description":"The amount of money that was added/subtracted from the account by this transaction as technical overdraft interest"}},"additionalProperties":true};const schema17 = {"type":"object","description":"An amount of predefined fee that was applied or paid on an account.","properties":{"amount":{"type":"number","description":"The amount of the fee that was applied/paid in the transaction for the given predefined fee."},"name":{"type":"string","description":"The name of the predefined fee"},"predefinedFeeKey":{"type":"string","description":"The encoded key of the predefined fee, auto generated, unique"},"taxAmount":{"type":"number","description":"The amount of the taxes on fee that was applied/paid in the transaction."},"trigger":{"description":"Shows the event that will trigger a fee","enum":["MANUAL","MONTHLY_FEE","ARBITRARY"]}},"required":["predefinedFeeKey"],"additionalProperties":true};const schema18 = {"type":"object","description":"Represents the accrued interest amounts for an Interest Applied deposit transaction.","properties":{"interestAccrued":{"type":"number","description":"The amount of positive interest accrued since last interest application/activation date and applied within Interest Applied transaction"},"negativeInterestAccrued":{"type":"number","description":"The amount of negative interest accrued since last interest application/activation date and applied within Interest Applied transaction"},"overdraftInterestAccrued":{"type":"number","description":"The amount of overdraft interest accrued since last interest application/activation date and applied within Interest Applied transaction"},"technicalOverdraftInterestAccrued":{"type":"number","description":"The amount of technical overdraft interest accrued since last interest application/activation date and applied within Interest Applied transaction"}},"additionalProperties":true};const schema33 = {"type":"object","description":"The taxes applied within a transaction","properties":{"taxRate":{"type":"number","description":"The tax rate that was set or changed in this transaction"}},"additionalProperties":true};const schema38 = {"type":"object","description":"Contains the details about transaction including fields like transaction channel key and channel id","properties":{"transactionChannelId":{"type":"string","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":true};const schema39 = {"type":"object","description":"Represents the transfer details, such as the linked transaction key","properties":{"linkedDepositTransactionKey":{"type":"string","description":"The key of the related deposit transaction"},"linkedLoanTransactionKey":{"type":"string","description":"The key of the related loan transaction"}},"additionalProperties":true};const schema15 = {"type":"object","description":"A card transaction entry which will have a corresponding a financial transaction performed.","properties":{"advice":{"type":"boolean","description":"Whether the given request should be accepted without balance validations."},"amount":{"type":"number","description":"The amount of money to be withdrawn in the financial transaction."},"cardAcceptor":{"$ref":"#/$defs/CardAcceptor"},"cardToken":{"type":"string","description":"The reference token of the card."},"currencyCode":{"type":"string","description":"The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."},"encodedKey":{"type":"string","description":"The encoded key of the entity, generated, globally unique"},"externalAuthorizationReferenceId":{"type":"string","description":"The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."},"externalReferenceId":{"type":"string","description":"The external reference ID to be used to reference the card transaction in subsequent requests."},"userTransactionTime":{"type":"string","description":"The formatted time at which the user made this card transaction."}},"required":["advice","amount","externalReferenceId"],"additionalProperties":true};const schema16 = {"type":"object","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"city":{"type":"string","description":"The city in which the card acceptor has the business."},"country":{"type":"string","description":"The country in which the card acceptor has the business."},"mcc":{"type":"integer","description":"The Merchant Category Code of the card acceptor."},"name":{"type":"string","description":"The name of the card acceptor."},"state":{"type":"string","description":"The state in which the card acceptor has the business."},"street":{"type":"string","description":"The street in which the card acceptor has the business."},"zip":{"type":"string","description":"The ZIP code of the location in which the card acceptor has the business."}},"additionalProperties":true};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.advice === undefined) && (missing0 = "advice")) || ((data.amount === undefined) && (missing0 = "amount"))) || ((data.externalReferenceId === undefined) && (missing0 = "externalReferenceId"))){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.advice !== undefined){const _errs2 = errors;if(typeof data.advice !== "boolean"){validate12.errors = [{instancePath:instancePath+"/advice",schemaPath:"#/properties/advice/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data1 = data.amount;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate12.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.cardAcceptor !== undefined){let data2 = data.cardAcceptor;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.city !== undefined){const _errs10 = errors;if(typeof data2.city !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/city",schemaPath:"#/$defs/CardAcceptor/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.country !== undefined){const _errs12 = errors;if(typeof data2.country !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/country",schemaPath:"#/$defs/CardAcceptor/properties/country/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.mcc !== undefined){let data5 = data2.mcc;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/mcc",schemaPath:"#/$defs/CardAcceptor/properties/mcc/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data2.name !== undefined){const _errs16 = errors;if(typeof data2.name !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/name",schemaPath:"#/$defs/CardAcceptor/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data2.state !== undefined){const _errs18 = errors;if(typeof data2.state !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/state",schemaPath:"#/$defs/CardAcceptor/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data2.street !== undefined){const _errs20 = errors;if(typeof data2.street !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/street",schemaPath:"#/$defs/CardAcceptor/properties/street/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data2.zip !== undefined){const _errs22 = errors;if(typeof data2.zip !== "string"){validate12.errors = [{instancePath:instancePath+"/cardAcceptor/zip",schemaPath:"#/$defs/CardAcceptor/properties/zip/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/cardAcceptor",schemaPath:"#/$defs/CardAcceptor/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.cardToken !== undefined){const _errs24 = errors;if(typeof data.cardToken !== "string"){validate12.errors = [{instancePath:instancePath+"/cardToken",schemaPath:"#/properties/cardToken/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.currencyCode !== undefined){const _errs26 = errors;if(typeof data.currencyCode !== "string"){validate12.errors = [{instancePath:instancePath+"/currencyCode",schemaPath:"#/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs28 = errors;if(typeof data.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.externalAuthorizationReferenceId !== undefined){const _errs30 = errors;if(typeof data.externalAuthorizationReferenceId !== "string"){validate12.errors = [{instancePath:instancePath+"/externalAuthorizationReferenceId",schemaPath:"#/properties/externalAuthorizationReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferenceId !== undefined){const _errs32 = errors;if(typeof data.externalReferenceId !== "string"){validate12.errors = [{instancePath:instancePath+"/externalReferenceId",schemaPath:"#/properties/externalReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.userTransactionTime !== undefined){const _errs34 = errors;if(typeof data.userTransactionTime !== "string"){validate12.errors = [{instancePath:instancePath+"/userTransactionTime",schemaPath:"#/properties/userTransactionTime/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema19 = {"type":"object","description":"The payment information including account identification details","properties":{"creditor":{"$ref":"#/$defs/Party"},"creditorAccount":{"$ref":"#/$defs/AccountDetails"},"creditorAgent":{"$ref":"#/$defs/Agent"},"debtor":{"$ref":"#/$defs/Party"},"debtorAccount":{"$ref":"#/$defs/AccountDetails"},"debtorAgent":{"$ref":"#/$defs/Agent"},"paymentIdentification":{"$ref":"#/$defs/PaymentIdentification"},"paymentTypeInformation":{"$ref":"#/$defs/PaymentTypeInformation"},"remittanceInformation":{"$ref":"#/$defs/RemittanceInformation"}},"additionalProperties":true};const schema20 = {"type":"object","description":"The details of the party for a transaction","properties":{"name":{"type":"string","description":"The name of the party"}},"additionalProperties":true};const schema27 = {"type":"object","description":"The payment identification details","properties":{"endToEndIdentification":{"type":"string","description":"Identifier assigned by the initiating party to the transaction"},"instructionIdentification":{"type":"string","description":"Identifier of a payment instruction"},"transactionIdentification":{"type":"string","description":"Identifier unique for a period assigned by the first initiating party to the transaction"}},"additionalProperties":true};const schema21 = {"type":"object","description":"The account currency and identification","properties":{"currency":{"type":"string","description":"The currency of the account"},"identification":{"$ref":"#/$defs/AccountIdentification"}},"additionalProperties":true};const schema22 = {"type":"object","description":"The account identification details","properties":{"iban":{"type":"string","description":"The account unique identifier"},"other":{"$ref":"#/$defs/OtherAccountIdentification"}},"additionalProperties":true};const schema23 = {"type":"object","description":"Represents other way of identification for the account.","properties":{"identification":{"type":"string","description":"The identification of the payer/payee"},"scheme":{"type":"string","description":"The identification scheme"}},"additionalProperties":true};function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.iban !== undefined){const _errs2 = errors;if(typeof data.iban !== "string"){validate16.errors = [{instancePath:instancePath+"/iban",schemaPath:"#/properties/iban/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.other !== undefined){let data1 = data.other;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.identification !== undefined){const _errs8 = errors;if(typeof data1.identification !== "string"){validate16.errors = [{instancePath:instancePath+"/other/identification",schemaPath:"#/$defs/OtherAccountIdentification/properties/identification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data1.scheme !== undefined){const _errs10 = errors;if(typeof data1.scheme !== "string"){validate16.errors = [{instancePath:instancePath+"/other/scheme",schemaPath:"#/$defs/OtherAccountIdentification/properties/scheme/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}else {validate16.errors = [{instancePath:instancePath+"/other",schemaPath:"#/$defs/OtherAccountIdentification/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}else {validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate16.errors = vErrors;return errors === 0;}function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.currency !== undefined){const _errs2 = errors;if(typeof data.currency !== "string"){validate15.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/properties/currency/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.identification !== undefined){const _errs4 = errors;if(!(validate16(data.identification, {instancePath:instancePath+"/identification",parentData:data,parentDataProperty:"identification",rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate15.errors = vErrors;return errors === 0;}const schema24 = {"type":"object","description":"The agent details for a party","properties":{"financialInstitutionIdentification":{"$ref":"#/$defs/FinancialInstitutionIdentification"}},"additionalProperties":true};const schema25 = {"type":"object","description":"The identification of the financial institution","properties":{"bic":{"type":"string","description":"Business identifier code"}},"additionalProperties":true};function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.financialInstitutionIdentification !== undefined){let data0 = data.financialInstitutionIdentification;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.bic !== undefined){if(typeof data0.bic !== "string"){validate19.errors = [{instancePath:instancePath+"/financialInstitutionIdentification/bic",schemaPath:"#/$defs/FinancialInstitutionIdentification/properties/bic/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate19.errors = [{instancePath:instancePath+"/financialInstitutionIdentification",schemaPath:"#/$defs/FinancialInstitutionIdentification/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}else {validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate19.errors = vErrors;return errors === 0;}const schema28 = {"type":"object","description":"The information specifying the type of transaction","properties":{"serviceLevel":{"$ref":"#/$defs/ServiceLevel"}},"additionalProperties":true};const schema29 = {"type":"object","description":"The rules under which the transaction should be processed","properties":{"code":{"type":"string","description":"The code for a pre-agreed service or level of service between the parties"}},"additionalProperties":true};function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.serviceLevel !== undefined){let data0 = data.serviceLevel;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.code !== undefined){if(typeof data0.code !== "string"){validate23.errors = [{instancePath:instancePath+"/serviceLevel/code",schemaPath:"#/$defs/ServiceLevel/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/serviceLevel",schemaPath:"#/$defs/ServiceLevel/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}const schema30 = {"type":"object","description":"The information specifying the payment items that are intended to settle","properties":{"structured":{"$ref":"#/$defs/Structured"},"unstructured":{"type":"string","description":"Information supplied to match the items of the payment in an unstructured form"}},"additionalProperties":true};const schema31 = {"type":"object","description":"The information specifying the payment items that are intended to settle","properties":{"creditorReferenceInformation":{"$ref":"#/$defs/CreditorReferenceInformation"}},"additionalProperties":true};const schema32 = {"type":"object","description":"Represents the reference to the underlying documents of the payment.","properties":{"reference":{"type":"string","description":"The reference information of the creditor's underlying documents"},"referenceIssuer":{"type":"string","description":"The entity that assigns the reference type"},"referenceType":{"type":"string","description":"The type of creditor reference"}},"additionalProperties":true};function validate26(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.creditorReferenceInformation !== undefined){let data0 = data.creditorReferenceInformation;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.reference !== undefined){const _errs6 = errors;if(typeof data0.reference !== "string"){validate26.errors = [{instancePath:instancePath+"/creditorReferenceInformation/reference",schemaPath:"#/$defs/CreditorReferenceInformation/properties/reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.referenceIssuer !== undefined){const _errs8 = errors;if(typeof data0.referenceIssuer !== "string"){validate26.errors = [{instancePath:instancePath+"/creditorReferenceInformation/referenceIssuer",schemaPath:"#/$defs/CreditorReferenceInformation/properties/referenceIssuer/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.referenceType !== undefined){const _errs10 = errors;if(typeof data0.referenceType !== "string"){validate26.errors = [{instancePath:instancePath+"/creditorReferenceInformation/referenceType",schemaPath:"#/$defs/CreditorReferenceInformation/properties/referenceType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}else {validate26.errors = [{instancePath:instancePath+"/creditorReferenceInformation",schemaPath:"#/$defs/CreditorReferenceInformation/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}else {validate26.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate26.errors = vErrors;return errors === 0;}function validate25(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.structured !== undefined){const _errs2 = errors;if(!(validate26(data.structured, {instancePath:instancePath+"/structured",parentData:data,parentDataProperty:"structured",rootData}))){vErrors = vErrors === null ? validate26.errors : vErrors.concat(validate26.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.unstructured !== undefined){const _errs3 = errors;if(typeof data.unstructured !== "string"){validate25.errors = [{instancePath:instancePath+"/unstructured",schemaPath:"#/properties/unstructured/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}else {validate25.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate25.errors = vErrors;return errors === 0;}function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.creditor !== undefined){let data0 = data.creditor;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.name !== undefined){if(typeof data0.name !== "string"){validate14.errors = [{instancePath:instancePath+"/creditor/name",schemaPath:"#/$defs/Party/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate14.errors = [{instancePath:instancePath+"/creditor",schemaPath:"#/$defs/Party/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.creditorAccount !== undefined){const _errs8 = errors;if(!(validate15(data.creditorAccount, {instancePath:instancePath+"/creditorAccount",parentData:data,parentDataProperty:"creditorAccount",rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.creditorAgent !== undefined){const _errs9 = errors;if(!(validate19(data.creditorAgent, {instancePath:instancePath+"/creditorAgent",parentData:data,parentDataProperty:"creditorAgent",rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.debtor !== undefined){let data4 = data.debtor;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.name !== undefined){if(typeof data4.name !== "string"){validate14.errors = [{instancePath:instancePath+"/debtor/name",schemaPath:"#/$defs/Party/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate14.errors = [{instancePath:instancePath+"/debtor",schemaPath:"#/$defs/Party/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorAccount !== undefined){const _errs16 = errors;if(!(validate15(data.debtorAccount, {instancePath:instancePath+"/debtorAccount",parentData:data,parentDataProperty:"debtorAccount",rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorAgent !== undefined){const _errs17 = errors;if(!(validate19(data.debtorAgent, {instancePath:instancePath+"/debtorAgent",parentData:data,parentDataProperty:"debtorAgent",rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentIdentification !== undefined){let data8 = data.paymentIdentification;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){if(data8.endToEndIdentification !== undefined){const _errs22 = errors;if(typeof data8.endToEndIdentification !== "string"){validate14.errors = [{instancePath:instancePath+"/paymentIdentification/endToEndIdentification",schemaPath:"#/$defs/PaymentIdentification/properties/endToEndIdentification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs22 === errors;}else {var valid6 = true;}if(valid6){if(data8.instructionIdentification !== undefined){const _errs24 = errors;if(typeof data8.instructionIdentification !== "string"){validate14.errors = [{instancePath:instancePath+"/paymentIdentification/instructionIdentification",schemaPath:"#/$defs/PaymentIdentification/properties/instructionIdentification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs24 === errors;}else {var valid6 = true;}if(valid6){if(data8.transactionIdentification !== undefined){const _errs26 = errors;if(typeof data8.transactionIdentification !== "string"){validate14.errors = [{instancePath:instancePath+"/paymentIdentification/transactionIdentification",schemaPath:"#/$defs/PaymentIdentification/properties/transactionIdentification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs26 === errors;}else {var valid6 = true;}}}}else {validate14.errors = [{instancePath:instancePath+"/paymentIdentification",schemaPath:"#/$defs/PaymentIdentification/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentTypeInformation !== undefined){const _errs28 = errors;if(!(validate23(data.paymentTypeInformation, {instancePath:instancePath+"/paymentTypeInformation",parentData:data,parentDataProperty:"paymentTypeInformation",rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.remittanceInformation !== undefined){const _errs29 = errors;if(!(validate25(data.remittanceInformation, {instancePath:instancePath+"/remittanceInformation",parentData:data,parentDataProperty:"remittanceInformation",rootData}))){vErrors = vErrors === null ? validate25.errors : vErrors.concat(validate25.errors);errors = vErrors.length;}var valid0 = _errs29 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}const schema34 = {"type":"object","description":"The deposit transaction terms","properties":{"interestSettings":{"$ref":"#/$defs/DepositTransactionInterestSettings"},"overdraftInterestSettings":{"$ref":"#/$defs/DepositOverdraftInterestSettings"},"overdraftSettings":{"$ref":"#/$defs/DepositOverdraftSettings"}},"additionalProperties":true};const schema35 = {"type":"object","description":"The interest settings, holds all the properties regarding interests for the deposit account","properties":{"indexInterestRate":{"type":"number","description":"The value of the index interest rate set or changed in this transaction"},"interestRate":{"type":"number","description":"The interest rate for the deposit account"}},"additionalProperties":true};const schema36 = {"type":"object","description":"Holds the deposit overdraft interest settings","properties":{"indexInterestRate":{"type":"number","description":"The value of the index interest rate set or changed in this transaction"},"interestRate":{"type":"number","description":"The interest rate that was set or changed in this transaction. Used on product interest rate changes or interest tier switches"}},"additionalProperties":true};const schema37 = {"type":"object","description":"Holds the deposit overdraft settings for a transaction","properties":{"overdraftLimit":{"type":"number","description":"The overdraft limit that was set or changed in this transaction"}},"additionalProperties":true};function validate30(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestSettings !== undefined){let data0 = data.interestSettings;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.indexInterestRate !== undefined){let data1 = data0.indexInterestRate;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate30.errors = [{instancePath:instancePath+"/interestSettings/indexInterestRate",schemaPath:"#/$defs/DepositTransactionInterestSettings/properties/indexInterestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.interestRate !== undefined){let data2 = data0.interestRate;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate30.errors = [{instancePath:instancePath+"/interestSettings/interestRate",schemaPath:"#/$defs/DepositTransactionInterestSettings/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}else {validate30.errors = [{instancePath:instancePath+"/interestSettings",schemaPath:"#/$defs/DepositTransactionInterestSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.overdraftInterestSettings !== undefined){let data3 = data.overdraftInterestSettings;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.indexInterestRate !== undefined){let data4 = data3.indexInterestRate;const _errs14 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate30.errors = [{instancePath:instancePath+"/overdraftInterestSettings/indexInterestRate",schemaPath:"#/$defs/DepositOverdraftInterestSettings/properties/indexInterestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data3.interestRate !== undefined){let data5 = data3.interestRate;const _errs16 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate30.errors = [{instancePath:instancePath+"/overdraftInterestSettings/interestRate",schemaPath:"#/$defs/DepositOverdraftInterestSettings/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs16 === errors;}else {var valid4 = true;}}}else {validate30.errors = [{instancePath:instancePath+"/overdraftInterestSettings",schemaPath:"#/$defs/DepositOverdraftInterestSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.overdraftSettings !== undefined){let data6 = data.overdraftSettings;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.overdraftLimit !== undefined){let data7 = data6.overdraftLimit;if(!((typeof data7 == "number") && (isFinite(data7)))){validate30.errors = [{instancePath:instancePath+"/overdraftSettings/overdraftLimit",schemaPath:"#/$defs/DepositOverdraftSettings/properties/overdraftLimit/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/overdraftSettings",schemaPath:"#/$defs/DepositOverdraftSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}else {validate30.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate30.errors = vErrors;return errors === 0;}const func0 = (ajvDistRuntimeEqualDefault.default ?? ajvDistRuntimeEqualDefault);function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.accountBalances !== undefined){let data0 = data.accountBalances;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.totalBalance !== undefined){let data1 = data0.totalBalance;if(!((typeof data1 == "number") && (isFinite(data1)))){validate11.errors = [{instancePath:instancePath+"/accountBalances/totalBalance",schemaPath:"#/$defs/DepositTransactionBalances/properties/totalBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/accountBalances",schemaPath:"#/$defs/DepositTransactionBalances/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.adjustmentTransactionKey !== undefined){const _errs8 = errors;if(typeof data.adjustmentTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/adjustmentTransactionKey",schemaPath:"#/properties/adjustmentTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.affectedAmounts !== undefined){let data3 = data.affectedAmounts;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.feesAmount !== undefined){let data4 = data3.feesAmount;const _errs14 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/feesAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/feesAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data3.fractionAmount !== undefined){let data5 = data3.fractionAmount;const _errs16 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/fractionAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/fractionAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data3.fundsAmount !== undefined){let data6 = data3.fundsAmount;const _errs18 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/fundsAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/fundsAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data3.interestAmount !== undefined){let data7 = data3.interestAmount;const _errs20 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/interestAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/interestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs20 === errors;}else {var valid4 = true;}if(valid4){if(data3.overdraftAmount !== undefined){let data8 = data3.overdraftAmount;const _errs22 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/overdraftAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/overdraftAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs22 === errors;}else {var valid4 = true;}if(valid4){if(data3.overdraftFeesAmount !== undefined){let data9 = data3.overdraftFeesAmount;const _errs24 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/overdraftFeesAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/overdraftFeesAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs24 === errors;}else {var valid4 = true;}if(valid4){if(data3.overdraftInterestAmount !== undefined){let data10 = data3.overdraftInterestAmount;const _errs26 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/overdraftInterestAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/overdraftInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs26 === errors;}else {var valid4 = true;}if(valid4){if(data3.technicalOverdraftAmount !== undefined){let data11 = data3.technicalOverdraftAmount;const _errs28 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/technicalOverdraftAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/technicalOverdraftAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs28 === errors;}else {var valid4 = true;}if(valid4){if(data3.technicalOverdraftInterestAmount !== undefined){let data12 = data3.technicalOverdraftInterestAmount;const _errs30 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate11.errors = [{instancePath:instancePath+"/affectedAmounts/technicalOverdraftInterestAmount",schemaPath:"#/$defs/DepositAffectedAmounts/properties/technicalOverdraftInterestAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs30 === errors;}else {var valid4 = true;}}}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/affectedAmounts",schemaPath:"#/$defs/DepositAffectedAmounts/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data13 = data.amount;const _errs32 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate11.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.blockId !== undefined){const _errs34 = errors;if(typeof data.blockId !== "string"){validate11.errors = [{instancePath:instancePath+"/blockId",schemaPath:"#/properties/blockId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.bookingDate !== undefined){const _errs36 = errors;if(errors === _errs36){if(errors === _errs36){if(!(typeof data.bookingDate === "string")){validate11.errors = [{instancePath:instancePath+"/bookingDate",schemaPath:"#/properties/bookingDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.branchKey !== undefined){const _errs38 = errors;if(typeof data.branchKey !== "string"){validate11.errors = [{instancePath:instancePath+"/branchKey",schemaPath:"#/properties/branchKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.cardTransaction !== undefined){const _errs40 = errors;if(!(validate12(data.cardTransaction, {instancePath:instancePath+"/cardTransaction",parentData:data,parentDataProperty:"cardTransaction",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.centreKey !== undefined){const _errs41 = errors;if(typeof data.centreKey !== "string"){validate11.errors = [{instancePath:instancePath+"/centreKey",schemaPath:"#/properties/centreKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs43 = errors;if(errors === _errs43){if(errors === _errs43){if(!(typeof data.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.currencyCode !== undefined){const _errs45 = errors;if(typeof data.currencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/currencyCode",schemaPath:"#/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}if(valid0){if(data.customFieldsArchived !== undefined){const _errs47 = errors;if(typeof data.customFieldsArchived !== "boolean"){validate11.errors = [{instancePath:instancePath+"/customFieldsArchived",schemaPath:"#/properties/customFieldsArchived/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs47 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs49 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs49 === errors;}else {var valid0 = true;}if(valid0){if(data.externalId !== undefined){const _errs51 = errors;if(typeof data.externalId !== "string"){validate11.errors = [{instancePath:instancePath+"/externalId",schemaPath:"#/properties/externalId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.fees !== undefined){let data24 = data.fees;const _errs53 = errors;if(errors === _errs53){if(Array.isArray(data24)){var valid5 = true;const len0 = data24.length;for(let i0=0; i0<len0; i0++){let data25 = data24[i0];const _errs55 = errors;const _errs56 = errors;if(errors === _errs56){if(data25 && typeof data25 == "object" && !Array.isArray(data25)){let missing0;if((data25.predefinedFeeKey === undefined) && (missing0 = "predefinedFeeKey")){validate11.errors = [{instancePath:instancePath+"/fees/" + i0,schemaPath:"#/$defs/DepositFee/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data25.amount !== undefined){let data26 = data25.amount;const _errs59 = errors;if(!((typeof data26 == "number") && (isFinite(data26)))){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/amount",schemaPath:"#/$defs/DepositFee/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid7 = _errs59 === errors;}else {var valid7 = true;}if(valid7){if(data25.name !== undefined){const _errs61 = errors;if(typeof data25.name !== "string"){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/name",schemaPath:"#/$defs/DepositFee/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs61 === errors;}else {var valid7 = true;}if(valid7){if(data25.predefinedFeeKey !== undefined){const _errs63 = errors;if(typeof data25.predefinedFeeKey !== "string"){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/predefinedFeeKey",schemaPath:"#/$defs/DepositFee/properties/predefinedFeeKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs63 === errors;}else {var valid7 = true;}if(valid7){if(data25.taxAmount !== undefined){let data29 = data25.taxAmount;const _errs65 = errors;if(!((typeof data29 == "number") && (isFinite(data29)))){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/taxAmount",schemaPath:"#/$defs/DepositFee/properties/taxAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid7 = _errs65 === errors;}else {var valid7 = true;}if(valid7){if(data25.trigger !== undefined){let data30 = data25.trigger;const _errs67 = errors;if(!(((data30 === "MANUAL") || (data30 === "MONTHLY_FEE")) || (data30 === "ARBITRARY"))){validate11.errors = [{instancePath:instancePath+"/fees/" + i0+"/trigger",schemaPath:"#/$defs/DepositFee/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema17.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs67 === errors;}else {var valid7 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/fees/" + i0,schemaPath:"#/$defs/DepositFee/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid5 = _errs55 === errors;if(!valid5){break;}}}else {validate11.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs53 === errors;}else {var valid0 = true;}if(valid0){if(data.holdExternalReferenceId !== undefined){const _errs68 = errors;if(typeof data.holdExternalReferenceId !== "string"){validate11.errors = [{instancePath:instancePath+"/holdExternalReferenceId",schemaPath:"#/properties/holdExternalReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs68 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs70 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs70 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccruedAmounts !== undefined){let data33 = data.interestAccruedAmounts;const _errs72 = errors;const _errs73 = errors;if(errors === _errs73){if(data33 && typeof data33 == "object" && !Array.isArray(data33)){if(data33.interestAccrued !== undefined){let data34 = data33.interestAccrued;const _errs76 = errors;if(!((typeof data34 == "number") && (isFinite(data34)))){validate11.errors = [{instancePath:instancePath+"/interestAccruedAmounts/interestAccrued",schemaPath:"#/$defs/DepositInterestAccruedAmounts/properties/interestAccrued/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid9 = _errs76 === errors;}else {var valid9 = true;}if(valid9){if(data33.negativeInterestAccrued !== undefined){let data35 = data33.negativeInterestAccrued;const _errs78 = errors;if(!((typeof data35 == "number") && (isFinite(data35)))){validate11.errors = [{instancePath:instancePath+"/interestAccruedAmounts/negativeInterestAccrued",schemaPath:"#/$defs/DepositInterestAccruedAmounts/properties/negativeInterestAccrued/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid9 = _errs78 === errors;}else {var valid9 = true;}if(valid9){if(data33.overdraftInterestAccrued !== undefined){let data36 = data33.overdraftInterestAccrued;const _errs80 = errors;if(!((typeof data36 == "number") && (isFinite(data36)))){validate11.errors = [{instancePath:instancePath+"/interestAccruedAmounts/overdraftInterestAccrued",schemaPath:"#/$defs/DepositInterestAccruedAmounts/properties/overdraftInterestAccrued/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid9 = _errs80 === errors;}else {var valid9 = true;}if(valid9){if(data33.technicalOverdraftInterestAccrued !== undefined){let data37 = data33.technicalOverdraftInterestAccrued;const _errs82 = errors;if(!((typeof data37 == "number") && (isFinite(data37)))){validate11.errors = [{instancePath:instancePath+"/interestAccruedAmounts/technicalOverdraftInterestAccrued",schemaPath:"#/$defs/DepositInterestAccruedAmounts/properties/technicalOverdraftInterestAccrued/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid9 = _errs82 === errors;}else {var valid9 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/interestAccruedAmounts",schemaPath:"#/$defs/DepositInterestAccruedAmounts/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs72 === errors;}else {var valid0 = true;}if(valid0){if(data.migrationEventKey !== undefined){const _errs84 = errors;if(typeof data.migrationEventKey !== "string"){validate11.errors = [{instancePath:instancePath+"/migrationEventKey",schemaPath:"#/properties/migrationEventKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs84 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){const _errs86 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs86 === errors;}else {var valid0 = true;}if(valid0){if(data.originalTransactionKey !== undefined){const _errs88 = errors;if(typeof data.originalTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/originalTransactionKey",schemaPath:"#/properties/originalTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs88 === errors;}else {var valid0 = true;}if(valid0){if(data.parentAccountKey !== undefined){const _errs90 = errors;if(typeof data.parentAccountKey !== "string"){validate11.errors = [{instancePath:instancePath+"/parentAccountKey",schemaPath:"#/properties/parentAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs90 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentDetails !== undefined){const _errs92 = errors;if(!(validate14(data.paymentDetails, {instancePath:instancePath+"/paymentDetails",parentData:data,parentDataProperty:"paymentDetails",rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid0 = _errs92 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentOrderId !== undefined){const _errs93 = errors;if(typeof data.paymentOrderId !== "string"){validate11.errors = [{instancePath:instancePath+"/paymentOrderId",schemaPath:"#/properties/paymentOrderId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs93 === errors;}else {var valid0 = true;}if(valid0){if(data.taxes !== undefined){let data44 = data.taxes;const _errs95 = errors;const _errs96 = errors;if(errors === _errs96){if(data44 && typeof data44 == "object" && !Array.isArray(data44)){if(data44.taxRate !== undefined){let data45 = data44.taxRate;if(!((typeof data45 == "number") && (isFinite(data45)))){validate11.errors = [{instancePath:instancePath+"/taxes/taxRate",schemaPath:"#/$defs/DepositTaxes/properties/taxRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/taxes",schemaPath:"#/$defs/DepositTaxes/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs95 === errors;}else {var valid0 = true;}if(valid0){if(data.terms !== undefined){const _errs101 = errors;if(!(validate30(data.terms, {instancePath:instancePath+"/terms",parentData:data,parentDataProperty:"terms",rootData}))){vErrors = vErrors === null ? validate30.errors : vErrors.concat(validate30.errors);errors = vErrors.length;}var valid0 = _errs101 === errors;}else {var valid0 = true;}if(valid0){if(data.tillKey !== undefined){const _errs102 = errors;if(typeof data.tillKey !== "string"){validate11.errors = [{instancePath:instancePath+"/tillKey",schemaPath:"#/properties/tillKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs102 === errors;}else {var valid0 = true;}if(valid0){if(data.transactionDetails !== undefined){let data48 = data.transactionDetails;const _errs104 = errors;const _errs105 = errors;if(errors === _errs105){if(data48 && typeof data48 == "object" && !Array.isArray(data48)){if(data48.transactionChannelId !== undefined){const _errs108 = errors;if(typeof data48.transactionChannelId !== "string"){validate11.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelId",schemaPath:"#/$defs/TransactionDetails/properties/transactionChannelId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid13 = _errs108 === errors;}else {var valid13 = true;}if(valid13){if(data48.transactionChannelKey !== undefined){const _errs110 = errors;if(typeof data48.transactionChannelKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelKey",schemaPath:"#/$defs/TransactionDetails/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid13 = _errs110 === errors;}else {var valid13 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/transactionDetails",schemaPath:"#/$defs/TransactionDetails/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs104 === errors;}else {var valid0 = true;}if(valid0){if(data.transferDetails !== undefined){let data51 = data.transferDetails;const _errs112 = errors;const _errs113 = errors;if(errors === _errs113){if(data51 && typeof data51 == "object" && !Array.isArray(data51)){if(data51.linkedDepositTransactionKey !== undefined){const _errs116 = errors;if(typeof data51.linkedDepositTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transferDetails/linkedDepositTransactionKey",schemaPath:"#/$defs/TransferDetails/properties/linkedDepositTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid15 = _errs116 === errors;}else {var valid15 = true;}if(valid15){if(data51.linkedLoanTransactionKey !== undefined){const _errs118 = errors;if(typeof data51.linkedLoanTransactionKey !== "string"){validate11.errors = [{instancePath:instancePath+"/transferDetails/linkedLoanTransactionKey",schemaPath:"#/$defs/TransferDetails/properties/linkedLoanTransactionKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid15 = _errs118 === errors;}else {var valid15 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/transferDetails",schemaPath:"#/$defs/TransferDetails/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs112 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){const _errs120 = errors;let valid16;valid16 = false;for(const v0 of schema12.properties.type.enum){if(func0(data.type, v0)){valid16 = true;break;}}if(!valid16){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs120 === errors;}else {var valid0 = true;}if(valid0){if(data.userKey !== undefined){const _errs121 = errors;if(typeof data.userKey !== "string"){validate11.errors = [{instancePath:instancePath+"/userKey",schemaPath:"#/properties/userKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs121 === errors;}else {var valid0 = true;}if(valid0){if(data.valueDate !== undefined){const _errs123 = errors;if(errors === _errs123){if(errors === _errs123){if(!(typeof data.valueDate === "string")){validate11.errors = [{instancePath:instancePath+"/valueDate",schemaPath:"#/properties/valueDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs123 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;