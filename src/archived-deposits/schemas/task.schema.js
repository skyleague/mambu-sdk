/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import { default as ajvDistRuntimeEqualDefault } from 'ajv/dist/runtime/equal.js';
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Task","type":"object","description":"Represents a human task that can be assigned by one user to another. When a task is created, it's status is set to `OPEN`.","properties":{"assignedUserKey":{"type":"string","description":"The key of the user this task is assigned to."},"createdByFullName":{"type":"string","description":"The name of the user who created the task."},"createdByUserKey":{"type":"string","description":"The key of the user that created this task. The value is not editable and it is populated at task creation with the current user key."},"creationDate":{"type":"string","description":"The date when the task was created.","format":"date-time"},"description":{"type":"string","description":"The description of the task."},"dueDate":{"type":"string","description":"The due date when the task has to be completed.","format":"date"},"encodedKey":{"type":"string","description":"The encoded key of the task, which is auto generated, and must be unique."},"id":{"type":"integer","description":"The ID of the task, which is uniquely generated for the task."},"lastModifiedDate":{"type":"string","description":"The last date when the task was modified.","format":"date-time"},"status":{"description":"The status of this task, a new task always has an `OPEN` status.","enum":["OPEN","COMPLETED"]},"taskLinkKey":{"type":"string","description":"The individual linked to this task. If null, it means nobody is linked to this task."},"taskLinkType":{"description":"The type of the owner represented by the task link key.","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"templateKey":{"type":"string","description":"The template key used to create the task."},"title":{"type":"string","description":"The title of the task."}},"required":["dueDate"],"additionalProperties":true};const func0 = (ajvDistRuntimeEqualDefault.default ?? ajvDistRuntimeEqualDefault);function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.dueDate === undefined) && (missing0 = "dueDate")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.assignedUserKey !== undefined){const _errs2 = errors;if(typeof data.assignedUserKey !== "string"){validate10.errors = [{instancePath:instancePath+"/assignedUserKey",schemaPath:"#/properties/assignedUserKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.createdByFullName !== undefined){const _errs4 = errors;if(typeof data.createdByFullName !== "string"){validate10.errors = [{instancePath:instancePath+"/createdByFullName",schemaPath:"#/properties/createdByFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.createdByUserKey !== undefined){const _errs6 = errors;if(typeof data.createdByUserKey !== "string"){validate10.errors = [{instancePath:instancePath+"/createdByUserKey",schemaPath:"#/properties/createdByUserKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs8 = errors;if(errors === _errs8){if(errors === _errs8){if(!(typeof data.creationDate === "string")){validate10.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs10 = errors;if(typeof data.description !== "string"){validate10.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.dueDate !== undefined){const _errs12 = errors;if(errors === _errs12){if(errors === _errs12){if(!(typeof data.dueDate === "string")){validate10.errors = [{instancePath:instancePath+"/dueDate",schemaPath:"#/properties/dueDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs14 = errors;if(typeof data.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){let data7 = data.id;const _errs16 = errors;if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs18 = errors;if(errors === _errs18){if(errors === _errs18){if(!(typeof data.lastModifiedDate === "string")){validate10.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.status !== undefined){let data9 = data.status;const _errs20 = errors;if(!((data9 === "OPEN") || (data9 === "COMPLETED"))){validate10.errors = [{instancePath:instancePath+"/status",schemaPath:"#/properties/status/enum",keyword:"enum",params:{allowedValues: schema11.properties.status.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.taskLinkKey !== undefined){const _errs21 = errors;if(typeof data.taskLinkKey !== "string"){validate10.errors = [{instancePath:instancePath+"/taskLinkKey",schemaPath:"#/properties/taskLinkKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.taskLinkType !== undefined){const _errs23 = errors;let valid1;valid1 = false;for(const v0 of schema11.properties.taskLinkType.enum){if(func0(data.taskLinkType, v0)){valid1 = true;break;}}if(!valid1){validate10.errors = [{instancePath:instancePath+"/taskLinkType",schemaPath:"#/properties/taskLinkType/enum",keyword:"enum",params:{allowedValues: schema11.properties.taskLinkType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.templateKey !== undefined){const _errs24 = errors;if(typeof data.templateKey !== "string"){validate10.errors = [{instancePath:instancePath+"/templateKey",schemaPath:"#/properties/templateKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){const _errs26 = errors;if(typeof data.title !== "string"){validate10.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;