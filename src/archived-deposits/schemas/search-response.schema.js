/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"SearchResponse","type":"array","items":{"$ref":"#/$defs/ArchivedDepositTransaction"},"$defs":{"ArchivedDepositTransaction":{"type":"object","description":"Represents the archived custom field values of a deposit transaction.","properties":{"transactionId":{"type":"integer","description":"The id of the archived deposit transaction, unique"},"valueDate":{"type":"string","description":"The date of entry created for the deposit transaction to be archived","format":"date-time"}},"required":["transactionId"],"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents the archived custom field values of a deposit transaction.","properties":{"transactionId":{"type":"integer","description":"The id of the archived deposit transaction, unique"},"valueDate":{"type":"string","description":"The date of entry created for the deposit transaction to be archived","format":"date-time"}},"required":["transactionId"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if((data0.transactionId === undefined) && (missing0 = "transactionId")){validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/ArchivedDepositTransaction/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data0.transactionId !== undefined){let data1 = data0.transactionId;const _errs5 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/transactionId",schemaPath:"#/$defs/ArchivedDepositTransaction/properties/transactionId/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs5 === errors;}else {var valid2 = true;}if(valid2){if(data0.valueDate !== undefined){const _errs7 = errors;if(errors === _errs7){if(errors === _errs7){if(!(typeof data0.valueDate === "string")){validate10.errors = [{instancePath:instancePath+"/" + i0+"/valueDate",schemaPath:"#/$defs/ArchivedDepositTransaction/properties/valueDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs7 === errors;}else {var valid2 = true;}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/ArchivedDepositTransaction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;