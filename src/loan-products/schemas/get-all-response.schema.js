/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"getAllResponse","type":"array","items":{"$ref":"#/$defs/LoanProduct"},"$defs":{"LoanProduct":{"type":"object","title":"LoanProduct","description":"Represents a loan product.","properties":{"accountingSettings":{"title":"accountingSettings","$ref":"#/$defs/AccountingSettingsaf30"},"accountLinkSettings":{"title":"accountLinkSettings","$ref":"#/$defs/AccountLinkSettingsaf30"},"adjustInterestForFirstInstallment":{"type":"boolean","title":"adjustInterestForFirstInstallment","description":"`TRUE` if it is possible to adjust the interest for the first repayment when the first repayment period is different than the repayment frequency, `FALSE` otherwise."},"allowCustomRepaymentAllocation":{"type":"boolean","title":"allowCustomRepaymentAllocation","description":"`TRUE` if an additional payment may be allocated on the account, ignoring the default repayment allocation order, `FALSE` otherwise."},"arrearsSettings":{"title":"arrearsSettings","$ref":"#/$defs/ProductArrearsSettingsaf30"},"availabilitySettings":{"title":"availabilitySettings","$ref":"#/$defs/ProductAvailabilitySettingsaf30"},"category":{"title":"category","description":"The category of the loan product.","enum":["PERSONAL_LENDING","PURCHASE_FINANCING","RETAIL_MORTGAGES","SME_LENDING","COMMERCIAL","UNCATEGORIZED"]},"creationDate":{"type":"string","title":"creationDate","description":"The date the loan product was created.","format":"date-time"},"creditArrangementSettings":{"title":"creditArrangementSettings","$ref":"#/$defs/CreditArrangementSettingsaf30"},"currency":{"title":"currency","$ref":"#/$defs/Currencyaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the loan product, it is auto generated, and unique."},"feesSettings":{"title":"feesSettings","$ref":"#/$defs/FeesSettingsaf30"},"fundingSettings":{"title":"fundingSettings","$ref":"#/$defs/FundingSettingsaf30"},"gracePeriodSettings":{"title":"gracePeriodSettings","$ref":"#/$defs/GracePeriodSettingsaf30"},"id":{"type":"string","title":"id","description":"The ID of the loan product, can be generated and customized, and must be unique."},"interestSettings":{"title":"interestSettings","$ref":"#/$defs/ProductInterestSettingsaf30"},"internalControls":{"title":"internalControls","$ref":"#/$defs/InternalControlsaf30"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date the loan product was updated.","format":"date-time"},"loanAmountSettings":{"title":"loanAmountSettings","$ref":"#/$defs/LoanAmountSettingsaf30"},"name":{"type":"string","title":"name","description":"The name of the loan product."},"newAccountSettings":{"title":"newAccountSettings","$ref":"#/$defs/NewAccountSettingsaf30"},"notes":{"type":"string","title":"notes","description":"The notes or description of the loan product."},"offsetSettings":{"title":"offsetSettings","$ref":"#/$defs/OffsetSettingsaf30"},"paymentSettings":{"title":"paymentSettings","$ref":"#/$defs/PaymentSettingsaf30"},"penaltySettings":{"title":"penaltySettings","$ref":"#/$defs/ProductPenaltySettingsaf30"},"redrawSettings":{"title":"redrawSettings","$ref":"#/$defs/ProductRedrawSettingsaf30"},"scheduleSettings":{"title":"scheduleSettings","$ref":"#/$defs/LoanProductScheduleSettingsaf30"},"securitySettings":{"title":"securitySettings","$ref":"#/$defs/SecuritySettingsaf30"},"state":{"title":"state","description":"The current state of the loan product.","enum":["ACTIVE","INACTIVE"]},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/TaxSettingsaf30"},"templates":{"type":"array","title":"templates","description":"The template documents of the loan product.","items":{"$ref":"#/$defs/DocumentTemplateaf30"}},"type":{"title":"type","description":"The type of the loan product.","enum":["FIXED_TERM_LOAN","DYNAMIC_TERM_LOAN","INTEREST_FREE_LOAN","TRANCHED_LOAN","REVOLVING_CREDIT"]}},"required":["creditArrangementSettings","id","name","type"],"additionalProperties":true},"AccountingSettingsaf30":{"type":"object","title":"AccountingSettingsaf30","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"title":"accountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","CASH","ACCRUAL"]},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules for the product.","items":{"$ref":"#/$defs/GLAccountingRuleaf30"}},"interestAccrualCalculation":{"title":"interestAccrualCalculation","description":"The accounting interest calculation option selected for the product.","enum":["NONE","AGGREGATED_AMOUNT","BREAKDOWN_PER_ACCOUNT"]},"interestAccruedAccountingMethod":{"title":"interestAccruedAccountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":true},"GLAccountingRuleaf30":{"type":"object","title":"GLAccountingRuleaf30","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the accounting rule, auto generated, unique."},"financialResource":{"title":"financialResource","description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]},"glAccountKey":{"type":"string","title":"glAccountKey","description":"The encoded key of the account that is mapped to the financialResource"},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The key of the transaction rule that uses this rule"}},"required":["financialResource","glAccountKey"],"additionalProperties":true},"AccountLinkSettingsaf30":{"type":"object","title":"AccountLinkSettingsaf30","description":"Defines the settings for account linking.","properties":{"enabled":{"type":"boolean","title":"enabled","description":"Shows whether the loan accounts created using this product can be linked to a savings account."},"linkableDepositProductKey":{"type":"string","title":"linkableDepositProductKey","description":"Loan accounts created for this product can only be linked the the savings accounts that use the savings product with this key. If null, the loan accounts for this product can be linked to any savings account."},"linkedAccountOptions":{"type":"array","title":"linkedAccountOptions","description":"A set of linked account options.","items":{"enum":["AUTO_LINK_ACCOUNTS","AUTO_CREATE_LINKED_ACCOUNTS"]},"uniqueItems":true},"settlementMethod":{"title":"settlementMethod","description":"Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.","enum":["FULL_DUE_AMOUNTS","PARTIAL_DUE_AMOUNTS","NO_AUTOMATED_TRANSFERS"]}},"required":["enabled"],"additionalProperties":true},"ProductArrearsSettingsaf30":{"type":"object","title":"ProductArrearsSettingsaf30","description":"The product arrears settings, shows whether the non working days are taken in consideration or not when applying penalties/late fees or when setting an account into arrears","properties":{"dateCalculationMethod":{"title":"dateCalculationMethod","description":"The arrears date calculation method.","enum":["ACCOUNT_FIRST_WENT_TO_ARREARS","LAST_LATE_REPAYMENT","ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"]},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the arrears base settings, auto generated, unique."},"monthlyToleranceDay":{"type":"integer","title":"monthlyToleranceDay","description":"Defines the tolerance monthly date"},"nonWorkingDaysMethod":{"title":"nonWorkingDaysMethod","description":"Shows whether the non working days are taken in consideration or not when applying penaltees/late fees or when setting an account into arrears","enum":["INCLUDED","EXCLUDED"]},"toleranceCalculationMethod":{"title":"toleranceCalculationMethod","description":"Defines the tolerance calculation method","enum":["ARREARS_TOLERANCE_PERIOD","MONTHLY_ARREARS_TOLERANCE_DAY"]},"toleranceFloorAmount":{"type":"number","title":"toleranceFloorAmount","description":"The tolerance floor amount."},"tolerancePercentageOfOutstandingPrincipal":{"title":"tolerancePercentageOfOutstandingPrincipal","$ref":"#/$defs/DecimalIntervalaf30"},"tolerancePeriod":{"title":"tolerancePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"}},"additionalProperties":true},"DecimalIntervalaf30":{"type":"object","title":"DecimalIntervalaf30","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"minValue":{"type":"number","title":"minValue","description":"The minimum value."}},"additionalProperties":true},"IntegerIntervalConstraintsaf30":{"type":"object","title":"IntegerIntervalConstraintsaf30","description":"Decimal integer, like min/max/default.","properties":{"defaultValue":{"type":"integer","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the integer constraint, auto generated, unique"},"maxValue":{"type":"integer","title":"maxValue","description":"The maximum value."},"minValue":{"type":"integer","title":"minValue","description":"The minimum value."}},"additionalProperties":true},"ProductAvailabilitySettingsaf30":{"type":"object","title":"ProductAvailabilitySettingsaf30","description":"Holds information about product availability.","properties":{"availableFor":{"type":"array","title":"availableFor","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS","SOLIDARITY_GROUPS"]},"uniqueItems":true},"branchSettings":{"title":"branchSettings","$ref":"#/$defs/BranchSettingsaf30"}},"additionalProperties":true},"BranchSettingsaf30":{"type":"object","title":"BranchSettingsaf30","description":"Holds information about branch availability for the product.","properties":{"availableProductBranches":{"type":"array","title":"availableProductBranches","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}},"forAllBranches":{"type":"boolean","title":"forAllBranches","description":"Indicates if this product should be available for all branches"}},"additionalProperties":true},"CreditArrangementSettingsaf30":{"type":"object","title":"CreditArrangementSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"title":"creditArrangementRequirement","description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":true},"Currencyaf30":{"type":"object","title":"Currencyaf30","description":"Represents a currency eg. USD, EUR.","properties":{"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]},"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."}},"additionalProperties":true},"FeesSettingsaf30":{"type":"object","title":"FeesSettingsaf30","description":"Defines fees settings for the product.","properties":{"allowArbitraryFees":{"type":"boolean","title":"allowArbitraryFees","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."},"fees":{"type":"array","title":"fees","description":"List of all fees that can be applied for accounts of this loan product.","items":{"$ref":"#/$defs/PredefinedFeeaf30"}}},"additionalProperties":true},"PredefinedFeeaf30":{"type":"object","title":"PredefinedFeeaf30","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"$ref":"#/$defs/GLAccountingRuleaf30"}},"amortizationSettings":{"title":"amortizationSettings","$ref":"#/$defs/PeriodIntervalSettingsaf30"},"amount":{"type":"number","title":"amount","description":"The amount of the fee"},"amountCalculationFunctionName":{"type":"string","title":"amountCalculationFunctionName","description":"Mambu Function name used for the fee calculation"},"amountCalculationMethod":{"title":"amountCalculationMethod","description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","LOAN_AMOUNT_PERCENTAGE","REPAYMENT_PRINCIPAL_AMOUNT_PERCENTAGE","LOAN_AMOUNT_PERCENTAGE_NUMBER_OF_INSTALLMENTS","FLAT_NUMBER_OF_INSTALLMENTS","IOF_PERCENTAGE_OF_DISBURSED_AMOUNT","IOF_PERCENTAGE_OF_INSTALLMENT_PRINCIPAL","IOF_PERCENTAGE_OF_LATE_INSTALLMENT_PRINCIPAL","MAMBU_FUNCTION"]},"applyDateMethod":{"title":"applyDateMethod","description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]},"creationDate":{"type":"string","title":"creationDate","description":"Shows the creation date of the fee","format":"date-time"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the predefined fee, auto generated, unique"},"feeApplication":{"title":"feeApplication","description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"id":{"type":"string","title":"id","description":"The id of the fee"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"Shows the last modified date of the fee","format":"date-time"},"name":{"type":"string","title":"name","description":"The name of the fee"},"percentageAmount":{"type":"number","title":"percentageAmount","description":"The amount of the fee in percents applied to percentSource"},"state":{"title":"state","description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/FeeTaxSettingsaf30"},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY","IOF","EARLY_REPAYMENT_CHARGE"]}},"required":["feeApplication","state","trigger"],"additionalProperties":true},"PeriodIntervalSettingsaf30":{"type":"object","title":"PeriodIntervalSettingsaf30","description":"The settings for defining period intervals.","properties":{"amortizationProfile":{"title":"amortizationProfile","description":"Type of amortization profile used for fee","enum":["NONE","SUM_OF_YEARS_DIGITS","STRAIGHT_LINE","EFFECTIVE_INTEREST_RATE"]},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the period interval settings, auto generated, unique."},"feeAmortizationUponRescheduleRefinanceOption":{"title":"feeAmortizationUponRescheduleRefinanceOption","description":"Flag for signaling if fee amortization should be continued or finished at account reschedule/refinance","enum":["END_AMORTIZATION_ON_THE_ORIGINAL_ACCOUNT","CONTINUE_AMORTIZATION_ON_THE_RESCHEDULED_REFINANCED_ACCOUNT"]},"frequency":{"title":"frequency","description":"Frequency settings of the fee amortization","enum":["ACCOUNT_INSTALLMENTS_DUE_DATES","ACCOUNT_INSTALLMENTS_DUE_DATES_DAILY_BOOKING","CUSTOM_INTERVAL"]},"intervalCount":{"type":"integer","title":"intervalCount","description":"Total number of intervals"},"intervalType":{"title":"intervalType","description":"Defines the options for an interval","enum":["PREDEFINED_INTERVALS","FULL_TERM"]},"periodCount":{"type":"integer","title":"periodCount","description":"Period count used in conjunction with periodUnit to determine the next date of the interval"},"periodUnit":{"title":"periodUnit","description":"Amortization unit to determine the interval between amortizations","enum":["DAYS","WEEKS","MONTHS","YEARS"]}},"additionalProperties":true},"FeeTaxSettingsaf30":{"type":"object","title":"FeeTaxSettingsaf30","description":"Tax settings for a specific Predefined fee that overrides the tax settings of Loan Product","properties":{"taxableCalculationMethod":{"title":"taxableCalculationMethod","description":"Marks a specific fee as non-taxable (taxes are not calculated for it).Feature is in the Early Stage. To be enabled by request.","enum":["DEFAULT","NON_TAXABLE","CUSTOM_TAX"]}},"additionalProperties":true},"FundingSettingsaf30":{"type":"object","title":"FundingSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"enabled":{"type":"boolean","title":"enabled","description":"Indicates whether the product has the investor funds enabled or not."},"funderInterestCommission":{"title":"funderInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"funderInterestCommissionAllocationType":{"title":"funderInterestCommissionAllocationType","description":"Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).","enum":["PERCENTAGE_OF_LOAN_FUNDING","FIXED_INTEREST_COMMISSIONS"]},"lockFundsAtApproval":{"type":"boolean","title":"lockFundsAtApproval","description":"Shows whether investor funds are locked or not at the loan account's approval."},"organizationInterestCommission":{"title":"organizationInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"requiredFunds":{"type":"number","title":"requiredFunds","description":"The required investor funds percentage, for opening an account with external funding. If null, the investor funds are not enabled."}},"additionalProperties":true},"DecimalConstraintsaf30":{"type":"object","title":"DecimalConstraintsaf30","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"minValue":{"type":"number","title":"minValue","description":"The minimum value."}},"additionalProperties":true},"GracePeriodSettingsaf30":{"type":"object","title":"GracePeriodSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"gracePeriod":{"title":"gracePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"gracePeriodType":{"title":"gracePeriodType","description":"The grace period type. Representing the type of grace period which is possible for a loan account.","enum":["NONE","PAY_INTEREST_ONLY","INTEREST_FORGIVENESS"]}},"additionalProperties":true},"ProductInterestSettingsaf30":{"type":"object","title":"ProductInterestSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the loan account crated based on this product.","properties":{"accrueLateInterest":{"type":"boolean","title":"accrueLateInterest","description":"Whether late interest should be accrued, applied and paid"},"compoundingFrequency":{"title":"compoundingFrequency","description":"The frequency on which the accrued interest will be added to the principal for interest calculation. It is used only for InterestType.COMPOUNDING_INTEREST","const":"DAILY"},"daysInYear":{"title":"daysInYear","description":"The days in year that should be used for loan calculations.","enum":["ACTUAL_365_FIXED","ACTUAL_364","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","BUS_252","E30_42_365"]},"indexRateSettings":{"title":"indexRateSettings","$ref":"#/$defs/InterestProductSettingsaf30"},"interestApplicationMethod":{"title":"interestApplicationMethod","description":"The interest application method. Represents the interest application method that determines whether the interest gets applied on the account's disbursement or on each repayment.","enum":["AFTER_DISBURSEMENT","REPAYMENT_DUE_DATE"]},"interestBalanceCalculationMethod":{"title":"interestBalanceCalculationMethod","description":"The interest balance calculation method. Represents the option which determines the way the balance for the account's interest is computed.","enum":["ONLY_PRINCIPAL","PRINCIPAL_AND_INTEREST"]},"interestCalculationMethod":{"title":"interestCalculationMethod","description":"The interest calculation method. Holds the type of interest calculation method.","enum":["FLAT","DECLINING_BALANCE","DECLINING_BALANCE_DISCOUNTED"]},"interestRateSettings":{"type":"array","title":"interestRateSettings","description":"Adjustable interest rates settings","items":{"$ref":"#/$defs/ProductInterestRateSettingsaf30"}},"interestType":{"title":"interestType","description":"The possible values for how we compute and apply the interest","enum":["SIMPLE_INTEREST","CAPITALIZED_INTEREST","COMPOUNDING_INTEREST"]},"scheduleInterestDaysCountMethod":{"title":"scheduleInterestDaysCountMethod","description":"Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.","enum":["REPAYMENT_PERIODICITY","ACTUAL_DAYS_COUNT"]}},"required":["daysInYear","interestCalculationMethod","scheduleInterestDaysCountMethod"],"additionalProperties":true},"InterestProductSettingsaf30":{"type":"object","title":"InterestProductSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the loan account created based on this product.","properties":{"accrueInterestAfterMaturity":{"type":"boolean","title":"accrueInterestAfterMaturity","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"allowNegativeInterestRate":{"type":"boolean","title":"allowNegativeInterestRate","description":"Indicator whether the loan product allows negative values for interest rate or interest spread"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"},"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Interest spread + index interest rate can't be more than this amount (valid only for index interest rate products)."},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Interest spread + index interest rate can't be less than this amount (valid only for index interest rate products)."},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/InterestRateTieraf30"}}},"additionalProperties":true},"InterestRateTieraf30":{"type":"object","title":"InterestRateTieraf30","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true},"ProductInterestRateSettingsaf30":{"type":"object","title":"ProductInterestRateSettingsaf30","description":"Adjustable interest rates settings","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate settings, auto generated, unique"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Maximum value allowed for index based interest rate. Valid only for index interest rate."},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Minimum value allowed for index based interest rate. Valid only for index interest rate."},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count. Valid only for index interest rate."},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit. Valid only for index interest rate.","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or indexed(interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]}},"required":["interestRateSource"],"additionalProperties":true},"InternalControlsaf30":{"type":"object","title":"InternalControlsaf30","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","title":"dormancyPeriodDays","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"fourEyesPrinciple":{"title":"fourEyesPrinciple","$ref":"#/$defs/FourEyesPrincipleaf30"},"lockSettings":{"title":"lockSettings","$ref":"#/$defs/LockSettingsaf30"}},"additionalProperties":true},"FourEyesPrincipleaf30":{"type":"object","title":"FourEyesPrincipleaf30","description":"Settings for Four Eyes Principle","properties":{"activeForLoanApproval":{"type":"boolean","title":"activeForLoanApproval","description":"Requires separate users to create and approve loan accounts"}},"additionalProperties":true},"LockSettingsaf30":{"type":"object","title":"LockSettingsaf30","description":"Settings applied when transitioning accounts to Locked state","properties":{"cappingConstraintType":{"title":"cappingConstraintType","description":"Specifies constraint types for capping charges.","enum":["SOFT_CAP","HARD_CAP"]},"cappingMethod":{"title":"cappingMethod","description":"Specifies how principal will be used when calculating capping charges.","enum":["OUTSTANDING_PRINCIPAL_PERCENTAGE","ORIGINAL_PRINCIPAL_PERCENTAGE"]},"cappingPercentage":{"type":"number","title":"cappingPercentage","description":"Specifies the percentage of principal that cannot be exceeded by the sum of interest, fees and penalty balances."},"lockPeriodDays":{"type":"integer","title":"lockPeriodDays","description":"Specifies the number of days for in which the account will be locked if it stays in arrears."}},"additionalProperties":true},"LoanAmountSettingsaf30":{"type":"object","title":"LoanAmountSettingsaf30","description":"The amount settings, holds all amount properties.","properties":{"loanAmount":{"title":"loanAmount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"trancheSettings":{"title":"trancheSettings","$ref":"#/$defs/TrancheSettingsaf30"}},"additionalProperties":true},"AmountDecimalConstraintsaf30":{"type":"object","title":"AmountDecimalConstraintsaf30","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"minValue":{"type":"number","title":"minValue","description":"The minimum value."}},"additionalProperties":true},"TrancheSettingsaf30":{"type":"object","title":"TrancheSettingsaf30","description":"The tranche settings, indicates the settings regarding tranches in case the product is configured to support tranches.","properties":{"maxNumberOfTranches":{"type":"integer","title":"maxNumberOfTranches","description":"The number of tranches supported by the loan product"}},"additionalProperties":true},"NewAccountSettingsaf30":{"type":"object","title":"NewAccountSettingsaf30","description":"The new account settings, defines the settings and constraints used by new loan account created based on this product.","properties":{"accountInitialState":{"title":"accountInitialState","description":"The initial state of the account when is created.","enum":["PARTIAL_APPLICATION","PENDING_APPROVAL","APPROVED","ACTIVE","ACTIVE_IN_ARREARS","CLOSED"]},"idGeneratorType":{"title":"idGeneratorType","description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"idPattern":{"type":"string","title":"idPattern","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["accountInitialState","idGeneratorType","idPattern"],"additionalProperties":true},"OffsetSettingsaf30":{"type":"object","title":"OffsetSettingsaf30","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","title":"allowOffset","description":"Indicates whether the product supports offset"}},"additionalProperties":true},"PaymentSettingsaf30":{"type":"object","title":"PaymentSettingsaf30","description":"Defines the payment settings for the loan product and for loans crated based on this product.","properties":{"amortizationMethod":{"title":"amortizationMethod","description":"Payments Method used by loan accounts for repayments schedule generation.","enum":["STANDARD_PAYMENTS","BALLOON_PAYMENTS","OPTIMIZED_PAYMENTS","PAYMENT_PLAN"]},"latePaymentsRecalculationMethod":{"title":"latePaymentsRecalculationMethod","description":"Recalculate the schedule when late payments are posted on dynamic Equal Installments loans.","enum":["OVERDUE_INSTALLMENTS_INCREASE","LAST_INSTALLMENT_INCREASE"]},"paymentMethod":{"title":"paymentMethod","description":"The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)","enum":["HORIZONTAL","VERTICAL"]},"prepaymentSettings":{"title":"prepaymentSettings","$ref":"#/$defs/ProductPrepaymentSettingsaf30"},"principalPaymentSettings":{"title":"principalPaymentSettings","$ref":"#/$defs/PrincipalPaymentProductSettingsaf30"},"repaymentAllocationOrder":{"type":"array","title":"repaymentAllocationOrder","description":"A list of basic repayment allocation elements such as the principal, interest & fees.","items":{"enum":["PRINCIPAL","INTEREST","FEE","PENALTY"]}}},"required":["latePaymentsRecalculationMethod","paymentMethod","repaymentAllocationOrder"],"additionalProperties":true},"ProductPrepaymentSettingsaf30":{"type":"object","title":"ProductPrepaymentSettingsaf30","description":"Defines the prepayment settings for the product","properties":{"applyInterestOnPrepaymentMethod":{"title":"applyInterestOnPrepaymentMethod","description":"Whether the interest on prepayment is applied manual or automatic.","enum":["AUTOMATIC","MANUAL"]},"elementsRecalculationMethod":{"title":"elementsRecalculationMethod","description":"The elements recalculation method, indicates how the declining balance with equal installments repayments are recalculated","enum":["PRINCIPAL_EXPECTED_FIXED","TOTAL_EXPECTED_FIXED"]},"futurePaymentsAcceptance":{"title":"futurePaymentsAcceptance","description":"Shows whether the future payments are allowed or not for this product (repayment transactions with entry date set in the future)","enum":["NO_FUTURE_PAYMENTS","ACCEPT_FUTURE_PAYMENTS","ACCEPT_OVERPAYMENTS"]},"prepaymentAcceptance":{"title":"prepaymentAcceptance","description":"Shows whether the pre-payments are allowed or not for this product.","enum":["ACCEPT_PREPAYMENTS","NO_PREPAYMENTS"]},"prepaymentRecalculationMethod":{"title":"prepaymentRecalculationMethod","description":"Prepayment recalculation method copied from the loan product on which this account is based","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]},"principalPaidInstallmentStatus":{"title":"principalPaidInstallmentStatus","description":"Installment status for the case when principal is paid off (copied from loan product)","enum":["PARTIALLY_PAID","PAID","ORIGINAL_TOTAL_EXPECTED_PAID"]}},"required":["futurePaymentsAcceptance"],"additionalProperties":true},"PrincipalPaymentProductSettingsaf30":{"type":"object","title":"PrincipalPaymentProductSettingsaf30","description":"Defines the principal payment settings constraints for the loans that will be created based on this product.","properties":{"amount":{"title":"amount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"defaultPrincipalRepaymentInterval":{"type":"integer","title":"defaultPrincipalRepaymentInterval","description":"How many repayments the principal has to be paid"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the settings, auto generated, unique"},"includeFeesInFloorAmount":{"type":"boolean","title":"includeFeesInFloorAmount","description":"If true, the fees will be included along with the principal in the repayment floor amount, for a revolving credit account"},"includeInterestInFloorAmount":{"type":"boolean","title":"includeInterestInFloorAmount","description":"If true, the interest will be included along with the principal in the repayment floor amount, for a revolving credit account"},"percentage":{"title":"percentage","$ref":"#/$defs/DecimalConstraintsaf30"},"principalCeilingValue":{"type":"number","title":"principalCeilingValue","description":"The maximum principal due amount a repayment made with this settings can have"},"principalFloorValue":{"type":"number","title":"principalFloorValue","description":"The minimum principal due amount a repayment made with this settings can have"},"principalPaymentMethod":{"title":"principalPaymentMethod","description":"The method of principal payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]},"totalDueAmountFloor":{"type":"number","title":"totalDueAmountFloor","description":"The minimum total due amount a repayment made with this settings can have"},"totalDuePayment":{"title":"totalDuePayment","description":"The method of total due payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]}},"additionalProperties":true},"ProductPenaltySettingsaf30":{"type":"object","title":"ProductPenaltySettingsaf30","description":"Defines the penalty settings for the product that will be used by the loan accounts based on this product","properties":{"loanPenaltyCalculationMethod":{"title":"loanPenaltyCalculationMethod","description":"The penalty calculation method","enum":["NONE","OVERDUE_BALANCE","OVERDUE_BALANCE_AND_INTEREST","OUTSTANDING_PRINCIPAL"]},"loanPenaltyGracePeriod":{"type":"integer","title":"loanPenaltyGracePeriod","description":"Number of days to wait before applying the loan penalty amounts"},"penaltyRate":{"title":"penaltyRate","$ref":"#/$defs/DecimalConstraintsaf30"}},"required":["loanPenaltyCalculationMethod"],"additionalProperties":true},"ProductRedrawSettingsaf30":{"type":"object","title":"ProductRedrawSettingsaf30","description":"The redraw settings for the product.","properties":{"allowRedraw":{"type":"boolean","title":"allowRedraw","description":"Indicates whether the product support redraw (prepayments which are stored at loan account level as a Redrawable balance)"}},"required":["allowRedraw"],"additionalProperties":true},"LoanProductScheduleSettingsaf30":{"type":"object","title":"LoanProductScheduleSettingsaf30","description":"Defines the settings and constraints for schedule for the loans that are created based on this product.","properties":{"billingCycles":{"title":"billingCycles","$ref":"#/$defs/BillingCyclesProductSettingsaf30"},"defaultRepaymentPeriodCount":{"type":"integer","title":"defaultRepaymentPeriodCount","description":"Interval Repayment Methodology Settings."},"firstRepaymentDueDateOffset":{"title":"firstRepaymentDueDateOffset","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"fixedDaysOfMonth":{"type":"array","title":"fixedDaysOfMonth","description":" Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTH.","items":{"type":"integer"}},"interestAccrualSince":{"title":"interestAccrualSince","description":"Represents the moment the interest will start getting accrued.","enum":["DISBURSEMENT","DUE_DATE"]},"numInstallments":{"title":"numInstallments","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"previewSchedule":{"title":"previewSchedule","$ref":"#/$defs/PreviewScheduleSettingsaf30"},"repaymentMethod":{"title":"repaymentMethod","description":"The repayment method value","enum":["AMOUNT","INSTALLMENTS"]},"repaymentPeriodUnit":{"title":"repaymentPeriodUnit","description":"The frequency of the loan repayment.","enum":["DAYS","WEEKS","MONTHS","YEARS"]},"repaymentReschedulingMethod":{"title":"repaymentReschedulingMethod","description":"The repayment rescheduling method used in calculations.","enum":["NONE","NEXT_WORKING_DAY","PREVIOUS_WORKING_DAY","EXTEND_SCHEDULE"]},"repaymentScheduleEditOptions":{"type":"array","title":"repaymentScheduleEditOptions","description":"Shows the properties from the repayment schedule can be edited.","items":{"enum":["ADJUST_PAYMENT_DATES","ADJUST_PRINCIPAL_PAYMENT_SCHEDULE","ADJUST_INTEREST_PAYMENT_SCHEDULE","ADJUST_FEE_PAYMENT_SCHEDULE","ADJUST_PENALTY_PAYMENT_SCHEDULE","ADJUST_NUMBER_OF_INSTALLMENTS","ADJUST_PAYMENT_HOLIDAYS"]}},"repaymentScheduleMethod":{"title":"repaymentScheduleMethod","description":"The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account's life cycle or will be dynamically recomputed when required.","enum":["NONE","FIXED","DYNAMIC"]},"roundingSettings":{"title":"roundingSettings","$ref":"#/$defs/RoundingSettingsaf30"},"scheduleDueDatesMethod":{"title":"scheduleDueDatesMethod","description":"The methodology used by this product to compute the due dates of the repayments.","enum":["INTERVAL","FIXED_DAYS_OF_MONTH"]},"shortMonthHandlingMethod":{"title":"shortMonthHandlingMethod","description":"Determines how to handle the short months, if they select a fixed day of month > 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.","enum":["LAST_DAY_IN_MONTH","FIRST_DAY_OF_NEXT_MONTH"]}},"required":["repaymentReschedulingMethod","repaymentScheduleMethod","scheduleDueDatesMethod"],"additionalProperties":true},"BillingCyclesProductSettingsaf30":{"type":"object","title":"BillingCyclesProductSettingsaf30","description":"Defines the billing cycles settings for revolving credit products","properties":{"enabled":{"type":"boolean","title":"enabled","description":"The billing cycle status if it is enabled or disabled"},"startDays":{"type":"array","title":"startDays","description":"The billing cycle start days in case it is enabled","items":{"type":"integer"},"uniqueItems":true}},"additionalProperties":true},"PreviewScheduleSettingsaf30":{"type":"object","title":"PreviewScheduleSettingsaf30","description":"Defines the Preview Schedule settings for revolving products","properties":{"numberOfPreviewedInstalments":{"type":"integer","title":"numberOfPreviewedInstalments","description":"Number of Previewed Instalments."},"previewScheduleEnabled":{"type":"boolean","title":"previewScheduleEnabled","description":"Preview Schedule status."}},"additionalProperties":true},"RoundingSettingsaf30":{"type":"object","title":"RoundingSettingsaf30","description":"Defines the rounding settings used in the loan computation.","properties":{"repaymentCurrencyRounding":{"title":"repaymentCurrencyRounding","description":"Specifies the repayment currency rounding method.","enum":["NO_ROUNDING","ROUND_TO_NEAREST_WHOLE_UNIT","ROUND_UP_TO_NEAREST_WHOLE_UNIT"]},"repaymentElementsRoundingMethod":{"title":"repaymentElementsRoundingMethod","description":"Determines how the repayment currency rounding is handled on each element from the schedule.","enum":["NO_ROUNDING","ROUND_ALL","PAYMENT_DUE"]},"roundingRepaymentScheduleMethod":{"title":"roundingRepaymentScheduleMethod","description":"Specifies the rounding repayment schedule method.","enum":["NO_ROUNDING","ROUND_REMAINDER_INTO_LAST_REPAYMENT","ROUND_PRINCIPAL_AND_INTEREST_REMAINDER_INTO_LAST_REPAYMENT"]}},"required":["repaymentCurrencyRounding","repaymentElementsRoundingMethod","roundingRepaymentScheduleMethod"],"additionalProperties":true},"SecuritySettingsaf30":{"type":"object","title":"SecuritySettingsaf30","description":"The settings and constraints for securities.","properties":{"isCollateralEnabled":{"type":"boolean","title":"isCollateralEnabled","description":"Shows whether collateral (assets or other goods) are accepted in order to reach required securities percentage from loan amount, as defined in this product."},"isGuarantorsEnabled":{"type":"boolean","title":"isGuarantorsEnabled","description":"Shows whether guarantors (other clients) are accepted in order to reach the required securities percentage from loan amount, as defined in this product."},"requiredGuaranties":{"type":"number","title":"requiredGuaranties","description":"The securities percentage from loan amount that is needed in order for this account to be approved. Null if the securities are not required."}},"additionalProperties":true},"TaxSettingsaf30":{"type":"object","title":"TaxSettingsaf30","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"taxCalculationMethod":{"title":"taxCalculationMethod","description":"Shows whether the tax is added on top of the target amount or not.","enum":["INCLUSIVE","EXCLUSIVE"]},"taxesOnFeesEnabled":{"type":"boolean","title":"taxesOnFeesEnabled","description":"Shows whether taxes on fees are enabled for this product or not."},"taxesOnInterestEnabled":{"type":"boolean","title":"taxesOnInterestEnabled","description":"Shows whether taxes on interest are enabled for this product or not."},"taxesOnPenaltyEnabled":{"type":"boolean","title":"taxesOnPenaltyEnabled","description":"Shows whether taxes on penalties are enabled for this product or not."},"taxSourceKey":{"type":"string","title":"taxSourceKey","description":"The tax source from where the loan account taxes will be updated."}},"additionalProperties":true},"DocumentTemplateaf30":{"type":"object","title":"DocumentTemplateaf30","description":"Template documents of the product.","properties":{"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the document","format":"date-time"},"encodedKey":{"type":"string","title":"encodedKey","description":"The document encodedKey"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the document","format":"date-time"},"name":{"type":"string","title":"name","description":"The name the document"},"type":{"title":"type","description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]}},"additionalProperties":true}}};const schema12 = {"type":"object","title":"LoanProduct","description":"Represents a loan product.","properties":{"accountingSettings":{"title":"accountingSettings","$ref":"#/$defs/AccountingSettingsaf30"},"accountLinkSettings":{"title":"accountLinkSettings","$ref":"#/$defs/AccountLinkSettingsaf30"},"adjustInterestForFirstInstallment":{"type":"boolean","title":"adjustInterestForFirstInstallment","description":"`TRUE` if it is possible to adjust the interest for the first repayment when the first repayment period is different than the repayment frequency, `FALSE` otherwise."},"allowCustomRepaymentAllocation":{"type":"boolean","title":"allowCustomRepaymentAllocation","description":"`TRUE` if an additional payment may be allocated on the account, ignoring the default repayment allocation order, `FALSE` otherwise."},"arrearsSettings":{"title":"arrearsSettings","$ref":"#/$defs/ProductArrearsSettingsaf30"},"availabilitySettings":{"title":"availabilitySettings","$ref":"#/$defs/ProductAvailabilitySettingsaf30"},"category":{"title":"category","description":"The category of the loan product.","enum":["PERSONAL_LENDING","PURCHASE_FINANCING","RETAIL_MORTGAGES","SME_LENDING","COMMERCIAL","UNCATEGORIZED"]},"creationDate":{"type":"string","title":"creationDate","description":"The date the loan product was created.","format":"date-time"},"creditArrangementSettings":{"title":"creditArrangementSettings","$ref":"#/$defs/CreditArrangementSettingsaf30"},"currency":{"title":"currency","$ref":"#/$defs/Currencyaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the loan product, it is auto generated, and unique."},"feesSettings":{"title":"feesSettings","$ref":"#/$defs/FeesSettingsaf30"},"fundingSettings":{"title":"fundingSettings","$ref":"#/$defs/FundingSettingsaf30"},"gracePeriodSettings":{"title":"gracePeriodSettings","$ref":"#/$defs/GracePeriodSettingsaf30"},"id":{"type":"string","title":"id","description":"The ID of the loan product, can be generated and customized, and must be unique."},"interestSettings":{"title":"interestSettings","$ref":"#/$defs/ProductInterestSettingsaf30"},"internalControls":{"title":"internalControls","$ref":"#/$defs/InternalControlsaf30"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date the loan product was updated.","format":"date-time"},"loanAmountSettings":{"title":"loanAmountSettings","$ref":"#/$defs/LoanAmountSettingsaf30"},"name":{"type":"string","title":"name","description":"The name of the loan product."},"newAccountSettings":{"title":"newAccountSettings","$ref":"#/$defs/NewAccountSettingsaf30"},"notes":{"type":"string","title":"notes","description":"The notes or description of the loan product."},"offsetSettings":{"title":"offsetSettings","$ref":"#/$defs/OffsetSettingsaf30"},"paymentSettings":{"title":"paymentSettings","$ref":"#/$defs/PaymentSettingsaf30"},"penaltySettings":{"title":"penaltySettings","$ref":"#/$defs/ProductPenaltySettingsaf30"},"redrawSettings":{"title":"redrawSettings","$ref":"#/$defs/ProductRedrawSettingsaf30"},"scheduleSettings":{"title":"scheduleSettings","$ref":"#/$defs/LoanProductScheduleSettingsaf30"},"securitySettings":{"title":"securitySettings","$ref":"#/$defs/SecuritySettingsaf30"},"state":{"title":"state","description":"The current state of the loan product.","enum":["ACTIVE","INACTIVE"]},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/TaxSettingsaf30"},"templates":{"type":"array","title":"templates","description":"The template documents of the loan product.","items":{"$ref":"#/$defs/DocumentTemplateaf30"}},"type":{"title":"type","description":"The type of the loan product.","enum":["FIXED_TERM_LOAN","DYNAMIC_TERM_LOAN","INTEREST_FREE_LOAN","TRANCHED_LOAN","REVOLVING_CREDIT"]}},"required":["creditArrangementSettings","id","name","type"],"additionalProperties":true};const schema15 = {"type":"object","title":"AccountLinkSettingsaf30","description":"Defines the settings for account linking.","properties":{"enabled":{"type":"boolean","title":"enabled","description":"Shows whether the loan accounts created using this product can be linked to a savings account."},"linkableDepositProductKey":{"type":"string","title":"linkableDepositProductKey","description":"Loan accounts created for this product can only be linked the the savings accounts that use the savings product with this key. If null, the loan accounts for this product can be linked to any savings account."},"linkedAccountOptions":{"type":"array","title":"linkedAccountOptions","description":"A set of linked account options.","items":{"enum":["AUTO_LINK_ACCOUNTS","AUTO_CREATE_LINKED_ACCOUNTS"]},"uniqueItems":true},"settlementMethod":{"title":"settlementMethod","description":"Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.","enum":["FULL_DUE_AMOUNTS","PARTIAL_DUE_AMOUNTS","NO_AUTOMATED_TRANSFERS"]}},"required":["enabled"],"additionalProperties":true};const schema21 = {"type":"object","title":"CreditArrangementSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"title":"creditArrangementRequirement","description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":true};const schema22 = {"type":"object","title":"Currencyaf30","description":"Represents a currency eg. USD, EUR.","properties":{"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]},"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."}},"additionalProperties":true};const schema45 = {"type":"object","title":"NewAccountSettingsaf30","description":"The new account settings, defines the settings and constraints used by new loan account created based on this product.","properties":{"accountInitialState":{"title":"accountInitialState","description":"The initial state of the account when is created.","enum":["PARTIAL_APPLICATION","PENDING_APPROVAL","APPROVED","ACTIVE","ACTIVE_IN_ARREARS","CLOSED"]},"idGeneratorType":{"title":"idGeneratorType","description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"idPattern":{"type":"string","title":"idPattern","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["accountInitialState","idGeneratorType","idPattern"],"additionalProperties":true};const schema46 = {"type":"object","title":"OffsetSettingsaf30","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","title":"allowOffset","description":"Indicates whether the product supports offset"}},"additionalProperties":true};const schema54 = {"type":"object","title":"ProductRedrawSettingsaf30","description":"The redraw settings for the product.","properties":{"allowRedraw":{"type":"boolean","title":"allowRedraw","description":"Indicates whether the product support redraw (prepayments which are stored at loan account level as a Redrawable balance)"}},"required":["allowRedraw"],"additionalProperties":true};const schema61 = {"type":"object","title":"SecuritySettingsaf30","description":"The settings and constraints for securities.","properties":{"isCollateralEnabled":{"type":"boolean","title":"isCollateralEnabled","description":"Shows whether collateral (assets or other goods) are accepted in order to reach required securities percentage from loan amount, as defined in this product."},"isGuarantorsEnabled":{"type":"boolean","title":"isGuarantorsEnabled","description":"Shows whether guarantors (other clients) are accepted in order to reach the required securities percentage from loan amount, as defined in this product."},"requiredGuaranties":{"type":"number","title":"requiredGuaranties","description":"The securities percentage from loan amount that is needed in order for this account to be approved. Null if the securities are not required."}},"additionalProperties":true};const schema62 = {"type":"object","title":"TaxSettingsaf30","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"taxCalculationMethod":{"title":"taxCalculationMethod","description":"Shows whether the tax is added on top of the target amount or not.","enum":["INCLUSIVE","EXCLUSIVE"]},"taxesOnFeesEnabled":{"type":"boolean","title":"taxesOnFeesEnabled","description":"Shows whether taxes on fees are enabled for this product or not."},"taxesOnInterestEnabled":{"type":"boolean","title":"taxesOnInterestEnabled","description":"Shows whether taxes on interest are enabled for this product or not."},"taxesOnPenaltyEnabled":{"type":"boolean","title":"taxesOnPenaltyEnabled","description":"Shows whether taxes on penalties are enabled for this product or not."},"taxSourceKey":{"type":"string","title":"taxSourceKey","description":"The tax source from where the loan account taxes will be updated."}},"additionalProperties":true};const schema63 = {"type":"object","title":"DocumentTemplateaf30","description":"Template documents of the product.","properties":{"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the document","format":"date-time"},"encodedKey":{"type":"string","title":"encodedKey","description":"The document encodedKey"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the document","format":"date-time"},"name":{"type":"string","title":"name","description":"The name the document"},"type":{"title":"type","description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]}},"additionalProperties":true};const schema13 = {"type":"object","title":"AccountingSettingsaf30","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"title":"accountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","CASH","ACCRUAL"]},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules for the product.","items":{"$ref":"#/$defs/GLAccountingRuleaf30"}},"interestAccrualCalculation":{"title":"interestAccrualCalculation","description":"The accounting interest calculation option selected for the product.","enum":["NONE","AGGREGATED_AMOUNT","BREAKDOWN_PER_ACCOUNT"]},"interestAccruedAccountingMethod":{"title":"interestAccruedAccountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":true};const schema14 = {"type":"object","title":"GLAccountingRuleaf30","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the accounting rule, auto generated, unique."},"financialResource":{"title":"financialResource","description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]},"glAccountKey":{"type":"string","title":"glAccountKey","description":"The encoded key of the account that is mapped to the financialResource"},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The key of the transaction rule that uses this rule"}},"required":["financialResource","glAccountKey"],"additionalProperties":true};const func0 = require("ajv/dist/runtime/equal").default;function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.accountingMethod === undefined) && (missing0 = "accountingMethod")){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountingMethod !== undefined){let data0 = data.accountingMethod;const _errs2 = errors;if(!(((data0 === "NONE") || (data0 === "CASH")) || (data0 === "ACCRUAL"))){validate12.errors = [{instancePath:instancePath+"/accountingMethod",schemaPath:"#/properties/accountingMethod/enum",keyword:"enum",params:{allowedValues: schema13.properties.accountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingRules !== undefined){let data1 = data.accountingRules;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.financialResource === undefined) && (missing1 = "financialResource")) || ((data2.glAccountKey === undefined) && (missing1 = "glAccountKey"))){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GLAccountingRuleaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data2.encodedKey !== undefined){const _errs9 = errors;if(typeof data2.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}if(valid3){if(data2.financialResource !== undefined){const _errs11 = errors;let valid4;valid4 = false;for(const v0 of schema14.properties.financialResource.enum){if(func0(data2.financialResource, v0)){valid4 = true;break;}}if(!valid4){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema14.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data2.glAccountKey !== undefined){const _errs12 = errors;if(typeof data2.glAccountKey !== "string"){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data2.transactionChannelKey !== undefined){const _errs14 = errors;if(typeof data2.transactionChannelKey !== "string"){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/transactionChannelKey",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}}}}else {validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GLAccountingRuleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccrualCalculation !== undefined){let data7 = data.interestAccrualCalculation;const _errs16 = errors;if(!(((data7 === "NONE") || (data7 === "AGGREGATED_AMOUNT")) || (data7 === "BREAKDOWN_PER_ACCOUNT"))){validate12.errors = [{instancePath:instancePath+"/interestAccrualCalculation",schemaPath:"#/properties/interestAccrualCalculation/enum",keyword:"enum",params:{allowedValues: schema13.properties.interestAccrualCalculation.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccruedAccountingMethod !== undefined){let data8 = data.interestAccruedAccountingMethod;const _errs17 = errors;if(!(((data8 === "NONE") || (data8 === "DAILY")) || (data8 === "END_OF_MONTH"))){validate12.errors = [{instancePath:instancePath+"/interestAccruedAccountingMethod",schemaPath:"#/properties/interestAccruedAccountingMethod/enum",keyword:"enum",params:{allowedValues: schema13.properties.interestAccruedAccountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema16 = {"type":"object","title":"ProductArrearsSettingsaf30","description":"The product arrears settings, shows whether the non working days are taken in consideration or not when applying penalties/late fees or when setting an account into arrears","properties":{"dateCalculationMethod":{"title":"dateCalculationMethod","description":"The arrears date calculation method.","enum":["ACCOUNT_FIRST_WENT_TO_ARREARS","LAST_LATE_REPAYMENT","ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"]},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the arrears base settings, auto generated, unique."},"monthlyToleranceDay":{"type":"integer","title":"monthlyToleranceDay","description":"Defines the tolerance monthly date"},"nonWorkingDaysMethod":{"title":"nonWorkingDaysMethod","description":"Shows whether the non working days are taken in consideration or not when applying penaltees/late fees or when setting an account into arrears","enum":["INCLUDED","EXCLUDED"]},"toleranceCalculationMethod":{"title":"toleranceCalculationMethod","description":"Defines the tolerance calculation method","enum":["ARREARS_TOLERANCE_PERIOD","MONTHLY_ARREARS_TOLERANCE_DAY"]},"toleranceFloorAmount":{"type":"number","title":"toleranceFloorAmount","description":"The tolerance floor amount."},"tolerancePercentageOfOutstandingPrincipal":{"title":"tolerancePercentageOfOutstandingPrincipal","$ref":"#/$defs/DecimalIntervalaf30"},"tolerancePeriod":{"title":"tolerancePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"}},"additionalProperties":true};const schema17 = {"type":"object","title":"DecimalIntervalaf30","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"minValue":{"type":"number","title":"minValue","description":"The minimum value."}},"additionalProperties":true};const schema18 = {"type":"object","title":"IntegerIntervalConstraintsaf30","description":"Decimal integer, like min/max/default.","properties":{"defaultValue":{"type":"integer","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the integer constraint, auto generated, unique"},"maxValue":{"type":"integer","title":"maxValue","description":"The maximum value."},"minValue":{"type":"integer","title":"minValue","description":"The minimum value."}},"additionalProperties":true};function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.dateCalculationMethod !== undefined){let data0 = data.dateCalculationMethod;const _errs2 = errors;if(!(((data0 === "ACCOUNT_FIRST_WENT_TO_ARREARS") || (data0 === "LAST_LATE_REPAYMENT")) || (data0 === "ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"))){validate14.errors = [{instancePath:instancePath+"/dateCalculationMethod",schemaPath:"#/properties/dateCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema16.properties.dateCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs3 = errors;if(typeof data.encodedKey !== "string"){validate14.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.monthlyToleranceDay !== undefined){let data2 = data.monthlyToleranceDay;const _errs5 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate14.errors = [{instancePath:instancePath+"/monthlyToleranceDay",schemaPath:"#/properties/monthlyToleranceDay/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.nonWorkingDaysMethod !== undefined){let data3 = data.nonWorkingDaysMethod;const _errs7 = errors;if(!((data3 === "INCLUDED") || (data3 === "EXCLUDED"))){validate14.errors = [{instancePath:instancePath+"/nonWorkingDaysMethod",schemaPath:"#/properties/nonWorkingDaysMethod/enum",keyword:"enum",params:{allowedValues: schema16.properties.nonWorkingDaysMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.toleranceCalculationMethod !== undefined){let data4 = data.toleranceCalculationMethod;const _errs8 = errors;if(!((data4 === "ARREARS_TOLERANCE_PERIOD") || (data4 === "MONTHLY_ARREARS_TOLERANCE_DAY"))){validate14.errors = [{instancePath:instancePath+"/toleranceCalculationMethod",schemaPath:"#/properties/toleranceCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema16.properties.toleranceCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.toleranceFloorAmount !== undefined){let data5 = data.toleranceFloorAmount;const _errs9 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate14.errors = [{instancePath:instancePath+"/toleranceFloorAmount",schemaPath:"#/properties/toleranceFloorAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.tolerancePercentageOfOutstandingPrincipal !== undefined){let data6 = data.tolerancePercentageOfOutstandingPrincipal;const _errs11 = errors;const _errs12 = errors;if(errors === _errs12){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.defaultValue !== undefined){let data7 = data6.defaultValue;const _errs15 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate14.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}if(valid2){if(data6.maxValue !== undefined){let data8 = data6.maxValue;const _errs17 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate14.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs17 === errors;}else {var valid2 = true;}if(valid2){if(data6.minValue !== undefined){let data9 = data6.minValue;const _errs19 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate14.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs19 === errors;}else {var valid2 = true;}}}}else {validate14.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.tolerancePeriod !== undefined){let data10 = data.tolerancePeriod;const _errs21 = errors;const _errs22 = errors;if(errors === _errs22){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){if(data10.defaultValue !== undefined){let data11 = data10.defaultValue;const _errs25 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate14.errors = [{instancePath:instancePath+"/tolerancePeriod/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs25 === errors;}else {var valid4 = true;}if(valid4){if(data10.encodedKey !== undefined){const _errs27 = errors;if(typeof data10.encodedKey !== "string"){validate14.errors = [{instancePath:instancePath+"/tolerancePeriod/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs27 === errors;}else {var valid4 = true;}if(valid4){if(data10.maxValue !== undefined){let data13 = data10.maxValue;const _errs29 = errors;if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){validate14.errors = [{instancePath:instancePath+"/tolerancePeriod/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs29 === errors;}else {var valid4 = true;}if(valid4){if(data10.minValue !== undefined){let data14 = data10.minValue;const _errs31 = errors;if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){validate14.errors = [{instancePath:instancePath+"/tolerancePeriod/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs31 === errors;}else {var valid4 = true;}}}}}else {validate14.errors = [{instancePath:instancePath+"/tolerancePeriod",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}}}}}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}const schema19 = {"type":"object","title":"ProductAvailabilitySettingsaf30","description":"Holds information about product availability.","properties":{"availableFor":{"type":"array","title":"availableFor","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS","SOLIDARITY_GROUPS"]},"uniqueItems":true},"branchSettings":{"title":"branchSettings","$ref":"#/$defs/BranchSettingsaf30"}},"additionalProperties":true};const schema20 = {"type":"object","title":"BranchSettingsaf30","description":"Holds information about branch availability for the product.","properties":{"availableProductBranches":{"type":"array","title":"availableProductBranches","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}},"forAllBranches":{"type":"boolean","title":"forAllBranches","description":"Indicates if this product should be available for all branches"}},"additionalProperties":true};function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.availableFor !== undefined){let data0 = data.availableFor;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;if(!(((data1 === "INDIVIDUALS") || (data1 === "PURE_GROUPS")) || (data1 === "SOLIDARITY_GROUPS"))){validate16.errors = [{instancePath:instancePath+"/availableFor/" + i0,schemaPath:"#/properties/availableFor/items/enum",keyword:"enum",params:{allowedValues: schema19.properties.availableFor.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs4 === errors;if(!valid1){break;}}if(valid1){let i1 = data0.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data0[i1], data0[j0])){validate16.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate16.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.branchSettings !== undefined){let data2 = data.branchSettings;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.availableProductBranches !== undefined){let data3 = data2.availableProductBranches;const _errs9 = errors;if(errors === _errs9){if(Array.isArray(data3)){var valid5 = true;const len1 = data3.length;for(let i2=0; i2<len1; i2++){const _errs11 = errors;if(typeof data3[i2] !== "string"){validate16.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches/" + i2,schemaPath:"#/$defs/BranchSettingsaf30/properties/availableProductBranches/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs11 === errors;if(!valid5){break;}}}else {validate16.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches",schemaPath:"#/$defs/BranchSettingsaf30/properties/availableProductBranches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs9 === errors;}else {var valid4 = true;}if(valid4){if(data2.forAllBranches !== undefined){const _errs13 = errors;if(typeof data2.forAllBranches !== "boolean"){validate16.errors = [{instancePath:instancePath+"/branchSettings/forAllBranches",schemaPath:"#/$defs/BranchSettingsaf30/properties/forAllBranches/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid4 = _errs13 === errors;}else {var valid4 = true;}}}else {validate16.errors = [{instancePath:instancePath+"/branchSettings",schemaPath:"#/$defs/BranchSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}else {validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate16.errors = vErrors;return errors === 0;}const schema23 = {"type":"object","title":"FeesSettingsaf30","description":"Defines fees settings for the product.","properties":{"allowArbitraryFees":{"type":"boolean","title":"allowArbitraryFees","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."},"fees":{"type":"array","title":"fees","description":"List of all fees that can be applied for accounts of this loan product.","items":{"$ref":"#/$defs/PredefinedFeeaf30"}}},"additionalProperties":true};const schema24 = {"type":"object","title":"PredefinedFeeaf30","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"$ref":"#/$defs/GLAccountingRuleaf30"}},"amortizationSettings":{"title":"amortizationSettings","$ref":"#/$defs/PeriodIntervalSettingsaf30"},"amount":{"type":"number","title":"amount","description":"The amount of the fee"},"amountCalculationFunctionName":{"type":"string","title":"amountCalculationFunctionName","description":"Mambu Function name used for the fee calculation"},"amountCalculationMethod":{"title":"amountCalculationMethod","description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","LOAN_AMOUNT_PERCENTAGE","REPAYMENT_PRINCIPAL_AMOUNT_PERCENTAGE","LOAN_AMOUNT_PERCENTAGE_NUMBER_OF_INSTALLMENTS","FLAT_NUMBER_OF_INSTALLMENTS","IOF_PERCENTAGE_OF_DISBURSED_AMOUNT","IOF_PERCENTAGE_OF_INSTALLMENT_PRINCIPAL","IOF_PERCENTAGE_OF_LATE_INSTALLMENT_PRINCIPAL","MAMBU_FUNCTION"]},"applyDateMethod":{"title":"applyDateMethod","description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]},"creationDate":{"type":"string","title":"creationDate","description":"Shows the creation date of the fee","format":"date-time"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the predefined fee, auto generated, unique"},"feeApplication":{"title":"feeApplication","description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"id":{"type":"string","title":"id","description":"The id of the fee"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"Shows the last modified date of the fee","format":"date-time"},"name":{"type":"string","title":"name","description":"The name of the fee"},"percentageAmount":{"type":"number","title":"percentageAmount","description":"The amount of the fee in percents applied to percentSource"},"state":{"title":"state","description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/FeeTaxSettingsaf30"},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY","IOF","EARLY_REPAYMENT_CHARGE"]}},"required":["feeApplication","state","trigger"],"additionalProperties":true};const schema26 = {"type":"object","title":"PeriodIntervalSettingsaf30","description":"The settings for defining period intervals.","properties":{"amortizationProfile":{"title":"amortizationProfile","description":"Type of amortization profile used for fee","enum":["NONE","SUM_OF_YEARS_DIGITS","STRAIGHT_LINE","EFFECTIVE_INTEREST_RATE"]},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the period interval settings, auto generated, unique."},"feeAmortizationUponRescheduleRefinanceOption":{"title":"feeAmortizationUponRescheduleRefinanceOption","description":"Flag for signaling if fee amortization should be continued or finished at account reschedule/refinance","enum":["END_AMORTIZATION_ON_THE_ORIGINAL_ACCOUNT","CONTINUE_AMORTIZATION_ON_THE_RESCHEDULED_REFINANCED_ACCOUNT"]},"frequency":{"title":"frequency","description":"Frequency settings of the fee amortization","enum":["ACCOUNT_INSTALLMENTS_DUE_DATES","ACCOUNT_INSTALLMENTS_DUE_DATES_DAILY_BOOKING","CUSTOM_INTERVAL"]},"intervalCount":{"type":"integer","title":"intervalCount","description":"Total number of intervals"},"intervalType":{"title":"intervalType","description":"Defines the options for an interval","enum":["PREDEFINED_INTERVALS","FULL_TERM"]},"periodCount":{"type":"integer","title":"periodCount","description":"Period count used in conjunction with periodUnit to determine the next date of the interval"},"periodUnit":{"title":"periodUnit","description":"Amortization unit to determine the interval between amortizations","enum":["DAYS","WEEKS","MONTHS","YEARS"]}},"additionalProperties":true};const schema27 = {"type":"object","title":"FeeTaxSettingsaf30","description":"Tax settings for a specific Predefined fee that overrides the tax settings of Loan Product","properties":{"taxableCalculationMethod":{"title":"taxableCalculationMethod","description":"Marks a specific fee as non-taxable (taxes are not calculated for it).Feature is in the Early Stage. To be enabled by request.","enum":["DEFAULT","NON_TAXABLE","CUSTOM_TAX"]}},"additionalProperties":true};function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.feeApplication === undefined) && (missing0 = "feeApplication")) || ((data.state === undefined) && (missing0 = "state"))) || ((data.trigger === undefined) && (missing0 = "trigger"))){validate19.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountingRules !== undefined){let data0 = data.accountingRules;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((data1.financialResource === undefined) && (missing1 = "financialResource")) || ((data1.glAccountKey === undefined) && (missing1 = "glAccountKey"))){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GLAccountingRuleaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.encodedKey !== undefined){const _errs8 = errors;if(typeof data1.encodedKey !== "string"){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.financialResource !== undefined){const _errs10 = errors;let valid4;valid4 = false;for(const v0 of schema14.properties.financialResource.enum){if(func0(data1.financialResource, v0)){valid4 = true;break;}}if(!valid4){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema14.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data1.glAccountKey !== undefined){const _errs11 = errors;if(typeof data1.glAccountKey !== "string"){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data1.transactionChannelKey !== undefined){const _errs13 = errors;if(typeof data1.transactionChannelKey !== "string"){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/transactionChannelKey",schemaPath:"#/$defs/GLAccountingRuleaf30/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}}}}}}else {validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GLAccountingRuleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate19.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.amortizationSettings !== undefined){let data6 = data.amortizationSettings;const _errs15 = errors;const _errs16 = errors;if(errors === _errs16){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.amortizationProfile !== undefined){let data7 = data6.amortizationProfile;const _errs19 = errors;if(!((((data7 === "NONE") || (data7 === "SUM_OF_YEARS_DIGITS")) || (data7 === "STRAIGHT_LINE")) || (data7 === "EFFECTIVE_INTEREST_RATE"))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/amortizationProfile",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/amortizationProfile/enum",keyword:"enum",params:{allowedValues: schema26.properties.amortizationProfile.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs19 === errors;}else {var valid6 = true;}if(valid6){if(data6.encodedKey !== undefined){const _errs20 = errors;if(typeof data6.encodedKey !== "string"){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/encodedKey",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs20 === errors;}else {var valid6 = true;}if(valid6){if(data6.feeAmortizationUponRescheduleRefinanceOption !== undefined){let data9 = data6.feeAmortizationUponRescheduleRefinanceOption;const _errs22 = errors;if(!((data9 === "END_AMORTIZATION_ON_THE_ORIGINAL_ACCOUNT") || (data9 === "CONTINUE_AMORTIZATION_ON_THE_RESCHEDULED_REFINANCED_ACCOUNT"))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/feeAmortizationUponRescheduleRefinanceOption",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/feeAmortizationUponRescheduleRefinanceOption/enum",keyword:"enum",params:{allowedValues: schema26.properties.feeAmortizationUponRescheduleRefinanceOption.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs22 === errors;}else {var valid6 = true;}if(valid6){if(data6.frequency !== undefined){let data10 = data6.frequency;const _errs23 = errors;if(!(((data10 === "ACCOUNT_INSTALLMENTS_DUE_DATES") || (data10 === "ACCOUNT_INSTALLMENTS_DUE_DATES_DAILY_BOOKING")) || (data10 === "CUSTOM_INTERVAL"))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/frequency",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/frequency/enum",keyword:"enum",params:{allowedValues: schema26.properties.frequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs23 === errors;}else {var valid6 = true;}if(valid6){if(data6.intervalCount !== undefined){let data11 = data6.intervalCount;const _errs24 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/intervalCount",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/intervalCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs24 === errors;}else {var valid6 = true;}if(valid6){if(data6.intervalType !== undefined){let data12 = data6.intervalType;const _errs26 = errors;if(!((data12 === "PREDEFINED_INTERVALS") || (data12 === "FULL_TERM"))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/intervalType",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/intervalType/enum",keyword:"enum",params:{allowedValues: schema26.properties.intervalType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs26 === errors;}else {var valid6 = true;}if(valid6){if(data6.periodCount !== undefined){let data13 = data6.periodCount;const _errs27 = errors;if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/periodCount",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/periodCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs27 === errors;}else {var valid6 = true;}if(valid6){if(data6.periodUnit !== undefined){let data14 = data6.periodUnit;const _errs29 = errors;if(!((((data14 === "DAYS") || (data14 === "WEEKS")) || (data14 === "MONTHS")) || (data14 === "YEARS"))){validate19.errors = [{instancePath:instancePath+"/amortizationSettings/periodUnit",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/periodUnit/enum",keyword:"enum",params:{allowedValues: schema26.properties.periodUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs29 === errors;}else {var valid6 = true;}}}}}}}}}else {validate19.errors = [{instancePath:instancePath+"/amortizationSettings",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data15 = data.amount;const _errs30 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate19.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationFunctionName !== undefined){const _errs32 = errors;if(typeof data.amountCalculationFunctionName !== "string"){validate19.errors = [{instancePath:instancePath+"/amountCalculationFunctionName",schemaPath:"#/properties/amountCalculationFunctionName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationMethod !== undefined){const _errs34 = errors;let valid7;valid7 = false;for(const v1 of schema24.properties.amountCalculationMethod.enum){if(func0(data.amountCalculationMethod, v1)){valid7 = true;break;}}if(!valid7){validate19.errors = [{instancePath:instancePath+"/amountCalculationMethod",schemaPath:"#/properties/amountCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema24.properties.amountCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.applyDateMethod !== undefined){let data18 = data.applyDateMethod;const _errs35 = errors;if(!((data18 === "MONTHLY_FROM_ACTIVATION") || (data18 === "FIRST_OF_EVERY_MONTH"))){validate19.errors = [{instancePath:instancePath+"/applyDateMethod",schemaPath:"#/properties/applyDateMethod/enum",keyword:"enum",params:{allowedValues: schema24.properties.applyDateMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs36 = errors;if(errors === _errs36){if(errors === _errs36){if(!(typeof data.creationDate === "string")){validate19.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs38 = errors;if(typeof data.encodedKey !== "string"){validate19.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.feeApplication !== undefined){let data21 = data.feeApplication;const _errs40 = errors;if(!((data21 === "REQUIRED") || (data21 === "OPTIONAL"))){validate19.errors = [{instancePath:instancePath+"/feeApplication",schemaPath:"#/properties/feeApplication/enum",keyword:"enum",params:{allowedValues: schema24.properties.feeApplication.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs41 = errors;if(typeof data.id !== "string"){validate19.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs43 = errors;if(errors === _errs43){if(errors === _errs43){if(!(typeof data.lastModifiedDate === "string")){validate19.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs45 = errors;if(typeof data.name !== "string"){validate19.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}if(valid0){if(data.percentageAmount !== undefined){let data25 = data.percentageAmount;const _errs47 = errors;if(!((typeof data25 == "number") && (isFinite(data25)))){validate19.errors = [{instancePath:instancePath+"/percentageAmount",schemaPath:"#/properties/percentageAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs47 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){let data26 = data.state;const _errs49 = errors;if(!((data26 === "ACTIVE") || (data26 === "INACTIVE"))){validate19.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema24.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs49 === errors;}else {var valid0 = true;}if(valid0){if(data.taxSettings !== undefined){let data27 = data.taxSettings;const _errs50 = errors;const _errs51 = errors;if(errors === _errs51){if(data27 && typeof data27 == "object" && !Array.isArray(data27)){if(data27.taxableCalculationMethod !== undefined){let data28 = data27.taxableCalculationMethod;if(!(((data28 === "DEFAULT") || (data28 === "NON_TAXABLE")) || (data28 === "CUSTOM_TAX"))){validate19.errors = [{instancePath:instancePath+"/taxSettings/taxableCalculationMethod",schemaPath:"#/$defs/FeeTaxSettingsaf30/properties/taxableCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema27.properties.taxableCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate19.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/FeeTaxSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs50 === errors;}else {var valid0 = true;}if(valid0){if(data.trigger !== undefined){const _errs55 = errors;let valid10;valid10 = false;for(const v2 of schema24.properties.trigger.enum){if(func0(data.trigger, v2)){valid10 = true;break;}}if(!valid10){validate19.errors = [{instancePath:instancePath+"/trigger",schemaPath:"#/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema24.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs55 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}else {validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate19.errors = vErrors;return errors === 0;}function validate18(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.allowArbitraryFees !== undefined){const _errs2 = errors;if(typeof data.allowArbitraryFees !== "boolean"){validate18.errors = [{instancePath:instancePath+"/allowArbitraryFees",schemaPath:"#/properties/allowArbitraryFees/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fees !== undefined){let data1 = data.fees;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(!(validate19(data1[i0], {instancePath:instancePath+"/fees/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate18.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}else {validate18.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate18.errors = vErrors;return errors === 0;}const schema28 = {"type":"object","title":"FundingSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"enabled":{"type":"boolean","title":"enabled","description":"Indicates whether the product has the investor funds enabled or not."},"funderInterestCommission":{"title":"funderInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"funderInterestCommissionAllocationType":{"title":"funderInterestCommissionAllocationType","description":"Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).","enum":["PERCENTAGE_OF_LOAN_FUNDING","FIXED_INTEREST_COMMISSIONS"]},"lockFundsAtApproval":{"type":"boolean","title":"lockFundsAtApproval","description":"Shows whether investor funds are locked or not at the loan account's approval."},"organizationInterestCommission":{"title":"organizationInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"requiredFunds":{"type":"number","title":"requiredFunds","description":"The required investor funds percentage, for opening an account with external funding. If null, the investor funds are not enabled."}},"additionalProperties":true};const schema29 = {"type":"object","title":"DecimalConstraintsaf30","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"minValue":{"type":"number","title":"minValue","description":"The minimum value."}},"additionalProperties":true};function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.enabled !== undefined){const _errs2 = errors;if(typeof data.enabled !== "boolean"){validate22.errors = [{instancePath:instancePath+"/enabled",schemaPath:"#/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.funderInterestCommission !== undefined){let data1 = data.funderInterestCommission;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.defaultValue !== undefined){let data2 = data1.defaultValue;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate22.errors = [{instancePath:instancePath+"/funderInterestCommission/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data1.encodedKey !== undefined){const _errs10 = errors;if(typeof data1.encodedKey !== "string"){validate22.errors = [{instancePath:instancePath+"/funderInterestCommission/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data1.maxValue !== undefined){let data4 = data1.maxValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate22.errors = [{instancePath:instancePath+"/funderInterestCommission/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data1.minValue !== undefined){let data5 = data1.minValue;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate22.errors = [{instancePath:instancePath+"/funderInterestCommission/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}}else {validate22.errors = [{instancePath:instancePath+"/funderInterestCommission",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.funderInterestCommissionAllocationType !== undefined){let data6 = data.funderInterestCommissionAllocationType;const _errs16 = errors;if(!((data6 === "PERCENTAGE_OF_LOAN_FUNDING") || (data6 === "FIXED_INTEREST_COMMISSIONS"))){validate22.errors = [{instancePath:instancePath+"/funderInterestCommissionAllocationType",schemaPath:"#/properties/funderInterestCommissionAllocationType/enum",keyword:"enum",params:{allowedValues: schema28.properties.funderInterestCommissionAllocationType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.lockFundsAtApproval !== undefined){const _errs17 = errors;if(typeof data.lockFundsAtApproval !== "boolean"){validate22.errors = [{instancePath:instancePath+"/lockFundsAtApproval",schemaPath:"#/properties/lockFundsAtApproval/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.organizationInterestCommission !== undefined){let data8 = data.organizationInterestCommission;const _errs19 = errors;const _errs20 = errors;if(errors === _errs20){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){if(data8.defaultValue !== undefined){let data9 = data8.defaultValue;const _errs23 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate22.errors = [{instancePath:instancePath+"/organizationInterestCommission/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs23 === errors;}else {var valid4 = true;}if(valid4){if(data8.encodedKey !== undefined){const _errs25 = errors;if(typeof data8.encodedKey !== "string"){validate22.errors = [{instancePath:instancePath+"/organizationInterestCommission/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs25 === errors;}else {var valid4 = true;}if(valid4){if(data8.maxValue !== undefined){let data11 = data8.maxValue;const _errs27 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate22.errors = [{instancePath:instancePath+"/organizationInterestCommission/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs27 === errors;}else {var valid4 = true;}if(valid4){if(data8.minValue !== undefined){let data12 = data8.minValue;const _errs29 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate22.errors = [{instancePath:instancePath+"/organizationInterestCommission/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs29 === errors;}else {var valid4 = true;}}}}}else {validate22.errors = [{instancePath:instancePath+"/organizationInterestCommission",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.requiredFunds !== undefined){let data13 = data.requiredFunds;const _errs31 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate22.errors = [{instancePath:instancePath+"/requiredFunds",schemaPath:"#/properties/requiredFunds/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}}}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}const schema31 = {"type":"object","title":"GracePeriodSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"gracePeriod":{"title":"gracePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"gracePeriodType":{"title":"gracePeriodType","description":"The grace period type. Representing the type of grace period which is possible for a loan account.","enum":["NONE","PAY_INTEREST_ONLY","INTEREST_FORGIVENESS"]}},"additionalProperties":true};function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.gracePeriod !== undefined){let data0 = data.gracePeriod;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.defaultValue !== undefined){let data1 = data0.defaultValue;const _errs6 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate24.errors = [{instancePath:instancePath+"/gracePeriod/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate24.errors = [{instancePath:instancePath+"/gracePeriod/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data3 = data0.maxValue;const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate24.errors = [{instancePath:instancePath+"/gracePeriod/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.minValue !== undefined){let data4 = data0.minValue;const _errs12 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate24.errors = [{instancePath:instancePath+"/gracePeriod/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}else {validate24.errors = [{instancePath:instancePath+"/gracePeriod",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.gracePeriodType !== undefined){let data5 = data.gracePeriodType;const _errs14 = errors;if(!(((data5 === "NONE") || (data5 === "PAY_INTEREST_ONLY")) || (data5 === "INTEREST_FORGIVENESS"))){validate24.errors = [{instancePath:instancePath+"/gracePeriodType",schemaPath:"#/properties/gracePeriodType/enum",keyword:"enum",params:{allowedValues: schema31.properties.gracePeriodType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}else {validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate24.errors = vErrors;return errors === 0;}const schema33 = {"type":"object","title":"ProductInterestSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the loan account crated based on this product.","properties":{"accrueLateInterest":{"type":"boolean","title":"accrueLateInterest","description":"Whether late interest should be accrued, applied and paid"},"compoundingFrequency":{"title":"compoundingFrequency","description":"The frequency on which the accrued interest will be added to the principal for interest calculation. It is used only for InterestType.COMPOUNDING_INTEREST","const":"DAILY"},"daysInYear":{"title":"daysInYear","description":"The days in year that should be used for loan calculations.","enum":["ACTUAL_365_FIXED","ACTUAL_364","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","BUS_252","E30_42_365"]},"indexRateSettings":{"title":"indexRateSettings","$ref":"#/$defs/InterestProductSettingsaf30"},"interestApplicationMethod":{"title":"interestApplicationMethod","description":"The interest application method. Represents the interest application method that determines whether the interest gets applied on the account's disbursement or on each repayment.","enum":["AFTER_DISBURSEMENT","REPAYMENT_DUE_DATE"]},"interestBalanceCalculationMethod":{"title":"interestBalanceCalculationMethod","description":"The interest balance calculation method. Represents the option which determines the way the balance for the account's interest is computed.","enum":["ONLY_PRINCIPAL","PRINCIPAL_AND_INTEREST"]},"interestCalculationMethod":{"title":"interestCalculationMethod","description":"The interest calculation method. Holds the type of interest calculation method.","enum":["FLAT","DECLINING_BALANCE","DECLINING_BALANCE_DISCOUNTED"]},"interestRateSettings":{"type":"array","title":"interestRateSettings","description":"Adjustable interest rates settings","items":{"$ref":"#/$defs/ProductInterestRateSettingsaf30"}},"interestType":{"title":"interestType","description":"The possible values for how we compute and apply the interest","enum":["SIMPLE_INTEREST","CAPITALIZED_INTEREST","COMPOUNDING_INTEREST"]},"scheduleInterestDaysCountMethod":{"title":"scheduleInterestDaysCountMethod","description":"Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.","enum":["REPAYMENT_PERIODICITY","ACTUAL_DAYS_COUNT"]}},"required":["daysInYear","interestCalculationMethod","scheduleInterestDaysCountMethod"],"additionalProperties":true};const schema34 = {"type":"object","title":"InterestProductSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the loan account created based on this product.","properties":{"accrueInterestAfterMaturity":{"type":"boolean","title":"accrueInterestAfterMaturity","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"allowNegativeInterestRate":{"type":"boolean","title":"allowNegativeInterestRate","description":"Indicator whether the loan product allows negative values for interest rate or interest spread"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"},"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Interest spread + index interest rate can't be more than this amount (valid only for index interest rate products)."},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Interest spread + index interest rate can't be less than this amount (valid only for index interest rate products)."},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/InterestRateTieraf30"}}},"additionalProperties":true};const schema36 = {"type":"object","title":"InterestRateTieraf30","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true};function validate27(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.accrueInterestAfterMaturity !== undefined){const _errs2 = errors;if(typeof data.accrueInterestAfterMaturity !== "boolean"){validate27.errors = [{instancePath:instancePath+"/accrueInterestAfterMaturity",schemaPath:"#/properties/accrueInterestAfterMaturity/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.allowNegativeInterestRate !== undefined){const _errs4 = errors;if(typeof data.allowNegativeInterestRate !== "boolean"){validate27.errors = [{instancePath:instancePath+"/allowNegativeInterestRate",schemaPath:"#/properties/allowNegativeInterestRate/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs6 = errors;if(typeof data.encodedKey !== "string"){validate27.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs8 = errors;if(typeof data.indexSourceKey !== "string"){validate27.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequency !== undefined){const _errs10 = errors;let valid1;valid1 = false;for(const v0 of schema34.properties.interestChargeFrequency.enum){if(func0(data.interestChargeFrequency, v0)){valid1 = true;break;}}if(!valid1){validate27.errors = [{instancePath:instancePath+"/interestChargeFrequency",schemaPath:"#/properties/interestChargeFrequency/enum",keyword:"enum",params:{allowedValues: schema34.properties.interestChargeFrequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequencyCount !== undefined){let data5 = data.interestChargeFrequencyCount;const _errs11 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate27.errors = [{instancePath:instancePath+"/interestChargeFrequencyCount",schemaPath:"#/properties/interestChargeFrequencyCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRate !== undefined){let data6 = data.interestRate;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.defaultValue !== undefined){let data7 = data6.defaultValue;const _errs17 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate27.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs17 === errors;}else {var valid3 = true;}if(valid3){if(data6.maxValue !== undefined){let data8 = data6.maxValue;const _errs19 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate27.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs19 === errors;}else {var valid3 = true;}if(valid3){if(data6.minValue !== undefined){let data9 = data6.minValue;const _errs21 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate27.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs21 === errors;}else {var valid3 = true;}}}}else {validate27.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateCeilingValue !== undefined){let data10 = data.interestRateCeilingValue;const _errs23 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate27.errors = [{instancePath:instancePath+"/interestRateCeilingValue",schemaPath:"#/properties/interestRateCeilingValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateFloorValue !== undefined){let data11 = data.interestRateFloorValue;const _errs25 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate27.errors = [{instancePath:instancePath+"/interestRateFloorValue",schemaPath:"#/properties/interestRateFloorValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data12 = data.interestRateReviewCount;const _errs27 = errors;if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){validate27.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data13 = data.interestRateReviewUnit;const _errs29 = errors;if(!(((data13 === "DAYS") || (data13 === "WEEKS")) || (data13 === "MONTHS"))){validate27.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema34.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data14 = data.interestRateSource;const _errs30 = errors;if(!((data14 === "FIXED_INTEREST_RATE") || (data14 === "INDEX_INTEREST_RATE"))){validate27.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema34.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTerms !== undefined){let data15 = data.interestRateTerms;const _errs31 = errors;if(!((((data15 === "FIXED") || (data15 === "TIERED")) || (data15 === "TIERED_PERIOD")) || (data15 === "TIERED_BAND"))){validate27.errors = [{instancePath:instancePath+"/interestRateTerms",schemaPath:"#/properties/interestRateTerms/enum",keyword:"enum",params:{allowedValues: schema34.properties.interestRateTerms.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data16 = data.interestRateTiers;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data16)){var valid4 = true;const len0 = data16.length;for(let i0=0; i0<len0; i0++){let data17 = data16[i0];const _errs34 = errors;const _errs35 = errors;if(errors === _errs35){if(data17 && typeof data17 == "object" && !Array.isArray(data17)){let missing0;if((data17.interestRate === undefined) && (missing0 = "interestRate")){validate27.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/InterestRateTieraf30/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data17.encodedKey !== undefined){const _errs38 = errors;if(typeof data17.encodedKey !== "string"){validate27.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/InterestRateTieraf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs38 === errors;}else {var valid6 = true;}if(valid6){if(data17.endingBalance !== undefined){let data19 = data17.endingBalance;const _errs40 = errors;if(!((typeof data19 == "number") && (isFinite(data19)))){validate27.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/InterestRateTieraf30/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs40 === errors;}else {var valid6 = true;}if(valid6){if(data17.interestRate !== undefined){let data20 = data17.interestRate;const _errs42 = errors;if(!((typeof data20 == "number") && (isFinite(data20)))){validate27.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/InterestRateTieraf30/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs42 === errors;}else {var valid6 = true;}}}}}else {validate27.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/InterestRateTieraf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs34 === errors;if(!valid4){break;}}}else {validate27.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate27.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate27.errors = vErrors;return errors === 0;}const schema37 = {"type":"object","title":"ProductInterestRateSettingsaf30","description":"Adjustable interest rates settings","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate settings, auto generated, unique"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Maximum value allowed for index based interest rate. Valid only for index interest rate."},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Minimum value allowed for index based interest rate. Valid only for index interest rate."},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count. Valid only for index interest rate."},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit. Valid only for index interest rate.","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or indexed(interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]}},"required":["interestRateSource"],"additionalProperties":true};function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.interestRateSource === undefined) && (missing0 = "interestRateSource")){validate29.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.encodedKey !== undefined){const _errs2 = errors;if(typeof data.encodedKey !== "string"){validate29.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs4 = errors;if(typeof data.indexSourceKey !== "string"){validate29.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRate !== undefined){let data2 = data.interestRate;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.defaultValue !== undefined){let data3 = data2.defaultValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate29.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.maxValue !== undefined){let data4 = data2.maxValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate29.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.minValue !== undefined){let data5 = data2.minValue;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate29.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}else {validate29.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateCeilingValue !== undefined){let data6 = data.interestRateCeilingValue;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate29.errors = [{instancePath:instancePath+"/interestRateCeilingValue",schemaPath:"#/properties/interestRateCeilingValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateFloorValue !== undefined){let data7 = data.interestRateFloorValue;const _errs18 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate29.errors = [{instancePath:instancePath+"/interestRateFloorValue",schemaPath:"#/properties/interestRateFloorValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data8 = data.interestRateReviewCount;const _errs20 = errors;if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){validate29.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data9 = data.interestRateReviewUnit;const _errs22 = errors;if(!(((data9 === "DAYS") || (data9 === "WEEKS")) || (data9 === "MONTHS"))){validate29.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema37.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data10 = data.interestRateSource;const _errs23 = errors;if(!((data10 === "FIXED_INTEREST_RATE") || (data10 === "INDEX_INTEREST_RATE"))){validate29.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema37.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}function validate26(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.daysInYear === undefined) && (missing0 = "daysInYear")) || ((data.interestCalculationMethod === undefined) && (missing0 = "interestCalculationMethod"))) || ((data.scheduleInterestDaysCountMethod === undefined) && (missing0 = "scheduleInterestDaysCountMethod"))){validate26.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accrueLateInterest !== undefined){const _errs2 = errors;if(typeof data.accrueLateInterest !== "boolean"){validate26.errors = [{instancePath:instancePath+"/accrueLateInterest",schemaPath:"#/properties/accrueLateInterest/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.compoundingFrequency !== undefined){const _errs4 = errors;if("DAILY" !== data.compoundingFrequency){validate26.errors = [{instancePath:instancePath+"/compoundingFrequency",schemaPath:"#/properties/compoundingFrequency/const",keyword:"const",params:{allowedValue: "DAILY"},message:"must be equal to constant"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.daysInYear !== undefined){const _errs5 = errors;let valid1;valid1 = false;for(const v0 of schema33.properties.daysInYear.enum){if(func0(data.daysInYear, v0)){valid1 = true;break;}}if(!valid1){validate26.errors = [{instancePath:instancePath+"/daysInYear",schemaPath:"#/properties/daysInYear/enum",keyword:"enum",params:{allowedValues: schema33.properties.daysInYear.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.indexRateSettings !== undefined){const _errs6 = errors;if(!(validate27(data.indexRateSettings, {instancePath:instancePath+"/indexRateSettings",parentData:data,parentDataProperty:"indexRateSettings",rootData}))){vErrors = vErrors === null ? validate27.errors : vErrors.concat(validate27.errors);errors = vErrors.length;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.interestApplicationMethod !== undefined){let data4 = data.interestApplicationMethod;const _errs7 = errors;if(!((data4 === "AFTER_DISBURSEMENT") || (data4 === "REPAYMENT_DUE_DATE"))){validate26.errors = [{instancePath:instancePath+"/interestApplicationMethod",schemaPath:"#/properties/interestApplicationMethod/enum",keyword:"enum",params:{allowedValues: schema33.properties.interestApplicationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.interestBalanceCalculationMethod !== undefined){let data5 = data.interestBalanceCalculationMethod;const _errs8 = errors;if(!((data5 === "ONLY_PRINCIPAL") || (data5 === "PRINCIPAL_AND_INTEREST"))){validate26.errors = [{instancePath:instancePath+"/interestBalanceCalculationMethod",schemaPath:"#/properties/interestBalanceCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema33.properties.interestBalanceCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.interestCalculationMethod !== undefined){let data6 = data.interestCalculationMethod;const _errs9 = errors;if(!(((data6 === "FLAT") || (data6 === "DECLINING_BALANCE")) || (data6 === "DECLINING_BALANCE_DISCOUNTED"))){validate26.errors = [{instancePath:instancePath+"/interestCalculationMethod",schemaPath:"#/properties/interestCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema33.properties.interestCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSettings !== undefined){let data7 = data.interestRateSettings;const _errs10 = errors;if(errors === _errs10){if(Array.isArray(data7)){var valid2 = true;const len0 = data7.length;for(let i0=0; i0<len0; i0++){const _errs12 = errors;if(!(validate29(data7[i0], {instancePath:instancePath+"/interestRateSettings/" + i0,parentData:data7,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var valid2 = _errs12 === errors;if(!valid2){break;}}}else {validate26.errors = [{instancePath:instancePath+"/interestRateSettings",schemaPath:"#/properties/interestRateSettings/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.interestType !== undefined){let data9 = data.interestType;const _errs13 = errors;if(!(((data9 === "SIMPLE_INTEREST") || (data9 === "CAPITALIZED_INTEREST")) || (data9 === "COMPOUNDING_INTEREST"))){validate26.errors = [{instancePath:instancePath+"/interestType",schemaPath:"#/properties/interestType/enum",keyword:"enum",params:{allowedValues: schema33.properties.interestType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.scheduleInterestDaysCountMethod !== undefined){let data10 = data.scheduleInterestDaysCountMethod;const _errs14 = errors;if(!((data10 === "REPAYMENT_PERIODICITY") || (data10 === "ACTUAL_DAYS_COUNT"))){validate26.errors = [{instancePath:instancePath+"/scheduleInterestDaysCountMethod",schemaPath:"#/properties/scheduleInterestDaysCountMethod/enum",keyword:"enum",params:{allowedValues: schema33.properties.scheduleInterestDaysCountMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}}}}}}}}else {validate26.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate26.errors = vErrors;return errors === 0;}const schema39 = {"type":"object","title":"InternalControlsaf30","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","title":"dormancyPeriodDays","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"fourEyesPrinciple":{"title":"fourEyesPrinciple","$ref":"#/$defs/FourEyesPrincipleaf30"},"lockSettings":{"title":"lockSettings","$ref":"#/$defs/LockSettingsaf30"}},"additionalProperties":true};const schema40 = {"type":"object","title":"FourEyesPrincipleaf30","description":"Settings for Four Eyes Principle","properties":{"activeForLoanApproval":{"type":"boolean","title":"activeForLoanApproval","description":"Requires separate users to create and approve loan accounts"}},"additionalProperties":true};const schema41 = {"type":"object","title":"LockSettingsaf30","description":"Settings applied when transitioning accounts to Locked state","properties":{"cappingConstraintType":{"title":"cappingConstraintType","description":"Specifies constraint types for capping charges.","enum":["SOFT_CAP","HARD_CAP"]},"cappingMethod":{"title":"cappingMethod","description":"Specifies how principal will be used when calculating capping charges.","enum":["OUTSTANDING_PRINCIPAL_PERCENTAGE","ORIGINAL_PRINCIPAL_PERCENTAGE"]},"cappingPercentage":{"type":"number","title":"cappingPercentage","description":"Specifies the percentage of principal that cannot be exceeded by the sum of interest, fees and penalty balances."},"lockPeriodDays":{"type":"integer","title":"lockPeriodDays","description":"Specifies the number of days for in which the account will be locked if it stays in arrears."}},"additionalProperties":true};function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.dormancyPeriodDays !== undefined){let data0 = data.dormancyPeriodDays;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate32.errors = [{instancePath:instancePath+"/dormancyPeriodDays",schemaPath:"#/properties/dormancyPeriodDays/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fourEyesPrinciple !== undefined){let data1 = data.fourEyesPrinciple;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.activeForLoanApproval !== undefined){if(typeof data1.activeForLoanApproval !== "boolean"){validate32.errors = [{instancePath:instancePath+"/fourEyesPrinciple/activeForLoanApproval",schemaPath:"#/$defs/FourEyesPrincipleaf30/properties/activeForLoanApproval/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}else {validate32.errors = [{instancePath:instancePath+"/fourEyesPrinciple",schemaPath:"#/$defs/FourEyesPrincipleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.lockSettings !== undefined){let data3 = data.lockSettings;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.cappingConstraintType !== undefined){let data4 = data3.cappingConstraintType;const _errs14 = errors;if(!((data4 === "SOFT_CAP") || (data4 === "HARD_CAP"))){validate32.errors = [{instancePath:instancePath+"/lockSettings/cappingConstraintType",schemaPath:"#/$defs/LockSettingsaf30/properties/cappingConstraintType/enum",keyword:"enum",params:{allowedValues: schema41.properties.cappingConstraintType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data3.cappingMethod !== undefined){let data5 = data3.cappingMethod;const _errs15 = errors;if(!((data5 === "OUTSTANDING_PRINCIPAL_PERCENTAGE") || (data5 === "ORIGINAL_PRINCIPAL_PERCENTAGE"))){validate32.errors = [{instancePath:instancePath+"/lockSettings/cappingMethod",schemaPath:"#/$defs/LockSettingsaf30/properties/cappingMethod/enum",keyword:"enum",params:{allowedValues: schema41.properties.cappingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs15 === errors;}else {var valid4 = true;}if(valid4){if(data3.cappingPercentage !== undefined){let data6 = data3.cappingPercentage;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate32.errors = [{instancePath:instancePath+"/lockSettings/cappingPercentage",schemaPath:"#/$defs/LockSettingsaf30/properties/cappingPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data3.lockPeriodDays !== undefined){let data7 = data3.lockPeriodDays;const _errs18 = errors;if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){validate32.errors = [{instancePath:instancePath+"/lockSettings/lockPeriodDays",schemaPath:"#/$defs/LockSettingsaf30/properties/lockPeriodDays/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs18 === errors;}else {var valid4 = true;}}}}}else {validate32.errors = [{instancePath:instancePath+"/lockSettings",schemaPath:"#/$defs/LockSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}}else {validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate32.errors = vErrors;return errors === 0;}const schema42 = {"type":"object","title":"LoanAmountSettingsaf30","description":"The amount settings, holds all amount properties.","properties":{"loanAmount":{"title":"loanAmount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"trancheSettings":{"title":"trancheSettings","$ref":"#/$defs/TrancheSettingsaf30"}},"additionalProperties":true};const schema43 = {"type":"object","title":"AmountDecimalConstraintsaf30","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"minValue":{"type":"number","title":"minValue","description":"The minimum value."}},"additionalProperties":true};const schema44 = {"type":"object","title":"TrancheSettingsaf30","description":"The tranche settings, indicates the settings regarding tranches in case the product is configured to support tranches.","properties":{"maxNumberOfTranches":{"type":"integer","title":"maxNumberOfTranches","description":"The number of tranches supported by the loan product"}},"additionalProperties":true};function validate34(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.loanAmount !== undefined){let data0 = data.loanAmount;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.defaultValue !== undefined){let data1 = data0.defaultValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate34.errors = [{instancePath:instancePath+"/loanAmount/defaultValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate34.errors = [{instancePath:instancePath+"/loanAmount/encodedKey",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data3 = data0.maxValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate34.errors = [{instancePath:instancePath+"/loanAmount/maxValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.minValue !== undefined){let data4 = data0.minValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate34.errors = [{instancePath:instancePath+"/loanAmount/minValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}else {validate34.errors = [{instancePath:instancePath+"/loanAmount",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.trancheSettings !== undefined){let data5 = data.trancheSettings;const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){if(data5.maxNumberOfTranches !== undefined){let data6 = data5.maxNumberOfTranches;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate34.errors = [{instancePath:instancePath+"/trancheSettings/maxNumberOfTranches",schemaPath:"#/$defs/TrancheSettingsaf30/properties/maxNumberOfTranches/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/trancheSettings",schemaPath:"#/$defs/TrancheSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}else {validate34.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate34.errors = vErrors;return errors === 0;}const schema47 = {"type":"object","title":"PaymentSettingsaf30","description":"Defines the payment settings for the loan product and for loans crated based on this product.","properties":{"amortizationMethod":{"title":"amortizationMethod","description":"Payments Method used by loan accounts for repayments schedule generation.","enum":["STANDARD_PAYMENTS","BALLOON_PAYMENTS","OPTIMIZED_PAYMENTS","PAYMENT_PLAN"]},"latePaymentsRecalculationMethod":{"title":"latePaymentsRecalculationMethod","description":"Recalculate the schedule when late payments are posted on dynamic Equal Installments loans.","enum":["OVERDUE_INSTALLMENTS_INCREASE","LAST_INSTALLMENT_INCREASE"]},"paymentMethod":{"title":"paymentMethod","description":"The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)","enum":["HORIZONTAL","VERTICAL"]},"prepaymentSettings":{"title":"prepaymentSettings","$ref":"#/$defs/ProductPrepaymentSettingsaf30"},"principalPaymentSettings":{"title":"principalPaymentSettings","$ref":"#/$defs/PrincipalPaymentProductSettingsaf30"},"repaymentAllocationOrder":{"type":"array","title":"repaymentAllocationOrder","description":"A list of basic repayment allocation elements such as the principal, interest & fees.","items":{"enum":["PRINCIPAL","INTEREST","FEE","PENALTY"]}}},"required":["latePaymentsRecalculationMethod","paymentMethod","repaymentAllocationOrder"],"additionalProperties":true};const schema48 = {"type":"object","title":"ProductPrepaymentSettingsaf30","description":"Defines the prepayment settings for the product","properties":{"applyInterestOnPrepaymentMethod":{"title":"applyInterestOnPrepaymentMethod","description":"Whether the interest on prepayment is applied manual or automatic.","enum":["AUTOMATIC","MANUAL"]},"elementsRecalculationMethod":{"title":"elementsRecalculationMethod","description":"The elements recalculation method, indicates how the declining balance with equal installments repayments are recalculated","enum":["PRINCIPAL_EXPECTED_FIXED","TOTAL_EXPECTED_FIXED"]},"futurePaymentsAcceptance":{"title":"futurePaymentsAcceptance","description":"Shows whether the future payments are allowed or not for this product (repayment transactions with entry date set in the future)","enum":["NO_FUTURE_PAYMENTS","ACCEPT_FUTURE_PAYMENTS","ACCEPT_OVERPAYMENTS"]},"prepaymentAcceptance":{"title":"prepaymentAcceptance","description":"Shows whether the pre-payments are allowed or not for this product.","enum":["ACCEPT_PREPAYMENTS","NO_PREPAYMENTS"]},"prepaymentRecalculationMethod":{"title":"prepaymentRecalculationMethod","description":"Prepayment recalculation method copied from the loan product on which this account is based","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]},"principalPaidInstallmentStatus":{"title":"principalPaidInstallmentStatus","description":"Installment status for the case when principal is paid off (copied from loan product)","enum":["PARTIALLY_PAID","PAID","ORIGINAL_TOTAL_EXPECTED_PAID"]}},"required":["futurePaymentsAcceptance"],"additionalProperties":true};const schema49 = {"type":"object","title":"PrincipalPaymentProductSettingsaf30","description":"Defines the principal payment settings constraints for the loans that will be created based on this product.","properties":{"amount":{"title":"amount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"defaultPrincipalRepaymentInterval":{"type":"integer","title":"defaultPrincipalRepaymentInterval","description":"How many repayments the principal has to be paid"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the settings, auto generated, unique"},"includeFeesInFloorAmount":{"type":"boolean","title":"includeFeesInFloorAmount","description":"If true, the fees will be included along with the principal in the repayment floor amount, for a revolving credit account"},"includeInterestInFloorAmount":{"type":"boolean","title":"includeInterestInFloorAmount","description":"If true, the interest will be included along with the principal in the repayment floor amount, for a revolving credit account"},"percentage":{"title":"percentage","$ref":"#/$defs/DecimalConstraintsaf30"},"principalCeilingValue":{"type":"number","title":"principalCeilingValue","description":"The maximum principal due amount a repayment made with this settings can have"},"principalFloorValue":{"type":"number","title":"principalFloorValue","description":"The minimum principal due amount a repayment made with this settings can have"},"principalPaymentMethod":{"title":"principalPaymentMethod","description":"The method of principal payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]},"totalDueAmountFloor":{"type":"number","title":"totalDueAmountFloor","description":"The minimum total due amount a repayment made with this settings can have"},"totalDuePayment":{"title":"totalDuePayment","description":"The method of total due payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]}},"additionalProperties":true};function validate37(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.amount !== undefined){let data0 = data.amount;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.defaultValue !== undefined){let data1 = data0.defaultValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate37.errors = [{instancePath:instancePath+"/amount/defaultValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate37.errors = [{instancePath:instancePath+"/amount/encodedKey",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data3 = data0.maxValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate37.errors = [{instancePath:instancePath+"/amount/maxValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.minValue !== undefined){let data4 = data0.minValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate37.errors = [{instancePath:instancePath+"/amount/minValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}else {validate37.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.defaultPrincipalRepaymentInterval !== undefined){let data5 = data.defaultPrincipalRepaymentInterval;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate37.errors = [{instancePath:instancePath+"/defaultPrincipalRepaymentInterval",schemaPath:"#/properties/defaultPrincipalRepaymentInterval/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs16 = errors;if(typeof data.encodedKey !== "string"){validate37.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.includeFeesInFloorAmount !== undefined){const _errs18 = errors;if(typeof data.includeFeesInFloorAmount !== "boolean"){validate37.errors = [{instancePath:instancePath+"/includeFeesInFloorAmount",schemaPath:"#/properties/includeFeesInFloorAmount/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.includeInterestInFloorAmount !== undefined){const _errs20 = errors;if(typeof data.includeInterestInFloorAmount !== "boolean"){validate37.errors = [{instancePath:instancePath+"/includeInterestInFloorAmount",schemaPath:"#/properties/includeInterestInFloorAmount/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.percentage !== undefined){let data9 = data.percentage;const _errs22 = errors;const _errs23 = errors;if(errors === _errs23){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){if(data9.defaultValue !== undefined){let data10 = data9.defaultValue;const _errs26 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate37.errors = [{instancePath:instancePath+"/percentage/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs26 === errors;}else {var valid4 = true;}if(valid4){if(data9.encodedKey !== undefined){const _errs28 = errors;if(typeof data9.encodedKey !== "string"){validate37.errors = [{instancePath:instancePath+"/percentage/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs28 === errors;}else {var valid4 = true;}if(valid4){if(data9.maxValue !== undefined){let data12 = data9.maxValue;const _errs30 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate37.errors = [{instancePath:instancePath+"/percentage/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs30 === errors;}else {var valid4 = true;}if(valid4){if(data9.minValue !== undefined){let data13 = data9.minValue;const _errs32 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate37.errors = [{instancePath:instancePath+"/percentage/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs32 === errors;}else {var valid4 = true;}}}}}else {validate37.errors = [{instancePath:instancePath+"/percentage",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.principalCeilingValue !== undefined){let data14 = data.principalCeilingValue;const _errs34 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate37.errors = [{instancePath:instancePath+"/principalCeilingValue",schemaPath:"#/properties/principalCeilingValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.principalFloorValue !== undefined){let data15 = data.principalFloorValue;const _errs36 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate37.errors = [{instancePath:instancePath+"/principalFloorValue",schemaPath:"#/properties/principalFloorValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentMethod !== undefined){const _errs38 = errors;let valid5;valid5 = false;for(const v0 of schema49.properties.principalPaymentMethod.enum){if(func0(data.principalPaymentMethod, v0)){valid5 = true;break;}}if(!valid5){validate37.errors = [{instancePath:instancePath+"/principalPaymentMethod",schemaPath:"#/properties/principalPaymentMethod/enum",keyword:"enum",params:{allowedValues: schema49.properties.principalPaymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.totalDueAmountFloor !== undefined){let data17 = data.totalDueAmountFloor;const _errs39 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate37.errors = [{instancePath:instancePath+"/totalDueAmountFloor",schemaPath:"#/properties/totalDueAmountFloor/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.totalDuePayment !== undefined){const _errs41 = errors;let valid6;valid6 = false;for(const v1 of schema49.properties.totalDuePayment.enum){if(func0(data.totalDuePayment, v1)){valid6 = true;break;}}if(!valid6){validate37.errors = [{instancePath:instancePath+"/totalDuePayment",schemaPath:"#/properties/totalDuePayment/enum",keyword:"enum",params:{allowedValues: schema49.properties.totalDuePayment.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}}}}}}}}}}}}else {validate37.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate37.errors = vErrors;return errors === 0;}function validate36(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.latePaymentsRecalculationMethod === undefined) && (missing0 = "latePaymentsRecalculationMethod")) || ((data.paymentMethod === undefined) && (missing0 = "paymentMethod"))) || ((data.repaymentAllocationOrder === undefined) && (missing0 = "repaymentAllocationOrder"))){validate36.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.amortizationMethod !== undefined){let data0 = data.amortizationMethod;const _errs2 = errors;if(!((((data0 === "STANDARD_PAYMENTS") || (data0 === "BALLOON_PAYMENTS")) || (data0 === "OPTIMIZED_PAYMENTS")) || (data0 === "PAYMENT_PLAN"))){validate36.errors = [{instancePath:instancePath+"/amortizationMethod",schemaPath:"#/properties/amortizationMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.amortizationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.latePaymentsRecalculationMethod !== undefined){let data1 = data.latePaymentsRecalculationMethod;const _errs3 = errors;if(!((data1 === "OVERDUE_INSTALLMENTS_INCREASE") || (data1 === "LAST_INSTALLMENT_INCREASE"))){validate36.errors = [{instancePath:instancePath+"/latePaymentsRecalculationMethod",schemaPath:"#/properties/latePaymentsRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.latePaymentsRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentMethod !== undefined){let data2 = data.paymentMethod;const _errs4 = errors;if(!((data2 === "HORIZONTAL") || (data2 === "VERTICAL"))){validate36.errors = [{instancePath:instancePath+"/paymentMethod",schemaPath:"#/properties/paymentMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.paymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.prepaymentSettings !== undefined){let data3 = data.prepaymentSettings;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing1;if((data3.futurePaymentsAcceptance === undefined) && (missing1 = "futurePaymentsAcceptance")){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data3.applyInterestOnPrepaymentMethod !== undefined){let data4 = data3.applyInterestOnPrepaymentMethod;const _errs9 = errors;if(!((data4 === "AUTOMATIC") || (data4 === "MANUAL"))){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings/applyInterestOnPrepaymentMethod",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/applyInterestOnPrepaymentMethod/enum",keyword:"enum",params:{allowedValues: schema48.properties.applyInterestOnPrepaymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data3.elementsRecalculationMethod !== undefined){let data5 = data3.elementsRecalculationMethod;const _errs10 = errors;if(!((data5 === "PRINCIPAL_EXPECTED_FIXED") || (data5 === "TOTAL_EXPECTED_FIXED"))){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings/elementsRecalculationMethod",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/elementsRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema48.properties.elementsRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data3.futurePaymentsAcceptance !== undefined){let data6 = data3.futurePaymentsAcceptance;const _errs11 = errors;if(!(((data6 === "NO_FUTURE_PAYMENTS") || (data6 === "ACCEPT_FUTURE_PAYMENTS")) || (data6 === "ACCEPT_OVERPAYMENTS"))){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings/futurePaymentsAcceptance",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/futurePaymentsAcceptance/enum",keyword:"enum",params:{allowedValues: schema48.properties.futurePaymentsAcceptance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data3.prepaymentAcceptance !== undefined){let data7 = data3.prepaymentAcceptance;const _errs12 = errors;if(!((data7 === "ACCEPT_PREPAYMENTS") || (data7 === "NO_PREPAYMENTS"))){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings/prepaymentAcceptance",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/prepaymentAcceptance/enum",keyword:"enum",params:{allowedValues: schema48.properties.prepaymentAcceptance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data3.prepaymentRecalculationMethod !== undefined){const _errs13 = errors;let valid3;valid3 = false;for(const v0 of schema48.properties.prepaymentRecalculationMethod.enum){if(func0(data3.prepaymentRecalculationMethod, v0)){valid3 = true;break;}}if(!valid3){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings/prepaymentRecalculationMethod",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/prepaymentRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema48.properties.prepaymentRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data3.principalPaidInstallmentStatus !== undefined){let data9 = data3.principalPaidInstallmentStatus;const _errs14 = errors;if(!(((data9 === "PARTIALLY_PAID") || (data9 === "PAID")) || (data9 === "ORIGINAL_TOTAL_EXPECTED_PAID"))){validate36.errors = [{instancePath:instancePath+"/prepaymentSettings/principalPaidInstallmentStatus",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/principalPaidInstallmentStatus/enum",keyword:"enum",params:{allowedValues: schema48.properties.principalPaidInstallmentStatus.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}}}}}else {validate36.errors = [{instancePath:instancePath+"/prepaymentSettings",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentSettings !== undefined){const _errs15 = errors;if(!(validate37(data.principalPaymentSettings, {instancePath:instancePath+"/principalPaymentSettings",parentData:data,parentDataProperty:"principalPaymentSettings",rootData}))){vErrors = vErrors === null ? validate37.errors : vErrors.concat(validate37.errors);errors = vErrors.length;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentAllocationOrder !== undefined){let data11 = data.repaymentAllocationOrder;const _errs16 = errors;if(errors === _errs16){if(Array.isArray(data11)){var valid4 = true;const len0 = data11.length;for(let i0=0; i0<len0; i0++){let data12 = data11[i0];const _errs18 = errors;if(!((((data12 === "PRINCIPAL") || (data12 === "INTEREST")) || (data12 === "FEE")) || (data12 === "PENALTY"))){validate36.errors = [{instancePath:instancePath+"/repaymentAllocationOrder/" + i0,schemaPath:"#/properties/repaymentAllocationOrder/items/enum",keyword:"enum",params:{allowedValues: schema47.properties.repaymentAllocationOrder.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs18 === errors;if(!valid4){break;}}}else {validate36.errors = [{instancePath:instancePath+"/repaymentAllocationOrder",schemaPath:"#/properties/repaymentAllocationOrder/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}}}}}}}}else {validate36.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate36.errors = vErrors;return errors === 0;}const schema52 = {"type":"object","title":"ProductPenaltySettingsaf30","description":"Defines the penalty settings for the product that will be used by the loan accounts based on this product","properties":{"loanPenaltyCalculationMethod":{"title":"loanPenaltyCalculationMethod","description":"The penalty calculation method","enum":["NONE","OVERDUE_BALANCE","OVERDUE_BALANCE_AND_INTEREST","OUTSTANDING_PRINCIPAL"]},"loanPenaltyGracePeriod":{"type":"integer","title":"loanPenaltyGracePeriod","description":"Number of days to wait before applying the loan penalty amounts"},"penaltyRate":{"title":"penaltyRate","$ref":"#/$defs/DecimalConstraintsaf30"}},"required":["loanPenaltyCalculationMethod"],"additionalProperties":true};function validate40(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.loanPenaltyCalculationMethod === undefined) && (missing0 = "loanPenaltyCalculationMethod")){validate40.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.loanPenaltyCalculationMethod !== undefined){let data0 = data.loanPenaltyCalculationMethod;const _errs2 = errors;if(!((((data0 === "NONE") || (data0 === "OVERDUE_BALANCE")) || (data0 === "OVERDUE_BALANCE_AND_INTEREST")) || (data0 === "OUTSTANDING_PRINCIPAL"))){validate40.errors = [{instancePath:instancePath+"/loanPenaltyCalculationMethod",schemaPath:"#/properties/loanPenaltyCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema52.properties.loanPenaltyCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.loanPenaltyGracePeriod !== undefined){let data1 = data.loanPenaltyGracePeriod;const _errs3 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate40.errors = [{instancePath:instancePath+"/loanPenaltyGracePeriod",schemaPath:"#/properties/loanPenaltyGracePeriod/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.penaltyRate !== undefined){let data2 = data.penaltyRate;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.defaultValue !== undefined){let data3 = data2.defaultValue;const _errs9 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate40.errors = [{instancePath:instancePath+"/penaltyRate/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data2.encodedKey !== undefined){const _errs11 = errors;if(typeof data2.encodedKey !== "string"){validate40.errors = [{instancePath:instancePath+"/penaltyRate/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data2.maxValue !== undefined){let data5 = data2.maxValue;const _errs13 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate40.errors = [{instancePath:instancePath+"/penaltyRate/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data2.minValue !== undefined){let data6 = data2.minValue;const _errs15 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate40.errors = [{instancePath:instancePath+"/penaltyRate/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}}}}}else {validate40.errors = [{instancePath:instancePath+"/penaltyRate",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate40.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate40.errors = vErrors;return errors === 0;}const schema55 = {"type":"object","title":"LoanProductScheduleSettingsaf30","description":"Defines the settings and constraints for schedule for the loans that are created based on this product.","properties":{"billingCycles":{"title":"billingCycles","$ref":"#/$defs/BillingCyclesProductSettingsaf30"},"defaultRepaymentPeriodCount":{"type":"integer","title":"defaultRepaymentPeriodCount","description":"Interval Repayment Methodology Settings."},"firstRepaymentDueDateOffset":{"title":"firstRepaymentDueDateOffset","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"fixedDaysOfMonth":{"type":"array","title":"fixedDaysOfMonth","description":" Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTH.","items":{"type":"integer"}},"interestAccrualSince":{"title":"interestAccrualSince","description":"Represents the moment the interest will start getting accrued.","enum":["DISBURSEMENT","DUE_DATE"]},"numInstallments":{"title":"numInstallments","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"previewSchedule":{"title":"previewSchedule","$ref":"#/$defs/PreviewScheduleSettingsaf30"},"repaymentMethod":{"title":"repaymentMethod","description":"The repayment method value","enum":["AMOUNT","INSTALLMENTS"]},"repaymentPeriodUnit":{"title":"repaymentPeriodUnit","description":"The frequency of the loan repayment.","enum":["DAYS","WEEKS","MONTHS","YEARS"]},"repaymentReschedulingMethod":{"title":"repaymentReschedulingMethod","description":"The repayment rescheduling method used in calculations.","enum":["NONE","NEXT_WORKING_DAY","PREVIOUS_WORKING_DAY","EXTEND_SCHEDULE"]},"repaymentScheduleEditOptions":{"type":"array","title":"repaymentScheduleEditOptions","description":"Shows the properties from the repayment schedule can be edited.","items":{"enum":["ADJUST_PAYMENT_DATES","ADJUST_PRINCIPAL_PAYMENT_SCHEDULE","ADJUST_INTEREST_PAYMENT_SCHEDULE","ADJUST_FEE_PAYMENT_SCHEDULE","ADJUST_PENALTY_PAYMENT_SCHEDULE","ADJUST_NUMBER_OF_INSTALLMENTS","ADJUST_PAYMENT_HOLIDAYS"]}},"repaymentScheduleMethod":{"title":"repaymentScheduleMethod","description":"The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account's life cycle or will be dynamically recomputed when required.","enum":["NONE","FIXED","DYNAMIC"]},"roundingSettings":{"title":"roundingSettings","$ref":"#/$defs/RoundingSettingsaf30"},"scheduleDueDatesMethod":{"title":"scheduleDueDatesMethod","description":"The methodology used by this product to compute the due dates of the repayments.","enum":["INTERVAL","FIXED_DAYS_OF_MONTH"]},"shortMonthHandlingMethod":{"title":"shortMonthHandlingMethod","description":"Determines how to handle the short months, if they select a fixed day of month > 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.","enum":["LAST_DAY_IN_MONTH","FIRST_DAY_OF_NEXT_MONTH"]}},"required":["repaymentReschedulingMethod","repaymentScheduleMethod","scheduleDueDatesMethod"],"additionalProperties":true};const schema56 = {"type":"object","title":"BillingCyclesProductSettingsaf30","description":"Defines the billing cycles settings for revolving credit products","properties":{"enabled":{"type":"boolean","title":"enabled","description":"The billing cycle status if it is enabled or disabled"},"startDays":{"type":"array","title":"startDays","description":"The billing cycle start days in case it is enabled","items":{"type":"integer"},"uniqueItems":true}},"additionalProperties":true};const schema59 = {"type":"object","title":"PreviewScheduleSettingsaf30","description":"Defines the Preview Schedule settings for revolving products","properties":{"numberOfPreviewedInstalments":{"type":"integer","title":"numberOfPreviewedInstalments","description":"Number of Previewed Instalments."},"previewScheduleEnabled":{"type":"boolean","title":"previewScheduleEnabled","description":"Preview Schedule status."}},"additionalProperties":true};const schema60 = {"type":"object","title":"RoundingSettingsaf30","description":"Defines the rounding settings used in the loan computation.","properties":{"repaymentCurrencyRounding":{"title":"repaymentCurrencyRounding","description":"Specifies the repayment currency rounding method.","enum":["NO_ROUNDING","ROUND_TO_NEAREST_WHOLE_UNIT","ROUND_UP_TO_NEAREST_WHOLE_UNIT"]},"repaymentElementsRoundingMethod":{"title":"repaymentElementsRoundingMethod","description":"Determines how the repayment currency rounding is handled on each element from the schedule.","enum":["NO_ROUNDING","ROUND_ALL","PAYMENT_DUE"]},"roundingRepaymentScheduleMethod":{"title":"roundingRepaymentScheduleMethod","description":"Specifies the rounding repayment schedule method.","enum":["NO_ROUNDING","ROUND_REMAINDER_INTO_LAST_REPAYMENT","ROUND_PRINCIPAL_AND_INTEREST_REMAINDER_INTO_LAST_REPAYMENT"]}},"required":["repaymentCurrencyRounding","repaymentElementsRoundingMethod","roundingRepaymentScheduleMethod"],"additionalProperties":true};function validate42(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.repaymentReschedulingMethod === undefined) && (missing0 = "repaymentReschedulingMethod")) || ((data.repaymentScheduleMethod === undefined) && (missing0 = "repaymentScheduleMethod"))) || ((data.scheduleDueDatesMethod === undefined) && (missing0 = "scheduleDueDatesMethod"))){validate42.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.billingCycles !== undefined){let data0 = data.billingCycles;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.enabled !== undefined){const _errs6 = errors;if(typeof data0.enabled !== "boolean"){validate42.errors = [{instancePath:instancePath+"/billingCycles/enabled",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.startDays !== undefined){let data2 = data0.startDays;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data2)){var valid3 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate42.errors = [{instancePath:instancePath+"/billingCycles/startDays/" + i0,schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/startDays/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs10 === errors;if(!valid3){break;}}if(valid3){let i1 = data2.length;let j0;if(i1 > 1){const indices0 = {};for(;i1--;){let item0 = data2[i1];if(!(((typeof item0 == "number") && (!(item0 % 1) && !isNaN(item0))) && (isFinite(item0)))){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate42.errors = [{instancePath:instancePath+"/billingCycles/startDays",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/startDays/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break;}indices0[item0] = i1;}}}}else {validate42.errors = [{instancePath:instancePath+"/billingCycles/startDays",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/startDays/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}else {validate42.errors = [{instancePath:instancePath+"/billingCycles",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.defaultRepaymentPeriodCount !== undefined){let data4 = data.defaultRepaymentPeriodCount;const _errs12 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate42.errors = [{instancePath:instancePath+"/defaultRepaymentPeriodCount",schemaPath:"#/properties/defaultRepaymentPeriodCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.firstRepaymentDueDateOffset !== undefined){let data5 = data.firstRepaymentDueDateOffset;const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){if(data5.defaultValue !== undefined){let data6 = data5.defaultValue;const _errs18 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate42.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs18 === errors;}else {var valid6 = true;}if(valid6){if(data5.encodedKey !== undefined){const _errs20 = errors;if(typeof data5.encodedKey !== "string"){validate42.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs20 === errors;}else {var valid6 = true;}if(valid6){if(data5.maxValue !== undefined){let data8 = data5.maxValue;const _errs22 = errors;if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){validate42.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs22 === errors;}else {var valid6 = true;}if(valid6){if(data5.minValue !== undefined){let data9 = data5.minValue;const _errs24 = errors;if(!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))){validate42.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs24 === errors;}else {var valid6 = true;}}}}}else {validate42.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.fixedDaysOfMonth !== undefined){let data10 = data.fixedDaysOfMonth;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data10)){var valid7 = true;const len1 = data10.length;for(let i2=0; i2<len1; i2++){let data11 = data10[i2];const _errs28 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate42.errors = [{instancePath:instancePath+"/fixedDaysOfMonth/" + i2,schemaPath:"#/properties/fixedDaysOfMonth/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs28 === errors;if(!valid7){break;}}}else {validate42.errors = [{instancePath:instancePath+"/fixedDaysOfMonth",schemaPath:"#/properties/fixedDaysOfMonth/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccrualSince !== undefined){let data12 = data.interestAccrualSince;const _errs30 = errors;if(!((data12 === "DISBURSEMENT") || (data12 === "DUE_DATE"))){validate42.errors = [{instancePath:instancePath+"/interestAccrualSince",schemaPath:"#/properties/interestAccrualSince/enum",keyword:"enum",params:{allowedValues: schema55.properties.interestAccrualSince.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.numInstallments !== undefined){let data13 = data.numInstallments;const _errs31 = errors;const _errs32 = errors;if(errors === _errs32){if(data13 && typeof data13 == "object" && !Array.isArray(data13)){if(data13.defaultValue !== undefined){let data14 = data13.defaultValue;const _errs35 = errors;if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){validate42.errors = [{instancePath:instancePath+"/numInstallments/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid9 = _errs35 === errors;}else {var valid9 = true;}if(valid9){if(data13.encodedKey !== undefined){const _errs37 = errors;if(typeof data13.encodedKey !== "string"){validate42.errors = [{instancePath:instancePath+"/numInstallments/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs37 === errors;}else {var valid9 = true;}if(valid9){if(data13.maxValue !== undefined){let data16 = data13.maxValue;const _errs39 = errors;if(!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))){validate42.errors = [{instancePath:instancePath+"/numInstallments/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid9 = _errs39 === errors;}else {var valid9 = true;}if(valid9){if(data13.minValue !== undefined){let data17 = data13.minValue;const _errs41 = errors;if(!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))){validate42.errors = [{instancePath:instancePath+"/numInstallments/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid9 = _errs41 === errors;}else {var valid9 = true;}}}}}else {validate42.errors = [{instancePath:instancePath+"/numInstallments",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.previewSchedule !== undefined){let data18 = data.previewSchedule;const _errs43 = errors;const _errs44 = errors;if(errors === _errs44){if(data18 && typeof data18 == "object" && !Array.isArray(data18)){if(data18.numberOfPreviewedInstalments !== undefined){let data19 = data18.numberOfPreviewedInstalments;const _errs47 = errors;if(!(((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19)))){validate42.errors = [{instancePath:instancePath+"/previewSchedule/numberOfPreviewedInstalments",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/properties/numberOfPreviewedInstalments/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid11 = _errs47 === errors;}else {var valid11 = true;}if(valid11){if(data18.previewScheduleEnabled !== undefined){const _errs49 = errors;if(typeof data18.previewScheduleEnabled !== "boolean"){validate42.errors = [{instancePath:instancePath+"/previewSchedule/previewScheduleEnabled",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/properties/previewScheduleEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid11 = _errs49 === errors;}else {var valid11 = true;}}}else {validate42.errors = [{instancePath:instancePath+"/previewSchedule",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentMethod !== undefined){let data21 = data.repaymentMethod;const _errs51 = errors;if(!((data21 === "AMOUNT") || (data21 === "INSTALLMENTS"))){validate42.errors = [{instancePath:instancePath+"/repaymentMethod",schemaPath:"#/properties/repaymentMethod/enum",keyword:"enum",params:{allowedValues: schema55.properties.repaymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentPeriodUnit !== undefined){let data22 = data.repaymentPeriodUnit;const _errs52 = errors;if(!((((data22 === "DAYS") || (data22 === "WEEKS")) || (data22 === "MONTHS")) || (data22 === "YEARS"))){validate42.errors = [{instancePath:instancePath+"/repaymentPeriodUnit",schemaPath:"#/properties/repaymentPeriodUnit/enum",keyword:"enum",params:{allowedValues: schema55.properties.repaymentPeriodUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs52 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentReschedulingMethod !== undefined){let data23 = data.repaymentReschedulingMethod;const _errs53 = errors;if(!((((data23 === "NONE") || (data23 === "NEXT_WORKING_DAY")) || (data23 === "PREVIOUS_WORKING_DAY")) || (data23 === "EXTEND_SCHEDULE"))){validate42.errors = [{instancePath:instancePath+"/repaymentReschedulingMethod",schemaPath:"#/properties/repaymentReschedulingMethod/enum",keyword:"enum",params:{allowedValues: schema55.properties.repaymentReschedulingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs53 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentScheduleEditOptions !== undefined){let data24 = data.repaymentScheduleEditOptions;const _errs54 = errors;if(errors === _errs54){if(Array.isArray(data24)){var valid12 = true;const len2 = data24.length;for(let i3=0; i3<len2; i3++){const _errs56 = errors;let valid13;valid13 = false;for(const v0 of schema55.properties.repaymentScheduleEditOptions.items.enum){if(func0(data24[i3], v0)){valid13 = true;break;}}if(!valid13){validate42.errors = [{instancePath:instancePath+"/repaymentScheduleEditOptions/" + i3,schemaPath:"#/properties/repaymentScheduleEditOptions/items/enum",keyword:"enum",params:{allowedValues: schema55.properties.repaymentScheduleEditOptions.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid12 = _errs56 === errors;if(!valid12){break;}}}else {validate42.errors = [{instancePath:instancePath+"/repaymentScheduleEditOptions",schemaPath:"#/properties/repaymentScheduleEditOptions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs54 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentScheduleMethod !== undefined){let data26 = data.repaymentScheduleMethod;const _errs57 = errors;if(!(((data26 === "NONE") || (data26 === "FIXED")) || (data26 === "DYNAMIC"))){validate42.errors = [{instancePath:instancePath+"/repaymentScheduleMethod",schemaPath:"#/properties/repaymentScheduleMethod/enum",keyword:"enum",params:{allowedValues: schema55.properties.repaymentScheduleMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs57 === errors;}else {var valid0 = true;}if(valid0){if(data.roundingSettings !== undefined){let data27 = data.roundingSettings;const _errs58 = errors;const _errs59 = errors;if(errors === _errs59){if(data27 && typeof data27 == "object" && !Array.isArray(data27)){let missing1;if((((data27.repaymentCurrencyRounding === undefined) && (missing1 = "repaymentCurrencyRounding")) || ((data27.repaymentElementsRoundingMethod === undefined) && (missing1 = "repaymentElementsRoundingMethod"))) || ((data27.roundingRepaymentScheduleMethod === undefined) && (missing1 = "roundingRepaymentScheduleMethod"))){validate42.errors = [{instancePath:instancePath+"/roundingSettings",schemaPath:"#/$defs/RoundingSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data27.repaymentCurrencyRounding !== undefined){let data28 = data27.repaymentCurrencyRounding;const _errs62 = errors;if(!(((data28 === "NO_ROUNDING") || (data28 === "ROUND_TO_NEAREST_WHOLE_UNIT")) || (data28 === "ROUND_UP_TO_NEAREST_WHOLE_UNIT"))){validate42.errors = [{instancePath:instancePath+"/roundingSettings/repaymentCurrencyRounding",schemaPath:"#/$defs/RoundingSettingsaf30/properties/repaymentCurrencyRounding/enum",keyword:"enum",params:{allowedValues: schema60.properties.repaymentCurrencyRounding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid15 = _errs62 === errors;}else {var valid15 = true;}if(valid15){if(data27.repaymentElementsRoundingMethod !== undefined){let data29 = data27.repaymentElementsRoundingMethod;const _errs63 = errors;if(!(((data29 === "NO_ROUNDING") || (data29 === "ROUND_ALL")) || (data29 === "PAYMENT_DUE"))){validate42.errors = [{instancePath:instancePath+"/roundingSettings/repaymentElementsRoundingMethod",schemaPath:"#/$defs/RoundingSettingsaf30/properties/repaymentElementsRoundingMethod/enum",keyword:"enum",params:{allowedValues: schema60.properties.repaymentElementsRoundingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid15 = _errs63 === errors;}else {var valid15 = true;}if(valid15){if(data27.roundingRepaymentScheduleMethod !== undefined){let data30 = data27.roundingRepaymentScheduleMethod;const _errs64 = errors;if(!(((data30 === "NO_ROUNDING") || (data30 === "ROUND_REMAINDER_INTO_LAST_REPAYMENT")) || (data30 === "ROUND_PRINCIPAL_AND_INTEREST_REMAINDER_INTO_LAST_REPAYMENT"))){validate42.errors = [{instancePath:instancePath+"/roundingSettings/roundingRepaymentScheduleMethod",schemaPath:"#/$defs/RoundingSettingsaf30/properties/roundingRepaymentScheduleMethod/enum",keyword:"enum",params:{allowedValues: schema60.properties.roundingRepaymentScheduleMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid15 = _errs64 === errors;}else {var valid15 = true;}}}}}else {validate42.errors = [{instancePath:instancePath+"/roundingSettings",schemaPath:"#/$defs/RoundingSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs58 === errors;}else {var valid0 = true;}if(valid0){if(data.scheduleDueDatesMethod !== undefined){let data31 = data.scheduleDueDatesMethod;const _errs65 = errors;if(!((data31 === "INTERVAL") || (data31 === "FIXED_DAYS_OF_MONTH"))){validate42.errors = [{instancePath:instancePath+"/scheduleDueDatesMethod",schemaPath:"#/properties/scheduleDueDatesMethod/enum",keyword:"enum",params:{allowedValues: schema55.properties.scheduleDueDatesMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs65 === errors;}else {var valid0 = true;}if(valid0){if(data.shortMonthHandlingMethod !== undefined){let data32 = data.shortMonthHandlingMethod;const _errs66 = errors;if(!((data32 === "LAST_DAY_IN_MONTH") || (data32 === "FIRST_DAY_OF_NEXT_MONTH"))){validate42.errors = [{instancePath:instancePath+"/shortMonthHandlingMethod",schemaPath:"#/properties/shortMonthHandlingMethod/enum",keyword:"enum",params:{allowedValues: schema55.properties.shortMonthHandlingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs66 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}else {validate42.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate42.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.creditArrangementSettings === undefined) && (missing0 = "creditArrangementSettings")) || ((data.id === undefined) && (missing0 = "id"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.type === undefined) && (missing0 = "type"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountingSettings !== undefined){const _errs2 = errors;if(!(validate12(data.accountingSettings, {instancePath:instancePath+"/accountingSettings",parentData:data,parentDataProperty:"accountingSettings",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.accountLinkSettings !== undefined){let data1 = data.accountLinkSettings;const _errs3 = errors;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((data1.enabled === undefined) && (missing1 = "enabled")){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings",schemaPath:"#/$defs/AccountLinkSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.enabled !== undefined){const _errs7 = errors;if(typeof data1.enabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/enabled",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data1.linkableDepositProductKey !== undefined){const _errs9 = errors;if(typeof data1.linkableDepositProductKey !== "string"){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkableDepositProductKey",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkableDepositProductKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data1.linkedAccountOptions !== undefined){let data4 = data1.linkedAccountOptions;const _errs11 = errors;if(errors === _errs11){if(Array.isArray(data4)){var valid3 = true;const len0 = data4.length;for(let i0=0; i0<len0; i0++){let data5 = data4[i0];const _errs13 = errors;if(!((data5 === "AUTO_LINK_ACCOUNTS") || (data5 === "AUTO_CREATE_LINKED_ACCOUNTS"))){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkedAccountOptions/" + i0,schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkedAccountOptions/items/enum",keyword:"enum",params:{allowedValues: schema15.properties.linkedAccountOptions.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs13 === errors;if(!valid3){break;}}if(valid3){let i1 = data4.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data4[i1], data4[j0])){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkedAccountOptions",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkedAccountOptions/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkedAccountOptions",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkedAccountOptions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data1.settlementMethod !== undefined){let data6 = data1.settlementMethod;const _errs14 = errors;if(!(((data6 === "FULL_DUE_AMOUNTS") || (data6 === "PARTIAL_DUE_AMOUNTS")) || (data6 === "NO_AUTOMATED_TRANSFERS"))){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/settlementMethod",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/settlementMethod/enum",keyword:"enum",params:{allowedValues: schema15.properties.settlementMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/accountLinkSettings",schemaPath:"#/$defs/AccountLinkSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.adjustInterestForFirstInstallment !== undefined){const _errs15 = errors;if(typeof data.adjustInterestForFirstInstallment !== "boolean"){validate11.errors = [{instancePath:instancePath+"/adjustInterestForFirstInstallment",schemaPath:"#/properties/adjustInterestForFirstInstallment/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.allowCustomRepaymentAllocation !== undefined){const _errs17 = errors;if(typeof data.allowCustomRepaymentAllocation !== "boolean"){validate11.errors = [{instancePath:instancePath+"/allowCustomRepaymentAllocation",schemaPath:"#/properties/allowCustomRepaymentAllocation/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.arrearsSettings !== undefined){const _errs19 = errors;if(!(validate14(data.arrearsSettings, {instancePath:instancePath+"/arrearsSettings",parentData:data,parentDataProperty:"arrearsSettings",rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.availabilitySettings !== undefined){const _errs20 = errors;if(!(validate16(data.availabilitySettings, {instancePath:instancePath+"/availabilitySettings",parentData:data,parentDataProperty:"availabilitySettings",rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.category !== undefined){const _errs21 = errors;let valid5;valid5 = false;for(const v0 of schema12.properties.category.enum){if(func0(data.category, v0)){valid5 = true;break;}}if(!valid5){validate11.errors = [{instancePath:instancePath+"/category",schemaPath:"#/properties/category/enum",keyword:"enum",params:{allowedValues: schema12.properties.category.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs22 = errors;if(errors === _errs22){if(errors === _errs22){if(!(typeof data.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.creditArrangementSettings !== undefined){let data13 = data.creditArrangementSettings;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(data13 && typeof data13 == "object" && !Array.isArray(data13)){if(data13.creditArrangementRequirement !== undefined){let data14 = data13.creditArrangementRequirement;if(!(((data14 === "OPTIONAL") || (data14 === "REQUIRED")) || (data14 === "NOT_REQUIRED"))){validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings/creditArrangementRequirement",schemaPath:"#/$defs/CreditArrangementSettingsaf30/properties/creditArrangementRequirement/enum",keyword:"enum",params:{allowedValues: schema21.properties.creditArrangementRequirement.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings",schemaPath:"#/$defs/CreditArrangementSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.currency !== undefined){let data15 = data.currency;const _errs29 = errors;const _errs30 = errors;if(errors === _errs30){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){if(data15.code !== undefined){const _errs33 = errors;let valid10;valid10 = false;for(const v1 of schema22.properties.code.enum){if(func0(data15.code, v1)){valid10 = true;break;}}if(!valid10){validate11.errors = [{instancePath:instancePath+"/currency/code",schemaPath:"#/$defs/Currencyaf30/properties/code/enum",keyword:"enum",params:{allowedValues: schema22.properties.code.enum},message:"must be equal to one of the allowed values"}];return false;}var valid9 = _errs33 === errors;}else {var valid9 = true;}if(valid9){if(data15.currencyCode !== undefined){const _errs34 = errors;if(typeof data15.currencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/currency/currencyCode",schemaPath:"#/$defs/Currencyaf30/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs34 === errors;}else {var valid9 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/$defs/Currencyaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs36 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.feesSettings !== undefined){const _errs38 = errors;if(!(validate18(data.feesSettings, {instancePath:instancePath+"/feesSettings",parentData:data,parentDataProperty:"feesSettings",rootData}))){vErrors = vErrors === null ? validate18.errors : vErrors.concat(validate18.errors);errors = vErrors.length;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.fundingSettings !== undefined){const _errs39 = errors;if(!(validate22(data.fundingSettings, {instancePath:instancePath+"/fundingSettings",parentData:data,parentDataProperty:"fundingSettings",rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.gracePeriodSettings !== undefined){const _errs40 = errors;if(!(validate24(data.gracePeriodSettings, {instancePath:instancePath+"/gracePeriodSettings",parentData:data,parentDataProperty:"gracePeriodSettings",rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs41 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.interestSettings !== undefined){const _errs43 = errors;if(!(validate26(data.interestSettings, {instancePath:instancePath+"/interestSettings",parentData:data,parentDataProperty:"interestSettings",rootData}))){vErrors = vErrors === null ? validate26.errors : vErrors.concat(validate26.errors);errors = vErrors.length;}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.internalControls !== undefined){const _errs44 = errors;if(!(validate32(data.internalControls, {instancePath:instancePath+"/internalControls",parentData:data,parentDataProperty:"internalControls",rootData}))){vErrors = vErrors === null ? validate32.errors : vErrors.concat(validate32.errors);errors = vErrors.length;}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs45 = errors;if(errors === _errs45){if(errors === _errs45){if(!(typeof data.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs45 === errors;}else {var valid0 = true;}if(valid0){if(data.loanAmountSettings !== undefined){const _errs47 = errors;if(!(validate34(data.loanAmountSettings, {instancePath:instancePath+"/loanAmountSettings",parentData:data,parentDataProperty:"loanAmountSettings",rootData}))){vErrors = vErrors === null ? validate34.errors : vErrors.concat(validate34.errors);errors = vErrors.length;}var valid0 = _errs47 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs48 = errors;if(typeof data.name !== "string"){validate11.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.newAccountSettings !== undefined){let data28 = data.newAccountSettings;const _errs50 = errors;const _errs51 = errors;if(errors === _errs51){if(data28 && typeof data28 == "object" && !Array.isArray(data28)){let missing2;if((((data28.accountInitialState === undefined) && (missing2 = "accountInitialState")) || ((data28.idGeneratorType === undefined) && (missing2 = "idGeneratorType"))) || ((data28.idPattern === undefined) && (missing2 = "idPattern"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/NewAccountSettingsaf30/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data28.accountInitialState !== undefined){const _errs54 = errors;let valid13;valid13 = false;for(const v2 of schema45.properties.accountInitialState.enum){if(func0(data28.accountInitialState, v2)){valid13 = true;break;}}if(!valid13){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/accountInitialState",schemaPath:"#/$defs/NewAccountSettingsaf30/properties/accountInitialState/enum",keyword:"enum",params:{allowedValues: schema45.properties.accountInitialState.enum},message:"must be equal to one of the allowed values"}];return false;}var valid12 = _errs54 === errors;}else {var valid12 = true;}if(valid12){if(data28.idGeneratorType !== undefined){let data30 = data28.idGeneratorType;const _errs55 = errors;if(!((data30 === "INCREMENTAL_NUMBER") || (data30 === "RANDOM_PATTERN"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/idGeneratorType",schemaPath:"#/$defs/NewAccountSettingsaf30/properties/idGeneratorType/enum",keyword:"enum",params:{allowedValues: schema45.properties.idGeneratorType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid12 = _errs55 === errors;}else {var valid12 = true;}if(valid12){if(data28.idPattern !== undefined){const _errs56 = errors;if(typeof data28.idPattern !== "string"){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/idPattern",schemaPath:"#/$defs/NewAccountSettingsaf30/properties/idPattern/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid12 = _errs56 === errors;}else {var valid12 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/NewAccountSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs50 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){const _errs58 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs58 === errors;}else {var valid0 = true;}if(valid0){if(data.offsetSettings !== undefined){let data33 = data.offsetSettings;const _errs60 = errors;const _errs61 = errors;if(errors === _errs61){if(data33 && typeof data33 == "object" && !Array.isArray(data33)){if(data33.allowOffset !== undefined){if(typeof data33.allowOffset !== "boolean"){validate11.errors = [{instancePath:instancePath+"/offsetSettings/allowOffset",schemaPath:"#/$defs/OffsetSettingsaf30/properties/allowOffset/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/offsetSettings",schemaPath:"#/$defs/OffsetSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs60 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentSettings !== undefined){const _errs66 = errors;if(!(validate36(data.paymentSettings, {instancePath:instancePath+"/paymentSettings",parentData:data,parentDataProperty:"paymentSettings",rootData}))){vErrors = vErrors === null ? validate36.errors : vErrors.concat(validate36.errors);errors = vErrors.length;}var valid0 = _errs66 === errors;}else {var valid0 = true;}if(valid0){if(data.penaltySettings !== undefined){const _errs67 = errors;if(!(validate40(data.penaltySettings, {instancePath:instancePath+"/penaltySettings",parentData:data,parentDataProperty:"penaltySettings",rootData}))){vErrors = vErrors === null ? validate40.errors : vErrors.concat(validate40.errors);errors = vErrors.length;}var valid0 = _errs67 === errors;}else {var valid0 = true;}if(valid0){if(data.redrawSettings !== undefined){let data37 = data.redrawSettings;const _errs68 = errors;const _errs69 = errors;if(errors === _errs69){if(data37 && typeof data37 == "object" && !Array.isArray(data37)){let missing3;if((data37.allowRedraw === undefined) && (missing3 = "allowRedraw")){validate11.errors = [{instancePath:instancePath+"/redrawSettings",schemaPath:"#/$defs/ProductRedrawSettingsaf30/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data37.allowRedraw !== undefined){if(typeof data37.allowRedraw !== "boolean"){validate11.errors = [{instancePath:instancePath+"/redrawSettings/allowRedraw",schemaPath:"#/$defs/ProductRedrawSettingsaf30/properties/allowRedraw/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}}else {validate11.errors = [{instancePath:instancePath+"/redrawSettings",schemaPath:"#/$defs/ProductRedrawSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs68 === errors;}else {var valid0 = true;}if(valid0){if(data.scheduleSettings !== undefined){const _errs74 = errors;if(!(validate42(data.scheduleSettings, {instancePath:instancePath+"/scheduleSettings",parentData:data,parentDataProperty:"scheduleSettings",rootData}))){vErrors = vErrors === null ? validate42.errors : vErrors.concat(validate42.errors);errors = vErrors.length;}var valid0 = _errs74 === errors;}else {var valid0 = true;}if(valid0){if(data.securitySettings !== undefined){let data40 = data.securitySettings;const _errs75 = errors;const _errs76 = errors;if(errors === _errs76){if(data40 && typeof data40 == "object" && !Array.isArray(data40)){if(data40.isCollateralEnabled !== undefined){const _errs79 = errors;if(typeof data40.isCollateralEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/securitySettings/isCollateralEnabled",schemaPath:"#/$defs/SecuritySettingsaf30/properties/isCollateralEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid19 = _errs79 === errors;}else {var valid19 = true;}if(valid19){if(data40.isGuarantorsEnabled !== undefined){const _errs81 = errors;if(typeof data40.isGuarantorsEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/securitySettings/isGuarantorsEnabled",schemaPath:"#/$defs/SecuritySettingsaf30/properties/isGuarantorsEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid19 = _errs81 === errors;}else {var valid19 = true;}if(valid19){if(data40.requiredGuaranties !== undefined){let data43 = data40.requiredGuaranties;const _errs83 = errors;if(!((typeof data43 == "number") && (isFinite(data43)))){validate11.errors = [{instancePath:instancePath+"/securitySettings/requiredGuaranties",schemaPath:"#/$defs/SecuritySettingsaf30/properties/requiredGuaranties/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid19 = _errs83 === errors;}else {var valid19 = true;}}}}else {validate11.errors = [{instancePath:instancePath+"/securitySettings",schemaPath:"#/$defs/SecuritySettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs75 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){let data44 = data.state;const _errs85 = errors;if(!((data44 === "ACTIVE") || (data44 === "INACTIVE"))){validate11.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema12.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs85 === errors;}else {var valid0 = true;}if(valid0){if(data.taxSettings !== undefined){let data45 = data.taxSettings;const _errs86 = errors;const _errs87 = errors;if(errors === _errs87){if(data45 && typeof data45 == "object" && !Array.isArray(data45)){if(data45.taxCalculationMethod !== undefined){let data46 = data45.taxCalculationMethod;const _errs90 = errors;if(!((data46 === "INCLUSIVE") || (data46 === "EXCLUSIVE"))){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxCalculationMethod",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema62.properties.taxCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid21 = _errs90 === errors;}else {var valid21 = true;}if(valid21){if(data45.taxesOnFeesEnabled !== undefined){const _errs91 = errors;if(typeof data45.taxesOnFeesEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxesOnFeesEnabled",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxesOnFeesEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid21 = _errs91 === errors;}else {var valid21 = true;}if(valid21){if(data45.taxesOnInterestEnabled !== undefined){const _errs93 = errors;if(typeof data45.taxesOnInterestEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxesOnInterestEnabled",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxesOnInterestEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid21 = _errs93 === errors;}else {var valid21 = true;}if(valid21){if(data45.taxesOnPenaltyEnabled !== undefined){const _errs95 = errors;if(typeof data45.taxesOnPenaltyEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxesOnPenaltyEnabled",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxesOnPenaltyEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid21 = _errs95 === errors;}else {var valid21 = true;}if(valid21){if(data45.taxSourceKey !== undefined){const _errs97 = errors;if(typeof data45.taxSourceKey !== "string"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxSourceKey",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid21 = _errs97 === errors;}else {var valid21 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/TaxSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs86 === errors;}else {var valid0 = true;}if(valid0){if(data.templates !== undefined){let data51 = data.templates;const _errs99 = errors;if(errors === _errs99){if(Array.isArray(data51)){var valid22 = true;const len1 = data51.length;for(let i2=0; i2<len1; i2++){let data52 = data51[i2];const _errs101 = errors;const _errs102 = errors;if(errors === _errs102){if(data52 && typeof data52 == "object" && !Array.isArray(data52)){if(data52.creationDate !== undefined){const _errs105 = errors;if(errors === _errs105){if(errors === _errs105){if(!(typeof data52.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/creationDate",schemaPath:"#/$defs/DocumentTemplateaf30/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid24 = _errs105 === errors;}else {var valid24 = true;}if(valid24){if(data52.encodedKey !== undefined){const _errs107 = errors;if(typeof data52.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/encodedKey",schemaPath:"#/$defs/DocumentTemplateaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid24 = _errs107 === errors;}else {var valid24 = true;}if(valid24){if(data52.lastModifiedDate !== undefined){const _errs109 = errors;if(errors === _errs109){if(errors === _errs109){if(!(typeof data52.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/lastModifiedDate",schemaPath:"#/$defs/DocumentTemplateaf30/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid24 = _errs109 === errors;}else {var valid24 = true;}if(valid24){if(data52.name !== undefined){const _errs111 = errors;if(typeof data52.name !== "string"){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/name",schemaPath:"#/$defs/DocumentTemplateaf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid24 = _errs111 === errors;}else {var valid24 = true;}if(valid24){if(data52.type !== undefined){let data57 = data52.type;const _errs113 = errors;if(!(((data57 === "ACCOUNT") || (data57 === "TRANSACTION")) || (data57 === "ACCOUNT_WITH_TRANSACTIONS"))){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/type",schemaPath:"#/$defs/DocumentTemplateaf30/properties/type/enum",keyword:"enum",params:{allowedValues: schema63.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid24 = _errs113 === errors;}else {var valid24 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/templates/" + i2,schemaPath:"#/$defs/DocumentTemplateaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid22 = _errs101 === errors;if(!valid22){break;}}}else {validate11.errors = [{instancePath:instancePath+"/templates",schemaPath:"#/properties/templates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs99 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){const _errs114 = errors;let valid25;valid25 = false;for(const v3 of schema12.properties.type.enum){if(func0(data.type, v3)){valid25 = true;break;}}if(!valid25){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs114 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;