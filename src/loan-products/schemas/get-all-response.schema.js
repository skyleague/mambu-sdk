/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","type":"array","title":"getAllResponse","items":{"$ref":"#/$defs/LoanProduct"},"$defs":{"LoanProduct":{"type":"object","title":"LoanProduct","description":"The response representation of a LoanProduct.","properties":{"notes":{"type":"string","title":"notes","description":"Some notes/a description about the loan product"},"availabilitySettings":{"title":"availabilitySettings","$ref":"#/$defs/ProductAvailabilitySettingsaf30"},"paymentSettings":{"title":"paymentSettings","$ref":"#/$defs/PaymentSettingsaf30"},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/TaxSettingsaf30"},"redrawSettings":{"title":"redrawSettings","$ref":"#/$defs/ProductRedrawSettingsaf30"},"type":{"title":"type","description":"Indicates the type of loan product.","enum":["FIXED_TERM_LOAN","DYNAMIC_TERM_LOAN","INTEREST_FREE_LOAN","TRANCHED_LOAN","REVOLVING_CREDIT"]},"arrearsSettings":{"title":"arrearsSettings","$ref":"#/$defs/ProductArrearsSettingsaf30"},"newAccountSettings":{"title":"newAccountSettings","$ref":"#/$defs/NewAccountSettingsaf30"},"interestSettings":{"title":"interestSettings","$ref":"#/$defs/ProductInterestSettingsaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the loan product, auto generated, unique"},"currency":{"title":"currency","$ref":"#/$defs/Currencyaf30"},"id":{"type":"string","title":"id","description":"The id of the loan product, can be generated and customized, unique"},"state":{"title":"state","description":"Indicates the current state of the product","enum":["ACTIVE","INACTIVE"]},"penaltySettings":{"title":"penaltySettings","$ref":"#/$defs/ProductPenaltySettingsaf30"},"adjustInterestForFirstInstallment":{"type":"boolean","title":"adjustInterestForFirstInstallment","description":"Adjust the interest for the first repayment when the first repayment period is different than the repayment frequency"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date the loan product was updated","format":"date-time"},"feesSettings":{"title":"feesSettings","$ref":"#/$defs/FeesSettingsaf30"},"accountLinkSettings":{"title":"accountLinkSettings","$ref":"#/$defs/AccountLinkSettingsaf30"},"securitySettings":{"title":"securitySettings","$ref":"#/$defs/SecuritySettingsaf30"},"templates":{"type":"array","title":"templates","description":"Template documents of the product.","items":{"description":"Template documents of the product.","$ref":"#/$defs/DocumentTemplateaf30"}},"gracePeriodSettings":{"title":"gracePeriodSettings","$ref":"#/$defs/GracePeriodSettingsaf30"},"offsetSettings":{"title":"offsetSettings","$ref":"#/$defs/OffsetSettingsaf30"},"creationDate":{"type":"string","title":"creationDate","description":"The date this loan product was created","format":"date-time"},"creditArrangementSettings":{"title":"creditArrangementSettings","$ref":"#/$defs/CreditArrangementSettingsaf30"},"allowCustomRepaymentAllocation":{"type":"boolean","title":"allowCustomRepaymentAllocation","description":"Whether a payment could be customly allocated on the account, ignoring the default repayment allocation order"},"scheduleSettings":{"title":"scheduleSettings","$ref":"#/$defs/LoanProductScheduleSettingsaf30"},"accountingSettings":{"title":"accountingSettings","$ref":"#/$defs/AccountingSettingsaf30"},"name":{"type":"string","title":"name","description":"The name of the loan product"},"loanAmountSettings":{"title":"loanAmountSettings","$ref":"#/$defs/LoanAmountSettingsaf30"},"category":{"title":"category","description":"Indicates the category the loan product belongs to.","enum":["PERSONAL_LENDING","PURCHASE_FINANCING","RETAIL_MORTGAGES","SME_LENDING","COMMERCIAL","UNCATEGORIZED"]},"internalControls":{"title":"internalControls","$ref":"#/$defs/InternalControlsaf30"},"fundingSettings":{"title":"fundingSettings","$ref":"#/$defs/FundingSettingsaf30"}},"required":["type","id","creditArrangementSettings","name"],"additionalProperties":false},"ProductAvailabilitySettingsaf30":{"type":"object","title":"ProductAvailabilitySettings","description":"Holds information about product availability.","properties":{"branchSettings":{"title":"branchSettings","$ref":"#/$defs/BranchSettingsaf30"},"availableFor":{"type":"array","title":"availableFor","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS","SOLIDARITY_GROUPS"]},"uniqueItems":true}},"additionalProperties":false},"BranchSettingsaf30":{"type":"object","title":"BranchSettings","description":"Holds information about branch availability for the product.","properties":{"forAllBranches":{"type":"boolean","title":"forAllBranches","description":"Indicates if this product should be available for all branches"},"availableProductBranches":{"type":"array","title":"availableProductBranches","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}}},"additionalProperties":false},"PaymentSettingsaf30":{"type":"object","title":"PaymentSettings","description":"Defines the payment settings for the loan product and for loans crated based on this product.","properties":{"prepaymentSettings":{"title":"prepaymentSettings","$ref":"#/$defs/ProductPrepaymentSettingsaf30"},"principalPaymentSettings":{"title":"principalPaymentSettings","$ref":"#/$defs/PrincipalPaymentProductSettingsaf30"},"paymentMethod":{"title":"paymentMethod","description":"The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)","enum":["HORIZONTAL","VERTICAL"]},"latePaymentsRecalculationMethod":{"title":"latePaymentsRecalculationMethod","description":"Recalculate the schedule when late payments are posted on dynamic Equal Installments loans.","enum":["OVERDUE_INSTALLMENTS_INCREASE","LAST_INSTALLMENT_INCREASE"]},"repaymentAllocationOrder":{"type":"array","title":"repaymentAllocationOrder","description":"A list of basic repayment allocation elements such as the principal, interest & fees.","items":{"enum":["PRINCIPAL","INTEREST","FEE","PENALTY"]}},"amortizationMethod":{"title":"amortizationMethod","description":"Payments Method used by loan accounts for repayments schedule generation.","enum":["STANDARD_PAYMENTS","BALLOON_PAYMENTS","OPTIMIZED_PAYMENTS","PAYMENT_PLAN"]}},"required":["paymentMethod","latePaymentsRecalculationMethod","repaymentAllocationOrder"],"additionalProperties":false},"ProductPrepaymentSettingsaf30":{"type":"object","title":"ProductPrepaymentSettings","description":"Defines the prepayment settings for the product","properties":{"futurePaymentsAcceptance":{"title":"futurePaymentsAcceptance","description":"Shows whether the future payments are allowed or not for this product (repayment transactions with entry date set in the future)","enum":["NO_FUTURE_PAYMENTS","ACCEPT_FUTURE_PAYMENTS","ACCEPT_OVERPAYMENTS"]},"applyInterestOnPrepaymentMethod":{"title":"applyInterestOnPrepaymentMethod","description":"Whether the interest on prepayment is applied manual or automatic.","enum":["AUTOMATIC","MANUAL"]},"prepaymentAcceptance":{"title":"prepaymentAcceptance","description":"Shows whether the pre-payments are allowed or not for this product.","enum":["ACCEPT_PREPAYMENTS","NO_PREPAYMENTS"]},"elementsRecalculationMethod":{"title":"elementsRecalculationMethod","description":"The elements recalculation method, indicates how the declining balance with equal installments repayments are recalculated","enum":["PRINCIPAL_EXPECTED_FIXED","TOTAL_EXPECTED_FIXED"]},"principalPaidInstallmentStatus":{"title":"principalPaidInstallmentStatus","description":"Installment status for the case when principal is paid off (copied from loan product)","enum":["PARTIALLY_PAID","PAID","ORIGINAL_TOTAL_EXPECTED_PAID"]},"prepaymentRecalculationMethod":{"title":"prepaymentRecalculationMethod","description":"Prepayment recalculation method copied from the loan product on which this account is based","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]}},"required":["futurePaymentsAcceptance"],"additionalProperties":false},"PrincipalPaymentProductSettingsaf30":{"type":"object","title":"PrincipalPaymentProductSettings","description":"Defines the principal payment settings constraints for the loans that will be created based on this product.","properties":{"defaultPrincipalRepaymentInterval":{"type":"integer","title":"defaultPrincipalRepaymentInterval","description":"How many repayments the principal has to be paid"},"includeInterestInFloorAmount":{"type":"boolean","title":"includeInterestInFloorAmount","description":"If true, the interest will be included along with the principal in the repayment floor amount, for a revolving credit account"},"amount":{"title":"amount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"totalDuePayment":{"title":"totalDuePayment","description":"The method of total due payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]},"principalFloorValue":{"type":"number","title":"principalFloorValue","description":"The minimum principal due amount a repayment made with this settings can have"},"principalPaymentMethod":{"title":"principalPaymentMethod","description":"The method of principal payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]},"percentage":{"title":"percentage","$ref":"#/$defs/DecimalConstraintsaf30"},"includeFeesInFloorAmount":{"type":"boolean","title":"includeFeesInFloorAmount","description":"If true, the fees will be included along with the principal in the repayment floor amount, for a revolving credit account"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the settings, auto generated, unique"},"totalDueAmountFloor":{"type":"number","title":"totalDueAmountFloor","description":"The minimum total due amount a repayment made with this settings can have"},"principalCeilingValue":{"type":"number","title":"principalCeilingValue","description":"The maximum principal due amount a repayment made with this settings can have"}},"additionalProperties":false},"AmountDecimalConstraintsaf30":{"type":"object","title":"AmountDecimalConstraints","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":false},"DecimalConstraintsaf30":{"type":"object","title":"DecimalConstraints","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":false},"TaxSettingsaf30":{"type":"object","title":"TaxSettings","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"taxSourceKey":{"type":"string","title":"taxSourceKey","description":"The tax source from where the loan account taxes will be updated."},"taxesOnInterestEnabled":{"type":"boolean","title":"taxesOnInterestEnabled","description":"Shows whether taxes on interest are enabled for this product or not."},"taxesOnPenaltyEnabled":{"type":"boolean","title":"taxesOnPenaltyEnabled","description":"Shows whether taxes on penalties are enabled for this product or not."},"taxCalculationMethod":{"title":"taxCalculationMethod","description":"Shows whether the tax is added on top of the target amount or not.","enum":["INCLUSIVE","EXCLUSIVE"]},"taxesOnFeesEnabled":{"type":"boolean","title":"taxesOnFeesEnabled","description":"Shows whether taxes on fees are enabled for this product or not."}},"additionalProperties":false},"ProductRedrawSettingsaf30":{"type":"object","title":"ProductRedrawSettings","description":"The redraw settings for the product.","properties":{"allowRedraw":{"type":"boolean","title":"allowRedraw","description":"Indicates whether the product support redraw (prepayments which are stored at loan account level as a Redrawable balance)"}},"required":["allowRedraw"],"additionalProperties":false},"ProductArrearsSettingsaf30":{"type":"object","title":"ProductArrearsSettings","description":"The product arrears settings, shows whether the non working days are taken in consideration or not when applying penalties/late fees or when setting an account into arrears","properties":{"monthlyToleranceDay":{"type":"integer","title":"monthlyToleranceDay","description":"Defines the tolerance monthly date"},"toleranceFloorAmount":{"type":"number","title":"toleranceFloorAmount","description":"The tolerance floor amount."},"nonWorkingDaysMethod":{"title":"nonWorkingDaysMethod","description":"Shows whether the non working days are taken in consideration or not when applying penaltees/late fees or when setting an account into arrears","enum":["INCLUDED","EXCLUDED"]},"tolerancePercentageOfOutstandingPrincipal":{"title":"tolerancePercentageOfOutstandingPrincipal","$ref":"#/$defs/DecimalIntervalaf30"},"tolerancePeriod":{"title":"tolerancePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the arrears base settings, auto generated, unique."},"toleranceCalculationMethod":{"title":"toleranceCalculationMethod","description":"Defines the tolerance calculation method","enum":["ARREARS_TOLERANCE_PERIOD","MONTHLY_ARREARS_TOLERANCE_DAY"]},"dateCalculationMethod":{"title":"dateCalculationMethod","description":"The arrears date calculation method.","enum":["ACCOUNT_FIRST_WENT_TO_ARREARS","LAST_LATE_REPAYMENT","ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"]}},"additionalProperties":false},"DecimalIntervalaf30":{"type":"object","title":"DecimalInterval","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":false},"IntegerIntervalConstraintsaf30":{"type":"object","title":"IntegerIntervalConstraints","description":"Decimal integer, like min/max/default.","properties":{"minValue":{"type":"integer","title":"minValue","description":"The minimum value."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the integer constraint, auto generated, unique"},"defaultValue":{"type":"integer","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"integer","title":"maxValue","description":"The maximum value."}},"additionalProperties":false},"NewAccountSettingsaf30":{"type":"object","title":"NewAccountSettings","description":"The new account settings, defines the settings and constraints used by new loan account created based on this product.","properties":{"idGeneratorType":{"title":"idGeneratorType","description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"accountInitialState":{"title":"accountInitialState","description":"The initial state of the account when is created.","enum":["PARTIAL_APPLICATION","PENDING_APPROVAL","APPROVED","ACTIVE","ACTIVE_IN_ARREARS","CLOSED"]},"idPattern":{"type":"string","title":"idPattern","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["idGeneratorType","accountInitialState","idPattern"],"additionalProperties":false},"ProductInterestSettingsaf30":{"type":"object","title":"ProductInterestSettings","description":"The interest settings, defines constraints regarding interest that will be used on the loan account crated based on this product.","properties":{"interestCalculationMethod":{"title":"interestCalculationMethod","description":"The interest calculation method. Holds the type of interest calculation method.","enum":["FLAT","DECLINING_BALANCE","DECLINING_BALANCE_DISCOUNTED"]},"interestRateSettings":{"type":"array","title":"interestRateSettings","description":"Adjustable interest rates settings","items":{"description":"Adjustable interest rates settings","$ref":"#/$defs/ProductInterestRateSettingsaf30"}},"scheduleInterestDaysCountMethod":{"title":"scheduleInterestDaysCountMethod","description":"Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.","enum":["REPAYMENT_PERIODICITY","ACTUAL_DAYS_COUNT"]},"interestApplicationMethod":{"title":"interestApplicationMethod","description":"The interest application method. Represents the interest application method that determines whether the interest gets applied on the account's disbursement or on each repayment.","enum":["AFTER_DISBURSEMENT","REPAYMENT_DUE_DATE"]},"interestType":{"title":"interestType","description":"The possible values for how we compute and apply the interest","enum":["SIMPLE_INTEREST","CAPITALIZED_INTEREST","COMPOUNDING_INTEREST"]},"indexRateSettings":{"title":"indexRateSettings","$ref":"#/$defs/InterestProductSettingsaf30"},"interestBalanceCalculationMethod":{"title":"interestBalanceCalculationMethod","description":"The interest balance calculation method. Represents the option which determines the way the balance for the account's interest is computed.","enum":["ONLY_PRINCIPAL","PRINCIPAL_AND_INTEREST"]},"daysInYear":{"title":"daysInYear","description":"The days in year that should be used for loan calculations.","enum":["ACTUAL_365_FIXED","ACTUAL_364","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","BUS_252","E30_42_365"]},"accrueLateInterest":{"type":"boolean","title":"accrueLateInterest","description":"Whether late interest should be accrued, applied and paid"},"compoundingFrequency":{"title":"compoundingFrequency","description":"The frequency on which the accrued interest will be added to the principal for interest calculation. It is used only for InterestType.COMPOUNDING_INTEREST","const":"DAILY"}},"required":["interestCalculationMethod","scheduleInterestDaysCountMethod","daysInYear"],"additionalProperties":false},"ProductInterestRateSettingsaf30":{"type":"object","title":"ProductInterestRateSettings","description":"Adjustable interest rates settings","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit. Valid only for index interest rate.","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or indexed(interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count. Valid only for index interest rate."},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Maximum value allowed for index based interest rate. Valid only for index interest rate."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate settings, auto generated, unique"},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Minimum value allowed for index based interest rate. Valid only for index interest rate."}},"required":["interestRateSource"],"additionalProperties":false},"InterestProductSettingsaf30":{"type":"object","title":"InterestProductSettings","description":"The interest settings, defines constraints regarding interest that will be used on the loan account created based on this product.","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"allowNegativeInterestRate":{"type":"boolean","title":"allowNegativeInterestRate","description":"Indicator whether the loan product allows negative values for interest rate or interest spread"},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"accrueInterestAfterMaturity":{"type":"boolean","title":"accrueInterestAfterMaturity","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Interest spread + index interest rate can't be more than this amount (valid only for index interest rate products)."},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"description":"The list of interest rate tiers available for the current settings instance","$ref":"#/$defs/InterestRateTieraf30"}},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Interest spread + index interest rate can't be less than this amount (valid only for index interest rate products)."}},"additionalProperties":false},"InterestRateTieraf30":{"type":"object","title":"InterestRateTier","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"}},"required":["interestRate"],"additionalProperties":false},"Currencyaf30":{"type":"object","title":"Currency","description":"Represents a currency eg. USD, EUR.","properties":{"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."},"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTC","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]}},"additionalProperties":false},"ProductPenaltySettingsaf30":{"type":"object","title":"ProductPenaltySettings","description":"Defines the penalty settings for the product that will be used by the loan accounts based on this product","properties":{"loanPenaltyGracePeriod":{"type":"integer","title":"loanPenaltyGracePeriod","description":"Number of days to wait before applying the loan penalty amounts"},"loanPenaltyCalculationMethod":{"title":"loanPenaltyCalculationMethod","description":"The penalty calculation method","enum":["NONE","OVERDUE_BALANCE","OVERDUE_BALANCE_AND_INTEREST","OUTSTANDING_PRINCIPAL"]},"penaltyRate":{"title":"penaltyRate","$ref":"#/$defs/DecimalConstraintsaf30"}},"required":["loanPenaltyCalculationMethod"],"additionalProperties":false},"FeesSettingsaf30":{"type":"object","title":"FeesSettings","description":"Defines fees settings for the product.","properties":{"fees":{"type":"array","title":"fees","description":"List of all fees that can be applied for accounts of this loan product.","items":{"description":"List of all fees that can be applied for accounts of this loan product.","$ref":"#/$defs/PredefinedFeeaf30"}},"allowArbitraryFees":{"type":"boolean","title":"allowArbitraryFees","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."}},"additionalProperties":false},"PredefinedFeeaf30":{"type":"object","title":"PredefinedFee","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"amount":{"type":"number","title":"amount","description":"The amount of the fee"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"Shows the last modified date of the fee","format":"date-time"},"amountCalculationMethod":{"title":"amountCalculationMethod","description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","LOAN_AMOUNT_PERCENTAGE","REPAYMENT_PRINCIPAL_AMOUNT_PERCENTAGE","LOAN_AMOUNT_PERCENTAGE_NUMBER_OF_INSTALLMENTS","FLAT_NUMBER_OF_INSTALLMENTS"]},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/FeeTaxSettingsaf30"},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","MONTHLY_FEE","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY"]},"creationDate":{"type":"string","title":"creationDate","description":"Shows the creation date of the fee","format":"date-time"},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","$ref":"#/$defs/GlAccountingRuleaf30"}},"name":{"type":"string","title":"name","description":"The name of the fee"},"feeApplication":{"title":"feeApplication","description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"amortizationSettings":{"title":"amortizationSettings","$ref":"#/$defs/PeriodIntervalSettingsaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the predefined fee, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the fee"},"state":{"title":"state","description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"applyDateMethod":{"title":"applyDateMethod","description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]},"percentageAmount":{"type":"number","title":"percentageAmount","description":"The amount of the fee in percents applied to percentSource"}},"required":["trigger","feeApplication","state"],"additionalProperties":false},"FeeTaxSettingsaf30":{"type":"object","title":"FeeTaxSettings","description":"Tax settings for a specific Predefined fee that overrides the tax settings of Loan Product","properties":{"taxableCalculationMethod":{"title":"taxableCalculationMethod","description":"Marks a specific fee as non-taxable (taxes are not calculated for it).Feature is in the Early Stage. To be enabled by request.","enum":["DEFAULT","NON_TAXABLE","CUSTOM_TAX"]}},"additionalProperties":false},"GlAccountingRuleaf30":{"type":"object","title":"GLAccountingRule","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the accounting rule, auto generated, unique."},"glAccountKey":{"type":"string","title":"glAccountKey","description":"The encoded key of the account that is mapped to the financialResource"},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The key of the transaction rule that uses this rule"},"financialResource":{"title":"financialResource","description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]}},"required":["glAccountKey","financialResource"],"additionalProperties":false},"PeriodIntervalSettingsaf30":{"type":"object","title":"PeriodIntervalSettings","description":"The settings for defining period intervals.","properties":{"feeAmortizationUponRescheduleRefinanceOption":{"title":"feeAmortizationUponRescheduleRefinanceOption","description":"Flag for signaling if fee amortization should be continued or finished at account reschedule/refinance","enum":["END_AMORTIZATION_ON_THE_ORIGINAL_ACCOUNT","CONTINUE_AMORTIZATION_ON_THE_RESCHEDULED_REFINANCED_ACCOUNT"]},"intervalType":{"title":"intervalType","description":"Defines the options for an interval","enum":["PREDEFINED_INTERVALS","FULL_TERM"]},"periodCount":{"type":"integer","title":"periodCount","description":"Period count used in conjunction with periodUnit to determine the next date of the interval"},"intervalCount":{"type":"integer","title":"intervalCount","description":"Total number of intervals"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the period interval settings, auto generated, unique."},"amortizationProfile":{"title":"amortizationProfile","description":"Type of amortization profile used for fee","enum":["NONE","SUM_OF_YEARS_DIGITS","STRAIGHT_LINE","EFFECTIVE_INTEREST_RATE"]},"periodUnit":{"title":"periodUnit","description":"Amortization unit to determine the interval between amortizations","enum":["DAYS","WEEKS","MONTHS","YEARS"]},"frequency":{"title":"frequency","description":"Frequency settings of the fee amortization","enum":["ACCOUNT_INSTALLMENTS_DUE_DATES","ACCOUNT_INSTALLMENTS_DUE_DATES_DAILY_BOOKING","CUSTOM_INTERVAL"]}},"additionalProperties":false},"AccountLinkSettingsaf30":{"type":"object","title":"AccountLinkSettings","description":"Defines the settings for account linking.","properties":{"linkedAccountOptions":{"type":"array","title":"linkedAccountOptions","description":"A set of linked account options.","items":{"enum":["AUTO_LINK_ACCOUNTS","AUTO_CREATE_LINKED_ACCOUNTS"]},"uniqueItems":true},"settlementMethod":{"title":"settlementMethod","description":"Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.","enum":["FULL_DUE_AMOUNTS","PARTIAL_DUE_AMOUNTS","NO_AUTOMATED_TRANSFERS"]},"enabled":{"type":"boolean","title":"enabled","description":"Shows whether the loan accounts created using this product can be linked to a savings account."},"linkableDepositProductKey":{"type":"string","title":"linkableDepositProductKey","description":"Loan accounts created for this product can only be linked the the savings accounts that use the savings product with this key. If null, the loan accounts for this product can be linked to any savings account."}},"required":["enabled"],"additionalProperties":false},"SecuritySettingsaf30":{"type":"object","title":"SecuritySettings","description":"The settings and constraints for securities.","properties":{"isCollateralEnabled":{"type":"boolean","title":"isCollateralEnabled","description":"Shows whether collateral (assets or other goods) are accepted in order to reach required securities percentage from loan amount, as defined in this product."},"isGuarantorsEnabled":{"type":"boolean","title":"isGuarantorsEnabled","description":"Shows whether guarantors (other clients) are accepted in order to reach the required securities percentage from loan amount, as defined in this product."},"requiredGuaranties":{"type":"number","title":"requiredGuaranties","description":"The securities percentage from loan amount that is needed in order for this account to be approved. Null if the securities are not required."}},"additionalProperties":false},"DocumentTemplateaf30":{"type":"object","title":"DocumentTemplate","description":"Template documents of the product.","properties":{"name":{"type":"string","title":"name","description":"The name the document"},"encodedKey":{"type":"string","title":"encodedKey","description":"The document encodedKey"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the document","format":"date-time"},"type":{"title":"type","description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the document","format":"date-time"}},"additionalProperties":false},"GracePeriodSettingsaf30":{"type":"object","title":"GracePeriodSettings","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"gracePeriod":{"title":"gracePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"gracePeriodType":{"title":"gracePeriodType","description":"The grace period type. Representing the type of grace period which is possible for a loan account.","enum":["NONE","PAY_INTEREST_ONLY","INTEREST_FORGIVENESS"]}},"additionalProperties":false},"OffsetSettingsaf30":{"type":"object","title":"OffsetSettings","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","title":"allowOffset","description":"Indicates whether the product supports offset"}},"additionalProperties":false},"CreditArrangementSettingsaf30":{"type":"object","title":"CreditArrangementSettings","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"title":"creditArrangementRequirement","description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":false},"LoanProductScheduleSettingsaf30":{"type":"object","title":"LoanProductScheduleSettings","description":"Defines the settings and constraints for schedule for the loans that are created based on this product.","properties":{"repaymentMethod":{"title":"repaymentMethod","description":"The repayment method value","enum":["AMOUNT","INSTALLMENTS"]},"repaymentScheduleMethod":{"title":"repaymentScheduleMethod","description":"The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account's life cycle or will be dynamically recomputed when required.","enum":["NONE","FIXED","DYNAMIC"]},"repaymentReschedulingMethod":{"title":"repaymentReschedulingMethod","description":"The repayment rescheduling method used in calculations.","enum":["NONE","NEXT_WORKING_DAY","PREVIOUS_WORKING_DAY","EXTEND_SCHEDULE"]},"shortMonthHandlingMethod":{"title":"shortMonthHandlingMethod","description":"Determines how to handle the short months, if they select a fixed day of month > 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.","enum":["LAST_DAY_IN_MONTH","FIRST_DAY_OF_NEXT_MONTH"]},"numInstallments":{"title":"numInstallments","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"interestAccrualSince":{"title":"interestAccrualSince","description":"Represents the moment the interest will start getting accrued.","enum":["DISBURSEMENT","DUE_DATE"]},"repaymentPeriodUnit":{"title":"repaymentPeriodUnit","description":"The frequency of the loan repayment.","enum":["DAYS","WEEKS","MONTHS","YEARS"]},"previewSchedule":{"title":"previewSchedule","$ref":"#/$defs/PreviewScheduleSettingsaf30"},"defaultRepaymentPeriodCount":{"type":"integer","title":"defaultRepaymentPeriodCount","description":"Interval Repayment Methodology Settings."},"billingCycles":{"title":"billingCycles","$ref":"#/$defs/BillingCyclesProductSettingsaf30"},"fixedDaysOfMonth":{"type":"array","title":"fixedDaysOfMonth","description":" Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTH.","items":{"type":"integer"}},"repaymentScheduleEditOptions":{"type":"array","title":"repaymentScheduleEditOptions","description":"Shows the properties from the repayment schedule can be edited.","items":{"enum":["ADJUST_PAYMENT_DATES","ADJUST_PRINCIPAL_PAYMENT_SCHEDULE","ADJUST_INTEREST_PAYMENT_SCHEDULE","ADJUST_FEE_PAYMENT_SCHEDULE","ADJUST_PENALTY_PAYMENT_SCHEDULE","ADJUST_NUMBER_OF_INSTALLMENTS","ADJUST_PAYMENT_HOLIDAYS"]}},"scheduleDueDatesMethod":{"title":"scheduleDueDatesMethod","description":"The methodology used by this product to compute the due dates of the repayments.","enum":["INTERVAL","FIXED_DAYS_OF_MONTH"]},"firstRepaymentDueDateOffset":{"title":"firstRepaymentDueDateOffset","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"roundingSettings":{"title":"roundingSettings","$ref":"#/$defs/RoundingSettingsaf30"}},"required":["repaymentScheduleMethod","repaymentReschedulingMethod","scheduleDueDatesMethod"],"additionalProperties":false},"PreviewScheduleSettingsaf30":{"type":"object","title":"PreviewScheduleSettings","description":"Defines the Preview Schedule settings for revolving products","properties":{"numberOfPreviewedInstalments":{"type":"integer","title":"numberOfPreviewedInstalments","description":"Number of Previewed Instalments."},"previewScheduleEnabled":{"type":"boolean","title":"previewScheduleEnabled","description":"Preview Schedule status."}},"additionalProperties":false},"BillingCyclesProductSettingsaf30":{"type":"object","title":"BillingCyclesProductSettings","description":"Defines the billing cycles settings for revolving credit products","properties":{"enabled":{"type":"boolean","title":"enabled","description":"The billing cycle status if it is enabled or disabled"},"startDays":{"type":"array","title":"startDays","description":"The billing cycle start days in case it is enabled","items":{"type":"integer"},"uniqueItems":true}},"additionalProperties":false},"RoundingSettingsaf30":{"type":"object","title":"RoundingSettings","description":"Defines the rounding settings used in the loan computation.","properties":{"roundingRepaymentScheduleMethod":{"title":"roundingRepaymentScheduleMethod","description":"Specifies the rounding repayment schedule method.","enum":["NO_ROUNDING","ROUND_REMAINDER_INTO_LAST_REPAYMENT","ROUND_PRINCIPAL_AND_INTEREST_REMAINDER_INTO_LAST_REPAYMENT"]},"repaymentCurrencyRounding":{"title":"repaymentCurrencyRounding","description":"Specifies the repayment currency rounding method.","enum":["NO_ROUNDING","ROUND_TO_NEAREST_WHOLE_UNIT","ROUND_UP_TO_NEAREST_WHOLE_UNIT"]},"repaymentElementsRoundingMethod":{"title":"repaymentElementsRoundingMethod","description":"Determines how the repayment currency rounding is handled on each element from the schedule.","enum":["NO_ROUNDING","ROUND_ALL","PAYMENT_DUE"]}},"required":["roundingRepaymentScheduleMethod","repaymentCurrencyRounding","repaymentElementsRoundingMethod"],"additionalProperties":false},"AccountingSettingsaf30":{"type":"object","title":"AccountingSettings","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"title":"accountingMethod","description":"A list of accounting rules for the product.","enum":["NONE","CASH","ACCRUAL"]},"interestAccrualCalculation":{"title":"interestAccrualCalculation","description":"The accounting interest calculation option selected for the product.","enum":["NONE","AGGREGATED_AMOUNT","BREAKDOWN_PER_ACCOUNT"]},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules for the product.","items":{"description":"A list of accounting rules for the product.","$ref":"#/$defs/GlAccountingRuleaf30"}},"interestAccruedAccountingMethod":{"title":"interestAccruedAccountingMethod","description":"A list of accounting rules for the product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":false},"LoanAmountSettingsaf30":{"type":"object","title":"LoanAmountSettings","description":"The amount settings, holds all amount properties.","properties":{"loanAmount":{"title":"loanAmount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"trancheSettings":{"title":"trancheSettings","$ref":"#/$defs/TrancheSettingsaf30"}},"additionalProperties":false},"TrancheSettingsaf30":{"type":"object","title":"TrancheSettings","description":"The tranche settings, indicates the settings regarding tranches in case the product is configured to support tranches.","properties":{"maxNumberOfTranches":{"type":"integer","title":"maxNumberOfTranches","description":"The number of tranches supported by the loan product"}},"additionalProperties":false},"InternalControlsaf30":{"type":"object","title":"InternalControls","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","title":"dormancyPeriodDays","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"fourEyesPrinciple":{"title":"fourEyesPrinciple","$ref":"#/$defs/FourEyesPrincipleaf30"},"lockSettings":{"title":"lockSettings","$ref":"#/$defs/LockSettingsaf30"}},"additionalProperties":false},"FourEyesPrincipleaf30":{"type":"object","title":"FourEyesPrinciple","description":"Settings for Four Eyes Principle","properties":{"activeForLoanApproval":{"type":"boolean","title":"activeForLoanApproval","description":"Requires separate users to create and approve loan accounts"}},"additionalProperties":false},"LockSettingsaf30":{"type":"object","title":"LockSettings","description":"Settings applied when transitioning accounts to Locked state","properties":{"cappingPercentage":{"type":"number","title":"cappingPercentage","description":"Specifies the percentage of principal that cannot be exceeded by the sum of interest, fees and penalty balances."},"lockPeriodDays":{"type":"integer","title":"lockPeriodDays","description":"Specifies the number of days for in which the account will be locked if it stays in arrears."},"cappingConstraintType":{"title":"cappingConstraintType","description":"Specifies constraint types for capping charges.","enum":["SOFT_CAP","HARD_CAP"]},"cappingMethod":{"title":"cappingMethod","description":"Specifies how principal will be used when calculating capping charges.","enum":["OUTSTANDING_PRINCIPAL_PERCENTAGE","ORIGINAL_PRINCIPAL_PERCENTAGE"]}},"additionalProperties":false},"FundingSettingsaf30":{"type":"object","title":"FundingSettings","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"organizationInterestCommission":{"title":"organizationInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"lockFundsAtApproval":{"type":"boolean","title":"lockFundsAtApproval","description":"Shows whether investor funds are locked or not at the loan account's approval."},"funderInterestCommission":{"title":"funderInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"requiredFunds":{"type":"number","title":"requiredFunds","description":"The required investor funds percentage, for opening an account with external funding. If null, the investor funds are not enabled."},"funderInterestCommissionAllocationType":{"title":"funderInterestCommissionAllocationType","description":"Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).","enum":["PERCENTAGE_OF_LOAN_FUNDING","FIXED_INTEREST_COMMISSIONS"]},"enabled":{"type":"boolean","title":"enabled","description":"Indicates whether the product has the investor funds enabled or not."}},"additionalProperties":false}}};const schema12 = {"type":"object","title":"LoanProduct","description":"The response representation of a LoanProduct.","properties":{"notes":{"type":"string","title":"notes","description":"Some notes/a description about the loan product"},"availabilitySettings":{"title":"availabilitySettings","$ref":"#/$defs/ProductAvailabilitySettingsaf30"},"paymentSettings":{"title":"paymentSettings","$ref":"#/$defs/PaymentSettingsaf30"},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/TaxSettingsaf30"},"redrawSettings":{"title":"redrawSettings","$ref":"#/$defs/ProductRedrawSettingsaf30"},"type":{"title":"type","description":"Indicates the type of loan product.","enum":["FIXED_TERM_LOAN","DYNAMIC_TERM_LOAN","INTEREST_FREE_LOAN","TRANCHED_LOAN","REVOLVING_CREDIT"]},"arrearsSettings":{"title":"arrearsSettings","$ref":"#/$defs/ProductArrearsSettingsaf30"},"newAccountSettings":{"title":"newAccountSettings","$ref":"#/$defs/NewAccountSettingsaf30"},"interestSettings":{"title":"interestSettings","$ref":"#/$defs/ProductInterestSettingsaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the loan product, auto generated, unique"},"currency":{"title":"currency","$ref":"#/$defs/Currencyaf30"},"id":{"type":"string","title":"id","description":"The id of the loan product, can be generated and customized, unique"},"state":{"title":"state","description":"Indicates the current state of the product","enum":["ACTIVE","INACTIVE"]},"penaltySettings":{"title":"penaltySettings","$ref":"#/$defs/ProductPenaltySettingsaf30"},"adjustInterestForFirstInstallment":{"type":"boolean","title":"adjustInterestForFirstInstallment","description":"Adjust the interest for the first repayment when the first repayment period is different than the repayment frequency"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date the loan product was updated","format":"date-time"},"feesSettings":{"title":"feesSettings","$ref":"#/$defs/FeesSettingsaf30"},"accountLinkSettings":{"title":"accountLinkSettings","$ref":"#/$defs/AccountLinkSettingsaf30"},"securitySettings":{"title":"securitySettings","$ref":"#/$defs/SecuritySettingsaf30"},"templates":{"type":"array","title":"templates","description":"Template documents of the product.","items":{"description":"Template documents of the product.","$ref":"#/$defs/DocumentTemplateaf30"}},"gracePeriodSettings":{"title":"gracePeriodSettings","$ref":"#/$defs/GracePeriodSettingsaf30"},"offsetSettings":{"title":"offsetSettings","$ref":"#/$defs/OffsetSettingsaf30"},"creationDate":{"type":"string","title":"creationDate","description":"The date this loan product was created","format":"date-time"},"creditArrangementSettings":{"title":"creditArrangementSettings","$ref":"#/$defs/CreditArrangementSettingsaf30"},"allowCustomRepaymentAllocation":{"type":"boolean","title":"allowCustomRepaymentAllocation","description":"Whether a payment could be customly allocated on the account, ignoring the default repayment allocation order"},"scheduleSettings":{"title":"scheduleSettings","$ref":"#/$defs/LoanProductScheduleSettingsaf30"},"accountingSettings":{"title":"accountingSettings","$ref":"#/$defs/AccountingSettingsaf30"},"name":{"type":"string","title":"name","description":"The name of the loan product"},"loanAmountSettings":{"title":"loanAmountSettings","$ref":"#/$defs/LoanAmountSettingsaf30"},"category":{"title":"category","description":"Indicates the category the loan product belongs to.","enum":["PERSONAL_LENDING","PURCHASE_FINANCING","RETAIL_MORTGAGES","SME_LENDING","COMMERCIAL","UNCATEGORIZED"]},"internalControls":{"title":"internalControls","$ref":"#/$defs/InternalControlsaf30"},"fundingSettings":{"title":"fundingSettings","$ref":"#/$defs/FundingSettingsaf30"}},"required":["type","id","creditArrangementSettings","name"],"additionalProperties":false};const schema20 = {"type":"object","title":"TaxSettings","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"taxSourceKey":{"type":"string","title":"taxSourceKey","description":"The tax source from where the loan account taxes will be updated."},"taxesOnInterestEnabled":{"type":"boolean","title":"taxesOnInterestEnabled","description":"Shows whether taxes on interest are enabled for this product or not."},"taxesOnPenaltyEnabled":{"type":"boolean","title":"taxesOnPenaltyEnabled","description":"Shows whether taxes on penalties are enabled for this product or not."},"taxCalculationMethod":{"title":"taxCalculationMethod","description":"Shows whether the tax is added on top of the target amount or not.","enum":["INCLUSIVE","EXCLUSIVE"]},"taxesOnFeesEnabled":{"type":"boolean","title":"taxesOnFeesEnabled","description":"Shows whether taxes on fees are enabled for this product or not."}},"additionalProperties":false};const schema21 = {"type":"object","title":"ProductRedrawSettings","description":"The redraw settings for the product.","properties":{"allowRedraw":{"type":"boolean","title":"allowRedraw","description":"Indicates whether the product support redraw (prepayments which are stored at loan account level as a Redrawable balance)"}},"required":["allowRedraw"],"additionalProperties":false};const schema25 = {"type":"object","title":"NewAccountSettings","description":"The new account settings, defines the settings and constraints used by new loan account created based on this product.","properties":{"idGeneratorType":{"title":"idGeneratorType","description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"accountInitialState":{"title":"accountInitialState","description":"The initial state of the account when is created.","enum":["PARTIAL_APPLICATION","PENDING_APPROVAL","APPROVED","ACTIVE","ACTIVE_IN_ARREARS","CLOSED"]},"idPattern":{"type":"string","title":"idPattern","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["idGeneratorType","accountInitialState","idPattern"],"additionalProperties":false};const schema32 = {"type":"object","title":"Currency","description":"Represents a currency eg. USD, EUR.","properties":{"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."},"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTC","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]}},"additionalProperties":false};const schema40 = {"type":"object","title":"AccountLinkSettings","description":"Defines the settings for account linking.","properties":{"linkedAccountOptions":{"type":"array","title":"linkedAccountOptions","description":"A set of linked account options.","items":{"enum":["AUTO_LINK_ACCOUNTS","AUTO_CREATE_LINKED_ACCOUNTS"]},"uniqueItems":true},"settlementMethod":{"title":"settlementMethod","description":"Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.","enum":["FULL_DUE_AMOUNTS","PARTIAL_DUE_AMOUNTS","NO_AUTOMATED_TRANSFERS"]},"enabled":{"type":"boolean","title":"enabled","description":"Shows whether the loan accounts created using this product can be linked to a savings account."},"linkableDepositProductKey":{"type":"string","title":"linkableDepositProductKey","description":"Loan accounts created for this product can only be linked the the savings accounts that use the savings product with this key. If null, the loan accounts for this product can be linked to any savings account."}},"required":["enabled"],"additionalProperties":false};const schema41 = {"type":"object","title":"SecuritySettings","description":"The settings and constraints for securities.","properties":{"isCollateralEnabled":{"type":"boolean","title":"isCollateralEnabled","description":"Shows whether collateral (assets or other goods) are accepted in order to reach required securities percentage from loan amount, as defined in this product."},"isGuarantorsEnabled":{"type":"boolean","title":"isGuarantorsEnabled","description":"Shows whether guarantors (other clients) are accepted in order to reach the required securities percentage from loan amount, as defined in this product."},"requiredGuaranties":{"type":"number","title":"requiredGuaranties","description":"The securities percentage from loan amount that is needed in order for this account to be approved. Null if the securities are not required."}},"additionalProperties":false};const schema42 = {"type":"object","title":"DocumentTemplate","description":"Template documents of the product.","properties":{"name":{"type":"string","title":"name","description":"The name the document"},"encodedKey":{"type":"string","title":"encodedKey","description":"The document encodedKey"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the document","format":"date-time"},"type":{"title":"type","description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the document","format":"date-time"}},"additionalProperties":false};const schema45 = {"type":"object","title":"OffsetSettings","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","title":"allowOffset","description":"Indicates whether the product supports offset"}},"additionalProperties":false};const schema46 = {"type":"object","title":"CreditArrangementSettings","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"title":"creditArrangementRequirement","description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":false};const func2 = Object.prototype.hasOwnProperty;const func0 = require("ajv/dist/runtime/equal").default;const schema13 = {"type":"object","title":"ProductAvailabilitySettings","description":"Holds information about product availability.","properties":{"branchSettings":{"title":"branchSettings","$ref":"#/$defs/BranchSettingsaf30"},"availableFor":{"type":"array","title":"availableFor","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS","SOLIDARITY_GROUPS"]},"uniqueItems":true}},"additionalProperties":false};const schema14 = {"type":"object","title":"BranchSettings","description":"Holds information about branch availability for the product.","properties":{"forAllBranches":{"type":"boolean","title":"forAllBranches","description":"Indicates if this product should be available for all branches"},"availableProductBranches":{"type":"array","title":"availableProductBranches","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}}},"additionalProperties":false};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "branchSettings") || (key0 === "availableFor"))){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.branchSettings !== undefined){let data0 = data.branchSettings;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((key1 === "forAllBranches") || (key1 === "availableProductBranches"))){validate12.errors = [{instancePath:instancePath+"/branchSettings",schemaPath:"#/$defs/BranchSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.forAllBranches !== undefined){const _errs6 = errors;if(typeof data0.forAllBranches !== "boolean"){validate12.errors = [{instancePath:instancePath+"/branchSettings/forAllBranches",schemaPath:"#/$defs/BranchSettingsaf30/properties/forAllBranches/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.availableProductBranches !== undefined){let data2 = data0.availableProductBranches;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data2)){var valid3 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs10 = errors;if(typeof data2[i0] !== "string"){validate12.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches/" + i0,schemaPath:"#/$defs/BranchSettingsaf30/properties/availableProductBranches/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;if(!valid3){break;}}}else {validate12.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches",schemaPath:"#/$defs/BranchSettingsaf30/properties/availableProductBranches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}}else {validate12.errors = [{instancePath:instancePath+"/branchSettings",schemaPath:"#/$defs/BranchSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.availableFor !== undefined){let data4 = data.availableFor;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data4)){var valid4 = true;const len1 = data4.length;for(let i1=0; i1<len1; i1++){let data5 = data4[i1];const _errs14 = errors;if(!(((data5 === "INDIVIDUALS") || (data5 === "PURE_GROUPS")) || (data5 === "SOLIDARITY_GROUPS"))){validate12.errors = [{instancePath:instancePath+"/availableFor/" + i1,schemaPath:"#/properties/availableFor/items/enum",keyword:"enum",params:{allowedValues: schema13.properties.availableFor.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs14 === errors;if(!valid4){break;}}if(valid4){let i2 = data4.length;let j0;if(i2 > 1){outer0:for(;i2--;){for(j0 = i2; j0--;){if(func0(data4[i2], data4[j0])){validate12.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/uniqueItems",keyword:"uniqueItems",params:{i: i2, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i2+" are identical)"}];return false;break outer0;}}}}}}else {validate12.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema15 = {"type":"object","title":"PaymentSettings","description":"Defines the payment settings for the loan product and for loans crated based on this product.","properties":{"prepaymentSettings":{"title":"prepaymentSettings","$ref":"#/$defs/ProductPrepaymentSettingsaf30"},"principalPaymentSettings":{"title":"principalPaymentSettings","$ref":"#/$defs/PrincipalPaymentProductSettingsaf30"},"paymentMethod":{"title":"paymentMethod","description":"The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)","enum":["HORIZONTAL","VERTICAL"]},"latePaymentsRecalculationMethod":{"title":"latePaymentsRecalculationMethod","description":"Recalculate the schedule when late payments are posted on dynamic Equal Installments loans.","enum":["OVERDUE_INSTALLMENTS_INCREASE","LAST_INSTALLMENT_INCREASE"]},"repaymentAllocationOrder":{"type":"array","title":"repaymentAllocationOrder","description":"A list of basic repayment allocation elements such as the principal, interest & fees.","items":{"enum":["PRINCIPAL","INTEREST","FEE","PENALTY"]}},"amortizationMethod":{"title":"amortizationMethod","description":"Payments Method used by loan accounts for repayments schedule generation.","enum":["STANDARD_PAYMENTS","BALLOON_PAYMENTS","OPTIMIZED_PAYMENTS","PAYMENT_PLAN"]}},"required":["paymentMethod","latePaymentsRecalculationMethod","repaymentAllocationOrder"],"additionalProperties":false};const schema16 = {"type":"object","title":"ProductPrepaymentSettings","description":"Defines the prepayment settings for the product","properties":{"futurePaymentsAcceptance":{"title":"futurePaymentsAcceptance","description":"Shows whether the future payments are allowed or not for this product (repayment transactions with entry date set in the future)","enum":["NO_FUTURE_PAYMENTS","ACCEPT_FUTURE_PAYMENTS","ACCEPT_OVERPAYMENTS"]},"applyInterestOnPrepaymentMethod":{"title":"applyInterestOnPrepaymentMethod","description":"Whether the interest on prepayment is applied manual or automatic.","enum":["AUTOMATIC","MANUAL"]},"prepaymentAcceptance":{"title":"prepaymentAcceptance","description":"Shows whether the pre-payments are allowed or not for this product.","enum":["ACCEPT_PREPAYMENTS","NO_PREPAYMENTS"]},"elementsRecalculationMethod":{"title":"elementsRecalculationMethod","description":"The elements recalculation method, indicates how the declining balance with equal installments repayments are recalculated","enum":["PRINCIPAL_EXPECTED_FIXED","TOTAL_EXPECTED_FIXED"]},"principalPaidInstallmentStatus":{"title":"principalPaidInstallmentStatus","description":"Installment status for the case when principal is paid off (copied from loan product)","enum":["PARTIALLY_PAID","PAID","ORIGINAL_TOTAL_EXPECTED_PAID"]},"prepaymentRecalculationMethod":{"title":"prepaymentRecalculationMethod","description":"Prepayment recalculation method copied from the loan product on which this account is based","enum":["NO_RECALCULATION","RESCHEDULE_REMAINING_REPAYMENTS","RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS","RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT","RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT","REDUCE_AMOUNT_PER_INSTALLMENT","REDUCE_NUMBER_OF_INSTALLMENTS","REDUCE_NUMBER_OF_INSTALLMENTS_NEW"]}},"required":["futurePaymentsAcceptance"],"additionalProperties":false};const schema17 = {"type":"object","title":"PrincipalPaymentProductSettings","description":"Defines the principal payment settings constraints for the loans that will be created based on this product.","properties":{"defaultPrincipalRepaymentInterval":{"type":"integer","title":"defaultPrincipalRepaymentInterval","description":"How many repayments the principal has to be paid"},"includeInterestInFloorAmount":{"type":"boolean","title":"includeInterestInFloorAmount","description":"If true, the interest will be included along with the principal in the repayment floor amount, for a revolving credit account"},"amount":{"title":"amount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"totalDuePayment":{"title":"totalDuePayment","description":"The method of total due payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]},"principalFloorValue":{"type":"number","title":"principalFloorValue","description":"The minimum principal due amount a repayment made with this settings can have"},"principalPaymentMethod":{"title":"principalPaymentMethod","description":"The method of principal payment for revolving credit","enum":["FLAT","OUTSTANDING_PRINCIPAL_PERCENTAGE","PRINCIPAL_PERCENTAGE_LAST_DISB","TOTAL_BALANCE_PERCENTAGE","TOTAL_BALANCE_FLAT","TOTAL_PRINCIPAL_PERCENTAGE"]},"percentage":{"title":"percentage","$ref":"#/$defs/DecimalConstraintsaf30"},"includeFeesInFloorAmount":{"type":"boolean","title":"includeFeesInFloorAmount","description":"If true, the fees will be included along with the principal in the repayment floor amount, for a revolving credit account"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the settings, auto generated, unique"},"totalDueAmountFloor":{"type":"number","title":"totalDueAmountFloor","description":"The minimum total due amount a repayment made with this settings can have"},"principalCeilingValue":{"type":"number","title":"principalCeilingValue","description":"The maximum principal due amount a repayment made with this settings can have"}},"additionalProperties":false};const schema18 = {"type":"object","title":"AmountDecimalConstraints","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":false};const schema19 = {"type":"object","title":"DecimalConstraints","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the decimal constraint, auto generated, unique"},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":false};function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema17.properties, key0))){validate15.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.defaultPrincipalRepaymentInterval !== undefined){let data0 = data.defaultPrincipalRepaymentInterval;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate15.errors = [{instancePath:instancePath+"/defaultPrincipalRepaymentInterval",schemaPath:"#/properties/defaultPrincipalRepaymentInterval/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.includeInterestInFloorAmount !== undefined){const _errs4 = errors;if(typeof data.includeInterestInFloorAmount !== "boolean"){validate15.errors = [{instancePath:instancePath+"/includeInterestInFloorAmount",schemaPath:"#/properties/includeInterestInFloorAmount/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data2 = data.amount;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs9 = errors;for(const key1 in data2){if(!((((key1 === "minValue") || (key1 === "encodedKey")) || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate15.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data2.minValue !== undefined){let data3 = data2.minValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate15.errors = [{instancePath:instancePath+"/amount/minValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.encodedKey !== undefined){const _errs12 = errors;if(typeof data2.encodedKey !== "string"){validate15.errors = [{instancePath:instancePath+"/amount/encodedKey",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.maxValue !== undefined){let data5 = data2.maxValue;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate15.errors = [{instancePath:instancePath+"/amount/maxValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data2.defaultValue !== undefined){let data6 = data2.defaultValue;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate15.errors = [{instancePath:instancePath+"/amount/defaultValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}else {validate15.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.totalDuePayment !== undefined){let data7 = data.totalDuePayment;const _errs18 = errors;if(!((((((data7 === "FLAT") || (data7 === "OUTSTANDING_PRINCIPAL_PERCENTAGE")) || (data7 === "PRINCIPAL_PERCENTAGE_LAST_DISB")) || (data7 === "TOTAL_BALANCE_PERCENTAGE")) || (data7 === "TOTAL_BALANCE_FLAT")) || (data7 === "TOTAL_PRINCIPAL_PERCENTAGE"))){validate15.errors = [{instancePath:instancePath+"/totalDuePayment",schemaPath:"#/properties/totalDuePayment/enum",keyword:"enum",params:{allowedValues: schema17.properties.totalDuePayment.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.principalFloorValue !== undefined){let data8 = data.principalFloorValue;const _errs19 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate15.errors = [{instancePath:instancePath+"/principalFloorValue",schemaPath:"#/properties/principalFloorValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentMethod !== undefined){let data9 = data.principalPaymentMethod;const _errs21 = errors;if(!((((((data9 === "FLAT") || (data9 === "OUTSTANDING_PRINCIPAL_PERCENTAGE")) || (data9 === "PRINCIPAL_PERCENTAGE_LAST_DISB")) || (data9 === "TOTAL_BALANCE_PERCENTAGE")) || (data9 === "TOTAL_BALANCE_FLAT")) || (data9 === "TOTAL_PRINCIPAL_PERCENTAGE"))){validate15.errors = [{instancePath:instancePath+"/principalPaymentMethod",schemaPath:"#/properties/principalPaymentMethod/enum",keyword:"enum",params:{allowedValues: schema17.properties.principalPaymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.percentage !== undefined){let data10 = data.percentage;const _errs22 = errors;const _errs23 = errors;if(errors === _errs23){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){const _errs25 = errors;for(const key2 in data10){if(!((((key2 === "minValue") || (key2 === "encodedKey")) || (key2 === "maxValue")) || (key2 === "defaultValue"))){validate15.errors = [{instancePath:instancePath+"/percentage",schemaPath:"#/$defs/DecimalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs25 === errors){if(data10.minValue !== undefined){let data11 = data10.minValue;const _errs26 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate15.errors = [{instancePath:instancePath+"/percentage/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs26 === errors;}else {var valid4 = true;}if(valid4){if(data10.encodedKey !== undefined){const _errs28 = errors;if(typeof data10.encodedKey !== "string"){validate15.errors = [{instancePath:instancePath+"/percentage/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs28 === errors;}else {var valid4 = true;}if(valid4){if(data10.maxValue !== undefined){let data13 = data10.maxValue;const _errs30 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate15.errors = [{instancePath:instancePath+"/percentage/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs30 === errors;}else {var valid4 = true;}if(valid4){if(data10.defaultValue !== undefined){let data14 = data10.defaultValue;const _errs32 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate15.errors = [{instancePath:instancePath+"/percentage/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs32 === errors;}else {var valid4 = true;}}}}}}else {validate15.errors = [{instancePath:instancePath+"/percentage",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.includeFeesInFloorAmount !== undefined){const _errs34 = errors;if(typeof data.includeFeesInFloorAmount !== "boolean"){validate15.errors = [{instancePath:instancePath+"/includeFeesInFloorAmount",schemaPath:"#/properties/includeFeesInFloorAmount/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs36 = errors;if(typeof data.encodedKey !== "string"){validate15.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.totalDueAmountFloor !== undefined){let data17 = data.totalDueAmountFloor;const _errs38 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate15.errors = [{instancePath:instancePath+"/totalDueAmountFloor",schemaPath:"#/properties/totalDueAmountFloor/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.principalCeilingValue !== undefined){let data18 = data.principalCeilingValue;const _errs40 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){validate15.errors = [{instancePath:instancePath+"/principalCeilingValue",schemaPath:"#/properties/principalCeilingValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate15.errors = vErrors;return errors === 0;}function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.paymentMethod === undefined) && (missing0 = "paymentMethod")) || ((data.latePaymentsRecalculationMethod === undefined) && (missing0 = "latePaymentsRecalculationMethod"))) || ((data.repaymentAllocationOrder === undefined) && (missing0 = "repaymentAllocationOrder"))){validate14.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "prepaymentSettings") || (key0 === "principalPaymentSettings")) || (key0 === "paymentMethod")) || (key0 === "latePaymentsRecalculationMethod")) || (key0 === "repaymentAllocationOrder")) || (key0 === "amortizationMethod"))){validate14.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.prepaymentSettings !== undefined){let data0 = data.prepaymentSettings;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing1;if((data0.futurePaymentsAcceptance === undefined) && (missing1 = "futurePaymentsAcceptance")){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs5 = errors;for(const key1 in data0){if(!((((((key1 === "futurePaymentsAcceptance") || (key1 === "applyInterestOnPrepaymentMethod")) || (key1 === "prepaymentAcceptance")) || (key1 === "elementsRecalculationMethod")) || (key1 === "principalPaidInstallmentStatus")) || (key1 === "prepaymentRecalculationMethod"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.futurePaymentsAcceptance !== undefined){let data1 = data0.futurePaymentsAcceptance;const _errs6 = errors;if(!(((data1 === "NO_FUTURE_PAYMENTS") || (data1 === "ACCEPT_FUTURE_PAYMENTS")) || (data1 === "ACCEPT_OVERPAYMENTS"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings/futurePaymentsAcceptance",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/futurePaymentsAcceptance/enum",keyword:"enum",params:{allowedValues: schema16.properties.futurePaymentsAcceptance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.applyInterestOnPrepaymentMethod !== undefined){let data2 = data0.applyInterestOnPrepaymentMethod;const _errs7 = errors;if(!((data2 === "AUTOMATIC") || (data2 === "MANUAL"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings/applyInterestOnPrepaymentMethod",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/applyInterestOnPrepaymentMethod/enum",keyword:"enum",params:{allowedValues: schema16.properties.applyInterestOnPrepaymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data0.prepaymentAcceptance !== undefined){let data3 = data0.prepaymentAcceptance;const _errs8 = errors;if(!((data3 === "ACCEPT_PREPAYMENTS") || (data3 === "NO_PREPAYMENTS"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings/prepaymentAcceptance",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/prepaymentAcceptance/enum",keyword:"enum",params:{allowedValues: schema16.properties.prepaymentAcceptance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.elementsRecalculationMethod !== undefined){let data4 = data0.elementsRecalculationMethod;const _errs9 = errors;if(!((data4 === "PRINCIPAL_EXPECTED_FIXED") || (data4 === "TOTAL_EXPECTED_FIXED"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings/elementsRecalculationMethod",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/elementsRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema16.properties.elementsRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data0.principalPaidInstallmentStatus !== undefined){let data5 = data0.principalPaidInstallmentStatus;const _errs10 = errors;if(!(((data5 === "PARTIALLY_PAID") || (data5 === "PAID")) || (data5 === "ORIGINAL_TOTAL_EXPECTED_PAID"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings/principalPaidInstallmentStatus",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/principalPaidInstallmentStatus/enum",keyword:"enum",params:{allowedValues: schema16.properties.principalPaidInstallmentStatus.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.prepaymentRecalculationMethod !== undefined){let data6 = data0.prepaymentRecalculationMethod;const _errs11 = errors;if(!((((((((data6 === "NO_RECALCULATION") || (data6 === "RESCHEDULE_REMAINING_REPAYMENTS")) || (data6 === "RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS")) || (data6 === "RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT")) || (data6 === "RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT")) || (data6 === "REDUCE_AMOUNT_PER_INSTALLMENT")) || (data6 === "REDUCE_NUMBER_OF_INSTALLMENTS")) || (data6 === "REDUCE_NUMBER_OF_INSTALLMENTS_NEW"))){validate14.errors = [{instancePath:instancePath+"/prepaymentSettings/prepaymentRecalculationMethod",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/properties/prepaymentRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema16.properties.prepaymentRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}}}}}}}}}else {validate14.errors = [{instancePath:instancePath+"/prepaymentSettings",schemaPath:"#/$defs/ProductPrepaymentSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.principalPaymentSettings !== undefined){const _errs12 = errors;if(!(validate15(data.principalPaymentSettings, {instancePath:instancePath+"/principalPaymentSettings",parentData:data,parentDataProperty:"principalPaymentSettings",rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentMethod !== undefined){let data8 = data.paymentMethod;const _errs13 = errors;if(!((data8 === "HORIZONTAL") || (data8 === "VERTICAL"))){validate14.errors = [{instancePath:instancePath+"/paymentMethod",schemaPath:"#/properties/paymentMethod/enum",keyword:"enum",params:{allowedValues: schema15.properties.paymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.latePaymentsRecalculationMethod !== undefined){let data9 = data.latePaymentsRecalculationMethod;const _errs14 = errors;if(!((data9 === "OVERDUE_INSTALLMENTS_INCREASE") || (data9 === "LAST_INSTALLMENT_INCREASE"))){validate14.errors = [{instancePath:instancePath+"/latePaymentsRecalculationMethod",schemaPath:"#/properties/latePaymentsRecalculationMethod/enum",keyword:"enum",params:{allowedValues: schema15.properties.latePaymentsRecalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentAllocationOrder !== undefined){let data10 = data.repaymentAllocationOrder;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data10)){var valid3 = true;const len0 = data10.length;for(let i0=0; i0<len0; i0++){let data11 = data10[i0];const _errs17 = errors;if(!((((data11 === "PRINCIPAL") || (data11 === "INTEREST")) || (data11 === "FEE")) || (data11 === "PENALTY"))){validate14.errors = [{instancePath:instancePath+"/repaymentAllocationOrder/" + i0,schemaPath:"#/properties/repaymentAllocationOrder/items/enum",keyword:"enum",params:{allowedValues: schema15.properties.repaymentAllocationOrder.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs17 === errors;if(!valid3){break;}}}else {validate14.errors = [{instancePath:instancePath+"/repaymentAllocationOrder",schemaPath:"#/properties/repaymentAllocationOrder/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.amortizationMethod !== undefined){let data12 = data.amortizationMethod;const _errs18 = errors;if(!((((data12 === "STANDARD_PAYMENTS") || (data12 === "BALLOON_PAYMENTS")) || (data12 === "OPTIMIZED_PAYMENTS")) || (data12 === "PAYMENT_PLAN"))){validate14.errors = [{instancePath:instancePath+"/amortizationMethod",schemaPath:"#/properties/amortizationMethod/enum",keyword:"enum",params:{allowedValues: schema15.properties.amortizationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}const schema22 = {"type":"object","title":"ProductArrearsSettings","description":"The product arrears settings, shows whether the non working days are taken in consideration or not when applying penalties/late fees or when setting an account into arrears","properties":{"monthlyToleranceDay":{"type":"integer","title":"monthlyToleranceDay","description":"Defines the tolerance monthly date"},"toleranceFloorAmount":{"type":"number","title":"toleranceFloorAmount","description":"The tolerance floor amount."},"nonWorkingDaysMethod":{"title":"nonWorkingDaysMethod","description":"Shows whether the non working days are taken in consideration or not when applying penaltees/late fees or when setting an account into arrears","enum":["INCLUDED","EXCLUDED"]},"tolerancePercentageOfOutstandingPrincipal":{"title":"tolerancePercentageOfOutstandingPrincipal","$ref":"#/$defs/DecimalIntervalaf30"},"tolerancePeriod":{"title":"tolerancePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the arrears base settings, auto generated, unique."},"toleranceCalculationMethod":{"title":"toleranceCalculationMethod","description":"Defines the tolerance calculation method","enum":["ARREARS_TOLERANCE_PERIOD","MONTHLY_ARREARS_TOLERANCE_DAY"]},"dateCalculationMethod":{"title":"dateCalculationMethod","description":"The arrears date calculation method.","enum":["ACCOUNT_FIRST_WENT_TO_ARREARS","LAST_LATE_REPAYMENT","ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"]}},"additionalProperties":false};const schema23 = {"type":"object","title":"DecimalInterval","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":false};const schema24 = {"type":"object","title":"IntegerIntervalConstraints","description":"Decimal integer, like min/max/default.","properties":{"minValue":{"type":"integer","title":"minValue","description":"The minimum value."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the integer constraint, auto generated, unique"},"defaultValue":{"type":"integer","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"integer","title":"maxValue","description":"The maximum value."}},"additionalProperties":false};function validate18(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((((((((key0 === "monthlyToleranceDay") || (key0 === "toleranceFloorAmount")) || (key0 === "nonWorkingDaysMethod")) || (key0 === "tolerancePercentageOfOutstandingPrincipal")) || (key0 === "tolerancePeriod")) || (key0 === "encodedKey")) || (key0 === "toleranceCalculationMethod")) || (key0 === "dateCalculationMethod"))){validate18.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.monthlyToleranceDay !== undefined){let data0 = data.monthlyToleranceDay;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate18.errors = [{instancePath:instancePath+"/monthlyToleranceDay",schemaPath:"#/properties/monthlyToleranceDay/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.toleranceFloorAmount !== undefined){let data1 = data.toleranceFloorAmount;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate18.errors = [{instancePath:instancePath+"/toleranceFloorAmount",schemaPath:"#/properties/toleranceFloorAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.nonWorkingDaysMethod !== undefined){let data2 = data.nonWorkingDaysMethod;const _errs6 = errors;if(!((data2 === "INCLUDED") || (data2 === "EXCLUDED"))){validate18.errors = [{instancePath:instancePath+"/nonWorkingDaysMethod",schemaPath:"#/properties/nonWorkingDaysMethod/enum",keyword:"enum",params:{allowedValues: schema22.properties.nonWorkingDaysMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.tolerancePercentageOfOutstandingPrincipal !== undefined){let data3 = data.tolerancePercentageOfOutstandingPrincipal;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){const _errs10 = errors;for(const key1 in data3){if(!(((key1 === "minValue") || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate18.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal",schemaPath:"#/$defs/DecimalIntervalaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs10 === errors){if(data3.minValue !== undefined){let data4 = data3.minValue;const _errs11 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate18.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data3.maxValue !== undefined){let data5 = data3.maxValue;const _errs13 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate18.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data3.defaultValue !== undefined){let data6 = data3.defaultValue;const _errs15 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate18.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}}}}}else {validate18.errors = [{instancePath:instancePath+"/tolerancePercentageOfOutstandingPrincipal",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.tolerancePeriod !== undefined){let data7 = data.tolerancePeriod;const _errs17 = errors;const _errs18 = errors;if(errors === _errs18){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){const _errs20 = errors;for(const key2 in data7){if(!((((key2 === "minValue") || (key2 === "encodedKey")) || (key2 === "defaultValue")) || (key2 === "maxValue"))){validate18.errors = [{instancePath:instancePath+"/tolerancePeriod",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs20 === errors){if(data7.minValue !== undefined){let data8 = data7.minValue;const _errs21 = errors;if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){validate18.errors = [{instancePath:instancePath+"/tolerancePeriod/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs21 === errors;}else {var valid4 = true;}if(valid4){if(data7.encodedKey !== undefined){const _errs23 = errors;if(typeof data7.encodedKey !== "string"){validate18.errors = [{instancePath:instancePath+"/tolerancePeriod/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs23 === errors;}else {var valid4 = true;}if(valid4){if(data7.defaultValue !== undefined){let data10 = data7.defaultValue;const _errs25 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate18.errors = [{instancePath:instancePath+"/tolerancePeriod/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs25 === errors;}else {var valid4 = true;}if(valid4){if(data7.maxValue !== undefined){let data11 = data7.maxValue;const _errs27 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate18.errors = [{instancePath:instancePath+"/tolerancePeriod/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs27 === errors;}else {var valid4 = true;}}}}}}else {validate18.errors = [{instancePath:instancePath+"/tolerancePeriod",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs29 = errors;if(typeof data.encodedKey !== "string"){validate18.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.toleranceCalculationMethod !== undefined){let data13 = data.toleranceCalculationMethod;const _errs31 = errors;if(!((data13 === "ARREARS_TOLERANCE_PERIOD") || (data13 === "MONTHLY_ARREARS_TOLERANCE_DAY"))){validate18.errors = [{instancePath:instancePath+"/toleranceCalculationMethod",schemaPath:"#/properties/toleranceCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema22.properties.toleranceCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.dateCalculationMethod !== undefined){let data14 = data.dateCalculationMethod;const _errs32 = errors;if(!(((data14 === "ACCOUNT_FIRST_WENT_TO_ARREARS") || (data14 === "LAST_LATE_REPAYMENT")) || (data14 === "ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"))){validate18.errors = [{instancePath:instancePath+"/dateCalculationMethod",schemaPath:"#/properties/dateCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema22.properties.dateCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate18.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate18.errors = vErrors;return errors === 0;}const schema26 = {"type":"object","title":"ProductInterestSettings","description":"The interest settings, defines constraints regarding interest that will be used on the loan account crated based on this product.","properties":{"interestCalculationMethod":{"title":"interestCalculationMethod","description":"The interest calculation method. Holds the type of interest calculation method.","enum":["FLAT","DECLINING_BALANCE","DECLINING_BALANCE_DISCOUNTED"]},"interestRateSettings":{"type":"array","title":"interestRateSettings","description":"Adjustable interest rates settings","items":{"description":"Adjustable interest rates settings","$ref":"#/$defs/ProductInterestRateSettingsaf30"}},"scheduleInterestDaysCountMethod":{"title":"scheduleInterestDaysCountMethod","description":"Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.","enum":["REPAYMENT_PERIODICITY","ACTUAL_DAYS_COUNT"]},"interestApplicationMethod":{"title":"interestApplicationMethod","description":"The interest application method. Represents the interest application method that determines whether the interest gets applied on the account's disbursement or on each repayment.","enum":["AFTER_DISBURSEMENT","REPAYMENT_DUE_DATE"]},"interestType":{"title":"interestType","description":"The possible values for how we compute and apply the interest","enum":["SIMPLE_INTEREST","CAPITALIZED_INTEREST","COMPOUNDING_INTEREST"]},"indexRateSettings":{"title":"indexRateSettings","$ref":"#/$defs/InterestProductSettingsaf30"},"interestBalanceCalculationMethod":{"title":"interestBalanceCalculationMethod","description":"The interest balance calculation method. Represents the option which determines the way the balance for the account's interest is computed.","enum":["ONLY_PRINCIPAL","PRINCIPAL_AND_INTEREST"]},"daysInYear":{"title":"daysInYear","description":"The days in year that should be used for loan calculations.","enum":["ACTUAL_365_FIXED","ACTUAL_364","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","BUS_252","E30_42_365"]},"accrueLateInterest":{"type":"boolean","title":"accrueLateInterest","description":"Whether late interest should be accrued, applied and paid"},"compoundingFrequency":{"title":"compoundingFrequency","description":"The frequency on which the accrued interest will be added to the principal for interest calculation. It is used only for InterestType.COMPOUNDING_INTEREST","const":"DAILY"}},"required":["interestCalculationMethod","scheduleInterestDaysCountMethod","daysInYear"],"additionalProperties":false};const schema27 = {"type":"object","title":"ProductInterestRateSettings","description":"Adjustable interest rates settings","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit. Valid only for index interest rate.","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or indexed(interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count. Valid only for index interest rate."},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Maximum value allowed for index based interest rate. Valid only for index interest rate."},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate settings, auto generated, unique"},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Minimum value allowed for index based interest rate. Valid only for index interest rate."}},"required":["interestRateSource"],"additionalProperties":false};function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.interestRateSource === undefined) && (missing0 = "interestRateSource")){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((((key0 === "interestRate") || (key0 === "interestRateReviewUnit")) || (key0 === "interestRateSource")) || (key0 === "interestRateReviewCount")) || (key0 === "indexSourceKey")) || (key0 === "interestRateCeilingValue")) || (key0 === "encodedKey")) || (key0 === "interestRateFloorValue"))){validate21.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.interestRate !== undefined){let data0 = data.interestRate;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!(((key1 === "minValue") || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate21.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate21.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data2 = data0.maxValue;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate21.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data3 = data0.defaultValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate21.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}}else {validate21.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data4 = data.interestRateReviewUnit;const _errs12 = errors;if(!(((data4 === "DAYS") || (data4 === "WEEKS")) || (data4 === "MONTHS"))){validate21.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema27.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data5 = data.interestRateSource;const _errs13 = errors;if(!((data5 === "FIXED_INTEREST_RATE") || (data5 === "INDEX_INTEREST_RATE"))){validate21.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema27.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data6 = data.interestRateReviewCount;const _errs14 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate21.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs16 = errors;if(typeof data.indexSourceKey !== "string"){validate21.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateCeilingValue !== undefined){let data8 = data.interestRateCeilingValue;const _errs18 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate21.errors = [{instancePath:instancePath+"/interestRateCeilingValue",schemaPath:"#/properties/interestRateCeilingValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs20 = errors;if(typeof data.encodedKey !== "string"){validate21.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateFloorValue !== undefined){let data10 = data.interestRateFloorValue;const _errs22 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate21.errors = [{instancePath:instancePath+"/interestRateFloorValue",schemaPath:"#/properties/interestRateFloorValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}const schema29 = {"type":"object","title":"InterestProductSettings","description":"The interest settings, defines constraints regarding interest that will be used on the loan account created based on this product.","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"allowNegativeInterestRate":{"type":"boolean","title":"allowNegativeInterestRate","description":"Indicator whether the loan product allows negative values for interest rate or interest spread"},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"accrueInterestAfterMaturity":{"type":"boolean","title":"accrueInterestAfterMaturity","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateCeilingValue":{"type":"number","title":"interestRateCeilingValue","description":"Interest spread + index interest rate can't be more than this amount (valid only for index interest rate products)."},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"description":"The list of interest rate tiers available for the current settings instance","$ref":"#/$defs/InterestRateTieraf30"}},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"interestRateFloorValue":{"type":"number","title":"interestRateFloorValue","description":"Interest spread + index interest rate can't be less than this amount (valid only for index interest rate products)."}},"additionalProperties":false};const schema31 = {"type":"object","title":"InterestRateTier","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"}},"required":["interestRate"],"additionalProperties":false};function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema29.properties, key0))){validate23.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.interestRate !== undefined){let data0 = data.interestRate;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!(((key1 === "minValue") || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate23.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate23.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data2 = data0.maxValue;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate23.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data3 = data0.defaultValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate23.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}}else {validate23.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data4 = data.interestRateReviewUnit;const _errs12 = errors;if(!(((data4 === "DAYS") || (data4 === "WEEKS")) || (data4 === "MONTHS"))){validate23.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema29.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.allowNegativeInterestRate !== undefined){const _errs13 = errors;if(typeof data.allowNegativeInterestRate !== "boolean"){validate23.errors = [{instancePath:instancePath+"/allowNegativeInterestRate",schemaPath:"#/properties/allowNegativeInterestRate/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data6 = data.interestRateSource;const _errs15 = errors;if(!((data6 === "FIXED_INTEREST_RATE") || (data6 === "INDEX_INTEREST_RATE"))){validate23.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema29.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequency !== undefined){let data7 = data.interestChargeFrequency;const _errs16 = errors;if(!((((((data7 === "ANNUALIZED") || (data7 === "EVERY_MONTH")) || (data7 === "EVERY_FOUR_WEEKS")) || (data7 === "EVERY_WEEK")) || (data7 === "EVERY_DAY")) || (data7 === "EVERY_X_DAYS"))){validate23.errors = [{instancePath:instancePath+"/interestChargeFrequency",schemaPath:"#/properties/interestChargeFrequency/enum",keyword:"enum",params:{allowedValues: schema29.properties.interestChargeFrequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.accrueInterestAfterMaturity !== undefined){const _errs17 = errors;if(typeof data.accrueInterestAfterMaturity !== "boolean"){validate23.errors = [{instancePath:instancePath+"/accrueInterestAfterMaturity",schemaPath:"#/properties/accrueInterestAfterMaturity/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTerms !== undefined){let data9 = data.interestRateTerms;const _errs19 = errors;if(!((((data9 === "FIXED") || (data9 === "TIERED")) || (data9 === "TIERED_PERIOD")) || (data9 === "TIERED_BAND"))){validate23.errors = [{instancePath:instancePath+"/interestRateTerms",schemaPath:"#/properties/interestRateTerms/enum",keyword:"enum",params:{allowedValues: schema29.properties.interestRateTerms.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequencyCount !== undefined){let data10 = data.interestChargeFrequencyCount;const _errs20 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate23.errors = [{instancePath:instancePath+"/interestChargeFrequencyCount",schemaPath:"#/properties/interestChargeFrequencyCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data11 = data.interestRateReviewCount;const _errs22 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate23.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs24 = errors;if(typeof data.indexSourceKey !== "string"){validate23.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateCeilingValue !== undefined){let data13 = data.interestRateCeilingValue;const _errs26 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate23.errors = [{instancePath:instancePath+"/interestRateCeilingValue",schemaPath:"#/properties/interestRateCeilingValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data14 = data.interestRateTiers;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data14)){var valid3 = true;const len0 = data14.length;for(let i0=0; i0<len0; i0++){let data15 = data14[i0];const _errs30 = errors;const _errs31 = errors;if(errors === _errs31){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){let missing0;if((data15.interestRate === undefined) && (missing0 = "interestRate")){validate23.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/InterestRateTieraf30/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs33 = errors;for(const key2 in data15){if(!(((key2 === "endingBalance") || (key2 === "interestRate")) || (key2 === "encodedKey"))){validate23.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/InterestRateTieraf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs33 === errors){if(data15.endingBalance !== undefined){let data16 = data15.endingBalance;const _errs34 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate23.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/InterestRateTieraf30/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid5 = _errs34 === errors;}else {var valid5 = true;}if(valid5){if(data15.interestRate !== undefined){let data17 = data15.interestRate;const _errs36 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate23.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/InterestRateTieraf30/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid5 = _errs36 === errors;}else {var valid5 = true;}if(valid5){if(data15.encodedKey !== undefined){const _errs38 = errors;if(typeof data15.encodedKey !== "string"){validate23.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/InterestRateTieraf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs38 === errors;}else {var valid5 = true;}}}}}}else {validate23.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/InterestRateTieraf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs30 === errors;if(!valid3){break;}}}else {validate23.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs40 = errors;if(typeof data.encodedKey !== "string"){validate23.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateFloorValue !== undefined){let data20 = data.interestRateFloorValue;const _errs42 = errors;if(!((typeof data20 == "number") && (isFinite(data20)))){validate23.errors = [{instancePath:instancePath+"/interestRateFloorValue",schemaPath:"#/properties/interestRateFloorValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.interestCalculationMethod === undefined) && (missing0 = "interestCalculationMethod")) || ((data.scheduleInterestDaysCountMethod === undefined) && (missing0 = "scheduleInterestDaysCountMethod"))) || ((data.daysInYear === undefined) && (missing0 = "daysInYear"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema26.properties, key0))){validate20.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.interestCalculationMethod !== undefined){let data0 = data.interestCalculationMethod;const _errs2 = errors;if(!(((data0 === "FLAT") || (data0 === "DECLINING_BALANCE")) || (data0 === "DECLINING_BALANCE_DISCOUNTED"))){validate20.errors = [{instancePath:instancePath+"/interestCalculationMethod",schemaPath:"#/properties/interestCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSettings !== undefined){let data1 = data.interestRateSettings;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate21(data1[i0], {instancePath:instancePath+"/interestRateSettings/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate20.errors = [{instancePath:instancePath+"/interestRateSettings",schemaPath:"#/properties/interestRateSettings/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.scheduleInterestDaysCountMethod !== undefined){let data3 = data.scheduleInterestDaysCountMethod;const _errs6 = errors;if(!((data3 === "REPAYMENT_PERIODICITY") || (data3 === "ACTUAL_DAYS_COUNT"))){validate20.errors = [{instancePath:instancePath+"/scheduleInterestDaysCountMethod",schemaPath:"#/properties/scheduleInterestDaysCountMethod/enum",keyword:"enum",params:{allowedValues: schema26.properties.scheduleInterestDaysCountMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.interestApplicationMethod !== undefined){let data4 = data.interestApplicationMethod;const _errs7 = errors;if(!((data4 === "AFTER_DISBURSEMENT") || (data4 === "REPAYMENT_DUE_DATE"))){validate20.errors = [{instancePath:instancePath+"/interestApplicationMethod",schemaPath:"#/properties/interestApplicationMethod/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestApplicationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.interestType !== undefined){let data5 = data.interestType;const _errs8 = errors;if(!(((data5 === "SIMPLE_INTEREST") || (data5 === "CAPITALIZED_INTEREST")) || (data5 === "COMPOUNDING_INTEREST"))){validate20.errors = [{instancePath:instancePath+"/interestType",schemaPath:"#/properties/interestType/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.indexRateSettings !== undefined){const _errs9 = errors;if(!(validate23(data.indexRateSettings, {instancePath:instancePath+"/indexRateSettings",parentData:data,parentDataProperty:"indexRateSettings",rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.interestBalanceCalculationMethod !== undefined){let data7 = data.interestBalanceCalculationMethod;const _errs10 = errors;if(!((data7 === "ONLY_PRINCIPAL") || (data7 === "PRINCIPAL_AND_INTEREST"))){validate20.errors = [{instancePath:instancePath+"/interestBalanceCalculationMethod",schemaPath:"#/properties/interestBalanceCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestBalanceCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.daysInYear !== undefined){let data8 = data.daysInYear;const _errs11 = errors;if(!(((((((data8 === "ACTUAL_365_FIXED") || (data8 === "ACTUAL_364")) || (data8 === "ACTUAL_360")) || (data8 === "ACTUAL_ACTUAL_ISDA")) || (data8 === "E30_360")) || (data8 === "BUS_252")) || (data8 === "E30_42_365"))){validate20.errors = [{instancePath:instancePath+"/daysInYear",schemaPath:"#/properties/daysInYear/enum",keyword:"enum",params:{allowedValues: schema26.properties.daysInYear.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.accrueLateInterest !== undefined){const _errs12 = errors;if(typeof data.accrueLateInterest !== "boolean"){validate20.errors = [{instancePath:instancePath+"/accrueLateInterest",schemaPath:"#/properties/accrueLateInterest/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.compoundingFrequency !== undefined){const _errs14 = errors;if("DAILY" !== data.compoundingFrequency){validate20.errors = [{instancePath:instancePath+"/compoundingFrequency",schemaPath:"#/properties/compoundingFrequency/const",keyword:"const",params:{allowedValue: "DAILY"},message:"must be equal to constant"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}const schema33 = {"type":"object","title":"ProductPenaltySettings","description":"Defines the penalty settings for the product that will be used by the loan accounts based on this product","properties":{"loanPenaltyGracePeriod":{"type":"integer","title":"loanPenaltyGracePeriod","description":"Number of days to wait before applying the loan penalty amounts"},"loanPenaltyCalculationMethod":{"title":"loanPenaltyCalculationMethod","description":"The penalty calculation method","enum":["NONE","OVERDUE_BALANCE","OVERDUE_BALANCE_AND_INTEREST","OUTSTANDING_PRINCIPAL"]},"penaltyRate":{"title":"penaltyRate","$ref":"#/$defs/DecimalConstraintsaf30"}},"required":["loanPenaltyCalculationMethod"],"additionalProperties":false};function validate26(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.loanPenaltyCalculationMethod === undefined) && (missing0 = "loanPenaltyCalculationMethod")){validate26.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((key0 === "loanPenaltyGracePeriod") || (key0 === "loanPenaltyCalculationMethod")) || (key0 === "penaltyRate"))){validate26.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.loanPenaltyGracePeriod !== undefined){let data0 = data.loanPenaltyGracePeriod;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate26.errors = [{instancePath:instancePath+"/loanPenaltyGracePeriod",schemaPath:"#/properties/loanPenaltyGracePeriod/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.loanPenaltyCalculationMethod !== undefined){let data1 = data.loanPenaltyCalculationMethod;const _errs4 = errors;if(!((((data1 === "NONE") || (data1 === "OVERDUE_BALANCE")) || (data1 === "OVERDUE_BALANCE_AND_INTEREST")) || (data1 === "OUTSTANDING_PRINCIPAL"))){validate26.errors = [{instancePath:instancePath+"/loanPenaltyCalculationMethod",schemaPath:"#/properties/loanPenaltyCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema33.properties.loanPenaltyCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.penaltyRate !== undefined){let data2 = data.penaltyRate;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs8 = errors;for(const key1 in data2){if(!((((key1 === "minValue") || (key1 === "encodedKey")) || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate26.errors = [{instancePath:instancePath+"/penaltyRate",schemaPath:"#/$defs/DecimalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs8 === errors){if(data2.minValue !== undefined){let data3 = data2.minValue;const _errs9 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate26.errors = [{instancePath:instancePath+"/penaltyRate/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data2.encodedKey !== undefined){const _errs11 = errors;if(typeof data2.encodedKey !== "string"){validate26.errors = [{instancePath:instancePath+"/penaltyRate/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data2.maxValue !== undefined){let data5 = data2.maxValue;const _errs13 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate26.errors = [{instancePath:instancePath+"/penaltyRate/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data2.defaultValue !== undefined){let data6 = data2.defaultValue;const _errs15 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate26.errors = [{instancePath:instancePath+"/penaltyRate/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}}}}}}else {validate26.errors = [{instancePath:instancePath+"/penaltyRate",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}}else {validate26.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate26.errors = vErrors;return errors === 0;}const schema35 = {"type":"object","title":"FeesSettings","description":"Defines fees settings for the product.","properties":{"fees":{"type":"array","title":"fees","description":"List of all fees that can be applied for accounts of this loan product.","items":{"description":"List of all fees that can be applied for accounts of this loan product.","$ref":"#/$defs/PredefinedFeeaf30"}},"allowArbitraryFees":{"type":"boolean","title":"allowArbitraryFees","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."}},"additionalProperties":false};const schema36 = {"type":"object","title":"PredefinedFee","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"amount":{"type":"number","title":"amount","description":"The amount of the fee"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"Shows the last modified date of the fee","format":"date-time"},"amountCalculationMethod":{"title":"amountCalculationMethod","description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","LOAN_AMOUNT_PERCENTAGE","REPAYMENT_PRINCIPAL_AMOUNT_PERCENTAGE","LOAN_AMOUNT_PERCENTAGE_NUMBER_OF_INSTALLMENTS","FLAT_NUMBER_OF_INSTALLMENTS"]},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/FeeTaxSettingsaf30"},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MANUAL_PLANNED","DISBURSEMENT","CAPITALIZED_DISBURSEMENT","UPFRONT_DISBURSEMENT","LATE_REPAYMENT","MONTHLY_FEE","PAYMENT_DUE","PAYMENT_DUE_APPLIED_ON_DUE_DATES","ARBITRARY"]},"creationDate":{"type":"string","title":"creationDate","description":"Shows the creation date of the fee","format":"date-time"},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","$ref":"#/$defs/GlAccountingRuleaf30"}},"name":{"type":"string","title":"name","description":"The name of the fee"},"feeApplication":{"title":"feeApplication","description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"amortizationSettings":{"title":"amortizationSettings","$ref":"#/$defs/PeriodIntervalSettingsaf30"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the predefined fee, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the fee"},"state":{"title":"state","description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"applyDateMethod":{"title":"applyDateMethod","description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]},"percentageAmount":{"type":"number","title":"percentageAmount","description":"The amount of the fee in percents applied to percentSource"}},"required":["trigger","feeApplication","state"],"additionalProperties":false};const schema37 = {"type":"object","title":"FeeTaxSettings","description":"Tax settings for a specific Predefined fee that overrides the tax settings of Loan Product","properties":{"taxableCalculationMethod":{"title":"taxableCalculationMethod","description":"Marks a specific fee as non-taxable (taxes are not calculated for it).Feature is in the Early Stage. To be enabled by request.","enum":["DEFAULT","NON_TAXABLE","CUSTOM_TAX"]}},"additionalProperties":false};const schema38 = {"type":"object","title":"GLAccountingRule","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the accounting rule, auto generated, unique."},"glAccountKey":{"type":"string","title":"glAccountKey","description":"The encoded key of the account that is mapped to the financialResource"},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The key of the transaction rule that uses this rule"},"financialResource":{"title":"financialResource","description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]}},"required":["glAccountKey","financialResource"],"additionalProperties":false};const schema39 = {"type":"object","title":"PeriodIntervalSettings","description":"The settings for defining period intervals.","properties":{"feeAmortizationUponRescheduleRefinanceOption":{"title":"feeAmortizationUponRescheduleRefinanceOption","description":"Flag for signaling if fee amortization should be continued or finished at account reschedule/refinance","enum":["END_AMORTIZATION_ON_THE_ORIGINAL_ACCOUNT","CONTINUE_AMORTIZATION_ON_THE_RESCHEDULED_REFINANCED_ACCOUNT"]},"intervalType":{"title":"intervalType","description":"Defines the options for an interval","enum":["PREDEFINED_INTERVALS","FULL_TERM"]},"periodCount":{"type":"integer","title":"periodCount","description":"Period count used in conjunction with periodUnit to determine the next date of the interval"},"intervalCount":{"type":"integer","title":"intervalCount","description":"Total number of intervals"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the period interval settings, auto generated, unique."},"amortizationProfile":{"title":"amortizationProfile","description":"Type of amortization profile used for fee","enum":["NONE","SUM_OF_YEARS_DIGITS","STRAIGHT_LINE","EFFECTIVE_INTEREST_RATE"]},"periodUnit":{"title":"periodUnit","description":"Amortization unit to determine the interval between amortizations","enum":["DAYS","WEEKS","MONTHS","YEARS"]},"frequency":{"title":"frequency","description":"Frequency settings of the fee amortization","enum":["ACCOUNT_INSTALLMENTS_DUE_DATES","ACCOUNT_INSTALLMENTS_DUE_DATES_DAILY_BOOKING","CUSTOM_INTERVAL"]}},"additionalProperties":false};function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.trigger === undefined) && (missing0 = "trigger")) || ((data.feeApplication === undefined) && (missing0 = "feeApplication"))) || ((data.state === undefined) && (missing0 = "state"))){validate29.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema36.properties, key0))){validate29.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.amount !== undefined){let data0 = data.amount;const _errs2 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate29.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs4 = errors;if(errors === _errs4){if(errors === _errs4){if(!(typeof data.lastModifiedDate === "string")){validate29.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationMethod !== undefined){let data2 = data.amountCalculationMethod;const _errs6 = errors;if(!(((((data2 === "FLAT") || (data2 === "LOAN_AMOUNT_PERCENTAGE")) || (data2 === "REPAYMENT_PRINCIPAL_AMOUNT_PERCENTAGE")) || (data2 === "LOAN_AMOUNT_PERCENTAGE_NUMBER_OF_INSTALLMENTS")) || (data2 === "FLAT_NUMBER_OF_INSTALLMENTS"))){validate29.errors = [{instancePath:instancePath+"/amountCalculationMethod",schemaPath:"#/properties/amountCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema36.properties.amountCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.taxSettings !== undefined){let data3 = data.taxSettings;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){const _errs10 = errors;for(const key1 in data3){if(!(key1 === "taxableCalculationMethod")){validate29.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/FeeTaxSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs10 === errors){if(data3.taxableCalculationMethod !== undefined){let data4 = data3.taxableCalculationMethod;if(!(((data4 === "DEFAULT") || (data4 === "NON_TAXABLE")) || (data4 === "CUSTOM_TAX"))){validate29.errors = [{instancePath:instancePath+"/taxSettings/taxableCalculationMethod",schemaPath:"#/$defs/FeeTaxSettingsaf30/properties/taxableCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema37.properties.taxableCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}}}}else {validate29.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/FeeTaxSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.trigger !== undefined){let data5 = data.trigger;const _errs12 = errors;if(!((((((((((data5 === "MANUAL") || (data5 === "MANUAL_PLANNED")) || (data5 === "DISBURSEMENT")) || (data5 === "CAPITALIZED_DISBURSEMENT")) || (data5 === "UPFRONT_DISBURSEMENT")) || (data5 === "LATE_REPAYMENT")) || (data5 === "MONTHLY_FEE")) || (data5 === "PAYMENT_DUE")) || (data5 === "PAYMENT_DUE_APPLIED_ON_DUE_DATES")) || (data5 === "ARBITRARY"))){validate29.errors = [{instancePath:instancePath+"/trigger",schemaPath:"#/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema36.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs13 = errors;if(errors === _errs13){if(errors === _errs13){if(!(typeof data.creationDate === "string")){validate29.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingRules !== undefined){let data7 = data.accountingRules;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data7)){var valid3 = true;const len0 = data7.length;for(let i0=0; i0<len0; i0++){let data8 = data7[i0];const _errs17 = errors;const _errs18 = errors;if(errors === _errs18){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing1;if(((data8.glAccountKey === undefined) && (missing1 = "glAccountKey")) || ((data8.financialResource === undefined) && (missing1 = "financialResource"))){validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GlAccountingRuleaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs20 = errors;for(const key2 in data8){if(!((((key2 === "encodedKey") || (key2 === "glAccountKey")) || (key2 === "transactionChannelKey")) || (key2 === "financialResource"))){validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GlAccountingRuleaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs20 === errors){if(data8.encodedKey !== undefined){const _errs21 = errors;if(typeof data8.encodedKey !== "string"){validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs21 === errors;}else {var valid5 = true;}if(valid5){if(data8.glAccountKey !== undefined){const _errs23 = errors;if(typeof data8.glAccountKey !== "string"){validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs23 === errors;}else {var valid5 = true;}if(valid5){if(data8.transactionChannelKey !== undefined){const _errs25 = errors;if(typeof data8.transactionChannelKey !== "string"){validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/transactionChannelKey",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs25 === errors;}else {var valid5 = true;}if(valid5){if(data8.financialResource !== undefined){let data12 = data8.financialResource;const _errs27 = errors;if(!(((((((((((((((((((((((((((data12 === "PORTFOLIO_CONTROL") || (data12 === "FUND_SOURCE")) || (data12 === "WRITE_OFF_EXPENSE")) || (data12 === "INTEREST_INCOME")) || (data12 === "TAXES_PAYABLE")) || (data12 === "FEE_INCOME")) || (data12 === "PENALTY_INCOME")) || (data12 === "NEGATIVE_INTEREST_PAYABLE_RECEIVABLE")) || (data12 === "NEGATIVE_INTEREST_PAYABLE")) || (data12 === "INTEREST_RECEIVABLE")) || (data12 === "FEE_RECEIVABLE")) || (data12 === "PENALTY_RECEIVABLE")) || (data12 === "TAXES_RECEIVABLE")) || (data12 === "DEFERRED_INTERESTS_INCOME")) || (data12 === "DEFERRED_FEE_INCOME")) || (data12 === "DEFERRED_TAXES")) || (data12 === "DEPOSIT_REFERENCE")) || (data12 === "SAVINGS_CONTROL")) || (data12 === "INTEREST_EXPENSE")) || (data12 === "INTEREST_PAYABLE")) || (data12 === "NEGATIVE_INTEREST_INCOME")) || (data12 === "NEGATIVE_INTEREST_RECEIVABLE")) || (data12 === "OVERDRAFT_PORTFOLIO_CONTROL")) || (data12 === "OVERDRAFT_INTEREST_INCOME")) || (data12 === "OVERDRAFT_WRITE_OFF_EXPENSE")) || (data12 === "OVERDRAFT_INTEREST_RECEIVABLE")) || (data12 === "INTER_BRANCH_TRANSFER"))){validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema38.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid5 = _errs27 === errors;}else {var valid5 = true;}}}}}}}else {validate29.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GlAccountingRuleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs17 === errors;if(!valid3){break;}}}else {validate29.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs28 = errors;if(typeof data.name !== "string"){validate29.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.feeApplication !== undefined){let data14 = data.feeApplication;const _errs30 = errors;if(!((data14 === "REQUIRED") || (data14 === "OPTIONAL"))){validate29.errors = [{instancePath:instancePath+"/feeApplication",schemaPath:"#/properties/feeApplication/enum",keyword:"enum",params:{allowedValues: schema36.properties.feeApplication.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.amortizationSettings !== undefined){let data15 = data.amortizationSettings;const _errs31 = errors;const _errs32 = errors;if(errors === _errs32){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){const _errs34 = errors;for(const key3 in data15){if(!((((((((key3 === "feeAmortizationUponRescheduleRefinanceOption") || (key3 === "intervalType")) || (key3 === "periodCount")) || (key3 === "intervalCount")) || (key3 === "encodedKey")) || (key3 === "amortizationProfile")) || (key3 === "periodUnit")) || (key3 === "frequency"))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs34 === errors){if(data15.feeAmortizationUponRescheduleRefinanceOption !== undefined){let data16 = data15.feeAmortizationUponRescheduleRefinanceOption;const _errs35 = errors;if(!((data16 === "END_AMORTIZATION_ON_THE_ORIGINAL_ACCOUNT") || (data16 === "CONTINUE_AMORTIZATION_ON_THE_RESCHEDULED_REFINANCED_ACCOUNT"))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/feeAmortizationUponRescheduleRefinanceOption",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/feeAmortizationUponRescheduleRefinanceOption/enum",keyword:"enum",params:{allowedValues: schema39.properties.feeAmortizationUponRescheduleRefinanceOption.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs35 === errors;}else {var valid7 = true;}if(valid7){if(data15.intervalType !== undefined){let data17 = data15.intervalType;const _errs36 = errors;if(!((data17 === "PREDEFINED_INTERVALS") || (data17 === "FULL_TERM"))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/intervalType",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/intervalType/enum",keyword:"enum",params:{allowedValues: schema39.properties.intervalType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs36 === errors;}else {var valid7 = true;}if(valid7){if(data15.periodCount !== undefined){let data18 = data15.periodCount;const _errs37 = errors;if(!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/periodCount",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/periodCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs37 === errors;}else {var valid7 = true;}if(valid7){if(data15.intervalCount !== undefined){let data19 = data15.intervalCount;const _errs39 = errors;if(!(((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19)))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/intervalCount",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/intervalCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs39 === errors;}else {var valid7 = true;}if(valid7){if(data15.encodedKey !== undefined){const _errs41 = errors;if(typeof data15.encodedKey !== "string"){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/encodedKey",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs41 === errors;}else {var valid7 = true;}if(valid7){if(data15.amortizationProfile !== undefined){let data21 = data15.amortizationProfile;const _errs43 = errors;if(!((((data21 === "NONE") || (data21 === "SUM_OF_YEARS_DIGITS")) || (data21 === "STRAIGHT_LINE")) || (data21 === "EFFECTIVE_INTEREST_RATE"))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/amortizationProfile",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/amortizationProfile/enum",keyword:"enum",params:{allowedValues: schema39.properties.amortizationProfile.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs43 === errors;}else {var valid7 = true;}if(valid7){if(data15.periodUnit !== undefined){let data22 = data15.periodUnit;const _errs44 = errors;if(!((((data22 === "DAYS") || (data22 === "WEEKS")) || (data22 === "MONTHS")) || (data22 === "YEARS"))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/periodUnit",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/periodUnit/enum",keyword:"enum",params:{allowedValues: schema39.properties.periodUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs44 === errors;}else {var valid7 = true;}if(valid7){if(data15.frequency !== undefined){let data23 = data15.frequency;const _errs45 = errors;if(!(((data23 === "ACCOUNT_INSTALLMENTS_DUE_DATES") || (data23 === "ACCOUNT_INSTALLMENTS_DUE_DATES_DAILY_BOOKING")) || (data23 === "CUSTOM_INTERVAL"))){validate29.errors = [{instancePath:instancePath+"/amortizationSettings/frequency",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/properties/frequency/enum",keyword:"enum",params:{allowedValues: schema39.properties.frequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs45 === errors;}else {var valid7 = true;}}}}}}}}}}else {validate29.errors = [{instancePath:instancePath+"/amortizationSettings",schemaPath:"#/$defs/PeriodIntervalSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs46 = errors;if(typeof data.encodedKey !== "string"){validate29.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs46 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs48 = errors;if(typeof data.id !== "string"){validate29.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){let data26 = data.state;const _errs50 = errors;if(!((data26 === "ACTIVE") || (data26 === "INACTIVE"))){validate29.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema36.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs50 === errors;}else {var valid0 = true;}if(valid0){if(data.applyDateMethod !== undefined){let data27 = data.applyDateMethod;const _errs51 = errors;if(!((data27 === "MONTHLY_FROM_ACTIVATION") || (data27 === "FIRST_OF_EVERY_MONTH"))){validate29.errors = [{instancePath:instancePath+"/applyDateMethod",schemaPath:"#/properties/applyDateMethod/enum",keyword:"enum",params:{allowedValues: schema36.properties.applyDateMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.percentageAmount !== undefined){let data28 = data.percentageAmount;const _errs52 = errors;if(!((typeof data28 == "number") && (isFinite(data28)))){validate29.errors = [{instancePath:instancePath+"/percentageAmount",schemaPath:"#/properties/percentageAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs52 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "fees") || (key0 === "allowArbitraryFees"))){validate28.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.fees !== undefined){let data0 = data.fees;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs4 = errors;if(!(validate29(data0[i0], {instancePath:instancePath+"/fees/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate28.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.allowArbitraryFees !== undefined){const _errs5 = errors;if(typeof data.allowArbitraryFees !== "boolean"){validate28.errors = [{instancePath:instancePath+"/allowArbitraryFees",schemaPath:"#/properties/allowArbitraryFees/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}else {validate28.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate28.errors = vErrors;return errors === 0;}const schema43 = {"type":"object","title":"GracePeriodSettings","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"gracePeriod":{"title":"gracePeriod","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"gracePeriodType":{"title":"gracePeriodType","description":"The grace period type. Representing the type of grace period which is possible for a loan account.","enum":["NONE","PAY_INTEREST_ONLY","INTEREST_FORGIVENESS"]}},"additionalProperties":false};function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "gracePeriod") || (key0 === "gracePeriodType"))){validate32.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.gracePeriod !== undefined){let data0 = data.gracePeriod;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((((key1 === "minValue") || (key1 === "encodedKey")) || (key1 === "defaultValue")) || (key1 === "maxValue"))){validate32.errors = [{instancePath:instancePath+"/gracePeriod",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate32.errors = [{instancePath:instancePath+"/gracePeriod/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate32.errors = [{instancePath:instancePath+"/gracePeriod/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data3 = data0.defaultValue;const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate32.errors = [{instancePath:instancePath+"/gracePeriod/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data4 = data0.maxValue;const _errs12 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate32.errors = [{instancePath:instancePath+"/gracePeriod/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}}else {validate32.errors = [{instancePath:instancePath+"/gracePeriod",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.gracePeriodType !== undefined){let data5 = data.gracePeriodType;const _errs14 = errors;if(!(((data5 === "NONE") || (data5 === "PAY_INTEREST_ONLY")) || (data5 === "INTEREST_FORGIVENESS"))){validate32.errors = [{instancePath:instancePath+"/gracePeriodType",schemaPath:"#/properties/gracePeriodType/enum",keyword:"enum",params:{allowedValues: schema43.properties.gracePeriodType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}else {validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate32.errors = vErrors;return errors === 0;}const schema47 = {"type":"object","title":"LoanProductScheduleSettings","description":"Defines the settings and constraints for schedule for the loans that are created based on this product.","properties":{"repaymentMethod":{"title":"repaymentMethod","description":"The repayment method value","enum":["AMOUNT","INSTALLMENTS"]},"repaymentScheduleMethod":{"title":"repaymentScheduleMethod","description":"The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account's life cycle or will be dynamically recomputed when required.","enum":["NONE","FIXED","DYNAMIC"]},"repaymentReschedulingMethod":{"title":"repaymentReschedulingMethod","description":"The repayment rescheduling method used in calculations.","enum":["NONE","NEXT_WORKING_DAY","PREVIOUS_WORKING_DAY","EXTEND_SCHEDULE"]},"shortMonthHandlingMethod":{"title":"shortMonthHandlingMethod","description":"Determines how to handle the short months, if they select a fixed day of month > 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.","enum":["LAST_DAY_IN_MONTH","FIRST_DAY_OF_NEXT_MONTH"]},"numInstallments":{"title":"numInstallments","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"interestAccrualSince":{"title":"interestAccrualSince","description":"Represents the moment the interest will start getting accrued.","enum":["DISBURSEMENT","DUE_DATE"]},"repaymentPeriodUnit":{"title":"repaymentPeriodUnit","description":"The frequency of the loan repayment.","enum":["DAYS","WEEKS","MONTHS","YEARS"]},"previewSchedule":{"title":"previewSchedule","$ref":"#/$defs/PreviewScheduleSettingsaf30"},"defaultRepaymentPeriodCount":{"type":"integer","title":"defaultRepaymentPeriodCount","description":"Interval Repayment Methodology Settings."},"billingCycles":{"title":"billingCycles","$ref":"#/$defs/BillingCyclesProductSettingsaf30"},"fixedDaysOfMonth":{"type":"array","title":"fixedDaysOfMonth","description":" Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTH.","items":{"type":"integer"}},"repaymentScheduleEditOptions":{"type":"array","title":"repaymentScheduleEditOptions","description":"Shows the properties from the repayment schedule can be edited.","items":{"enum":["ADJUST_PAYMENT_DATES","ADJUST_PRINCIPAL_PAYMENT_SCHEDULE","ADJUST_INTEREST_PAYMENT_SCHEDULE","ADJUST_FEE_PAYMENT_SCHEDULE","ADJUST_PENALTY_PAYMENT_SCHEDULE","ADJUST_NUMBER_OF_INSTALLMENTS","ADJUST_PAYMENT_HOLIDAYS"]}},"scheduleDueDatesMethod":{"title":"scheduleDueDatesMethod","description":"The methodology used by this product to compute the due dates of the repayments.","enum":["INTERVAL","FIXED_DAYS_OF_MONTH"]},"firstRepaymentDueDateOffset":{"title":"firstRepaymentDueDateOffset","$ref":"#/$defs/IntegerIntervalConstraintsaf30"},"roundingSettings":{"title":"roundingSettings","$ref":"#/$defs/RoundingSettingsaf30"}},"required":["repaymentScheduleMethod","repaymentReschedulingMethod","scheduleDueDatesMethod"],"additionalProperties":false};const schema49 = {"type":"object","title":"PreviewScheduleSettings","description":"Defines the Preview Schedule settings for revolving products","properties":{"numberOfPreviewedInstalments":{"type":"integer","title":"numberOfPreviewedInstalments","description":"Number of Previewed Instalments."},"previewScheduleEnabled":{"type":"boolean","title":"previewScheduleEnabled","description":"Preview Schedule status."}},"additionalProperties":false};const schema50 = {"type":"object","title":"BillingCyclesProductSettings","description":"Defines the billing cycles settings for revolving credit products","properties":{"enabled":{"type":"boolean","title":"enabled","description":"The billing cycle status if it is enabled or disabled"},"startDays":{"type":"array","title":"startDays","description":"The billing cycle start days in case it is enabled","items":{"type":"integer"},"uniqueItems":true}},"additionalProperties":false};const schema52 = {"type":"object","title":"RoundingSettings","description":"Defines the rounding settings used in the loan computation.","properties":{"roundingRepaymentScheduleMethod":{"title":"roundingRepaymentScheduleMethod","description":"Specifies the rounding repayment schedule method.","enum":["NO_ROUNDING","ROUND_REMAINDER_INTO_LAST_REPAYMENT","ROUND_PRINCIPAL_AND_INTEREST_REMAINDER_INTO_LAST_REPAYMENT"]},"repaymentCurrencyRounding":{"title":"repaymentCurrencyRounding","description":"Specifies the repayment currency rounding method.","enum":["NO_ROUNDING","ROUND_TO_NEAREST_WHOLE_UNIT","ROUND_UP_TO_NEAREST_WHOLE_UNIT"]},"repaymentElementsRoundingMethod":{"title":"repaymentElementsRoundingMethod","description":"Determines how the repayment currency rounding is handled on each element from the schedule.","enum":["NO_ROUNDING","ROUND_ALL","PAYMENT_DUE"]}},"required":["roundingRepaymentScheduleMethod","repaymentCurrencyRounding","repaymentElementsRoundingMethod"],"additionalProperties":false};function validate34(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.repaymentScheduleMethod === undefined) && (missing0 = "repaymentScheduleMethod")) || ((data.repaymentReschedulingMethod === undefined) && (missing0 = "repaymentReschedulingMethod"))) || ((data.scheduleDueDatesMethod === undefined) && (missing0 = "scheduleDueDatesMethod"))){validate34.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema47.properties, key0))){validate34.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.repaymentMethod !== undefined){let data0 = data.repaymentMethod;const _errs2 = errors;if(!((data0 === "AMOUNT") || (data0 === "INSTALLMENTS"))){validate34.errors = [{instancePath:instancePath+"/repaymentMethod",schemaPath:"#/properties/repaymentMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.repaymentMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentScheduleMethod !== undefined){let data1 = data.repaymentScheduleMethod;const _errs3 = errors;if(!(((data1 === "NONE") || (data1 === "FIXED")) || (data1 === "DYNAMIC"))){validate34.errors = [{instancePath:instancePath+"/repaymentScheduleMethod",schemaPath:"#/properties/repaymentScheduleMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.repaymentScheduleMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentReschedulingMethod !== undefined){let data2 = data.repaymentReschedulingMethod;const _errs4 = errors;if(!((((data2 === "NONE") || (data2 === "NEXT_WORKING_DAY")) || (data2 === "PREVIOUS_WORKING_DAY")) || (data2 === "EXTEND_SCHEDULE"))){validate34.errors = [{instancePath:instancePath+"/repaymentReschedulingMethod",schemaPath:"#/properties/repaymentReschedulingMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.repaymentReschedulingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.shortMonthHandlingMethod !== undefined){let data3 = data.shortMonthHandlingMethod;const _errs5 = errors;if(!((data3 === "LAST_DAY_IN_MONTH") || (data3 === "FIRST_DAY_OF_NEXT_MONTH"))){validate34.errors = [{instancePath:instancePath+"/shortMonthHandlingMethod",schemaPath:"#/properties/shortMonthHandlingMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.shortMonthHandlingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.numInstallments !== undefined){let data4 = data.numInstallments;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs9 = errors;for(const key1 in data4){if(!((((key1 === "minValue") || (key1 === "encodedKey")) || (key1 === "defaultValue")) || (key1 === "maxValue"))){validate34.errors = [{instancePath:instancePath+"/numInstallments",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data4.minValue !== undefined){let data5 = data4.minValue;const _errs10 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate34.errors = [{instancePath:instancePath+"/numInstallments/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data4.encodedKey !== undefined){const _errs12 = errors;if(typeof data4.encodedKey !== "string"){validate34.errors = [{instancePath:instancePath+"/numInstallments/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data4.defaultValue !== undefined){let data7 = data4.defaultValue;const _errs14 = errors;if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){validate34.errors = [{instancePath:instancePath+"/numInstallments/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data4.maxValue !== undefined){let data8 = data4.maxValue;const _errs16 = errors;if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){validate34.errors = [{instancePath:instancePath+"/numInstallments/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}else {validate34.errors = [{instancePath:instancePath+"/numInstallments",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccrualSince !== undefined){let data9 = data.interestAccrualSince;const _errs18 = errors;if(!((data9 === "DISBURSEMENT") || (data9 === "DUE_DATE"))){validate34.errors = [{instancePath:instancePath+"/interestAccrualSince",schemaPath:"#/properties/interestAccrualSince/enum",keyword:"enum",params:{allowedValues: schema47.properties.interestAccrualSince.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentPeriodUnit !== undefined){let data10 = data.repaymentPeriodUnit;const _errs19 = errors;if(!((((data10 === "DAYS") || (data10 === "WEEKS")) || (data10 === "MONTHS")) || (data10 === "YEARS"))){validate34.errors = [{instancePath:instancePath+"/repaymentPeriodUnit",schemaPath:"#/properties/repaymentPeriodUnit/enum",keyword:"enum",params:{allowedValues: schema47.properties.repaymentPeriodUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.previewSchedule !== undefined){let data11 = data.previewSchedule;const _errs20 = errors;const _errs21 = errors;if(errors === _errs21){if(data11 && typeof data11 == "object" && !Array.isArray(data11)){const _errs23 = errors;for(const key2 in data11){if(!((key2 === "numberOfPreviewedInstalments") || (key2 === "previewScheduleEnabled"))){validate34.errors = [{instancePath:instancePath+"/previewSchedule",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs23 === errors){if(data11.numberOfPreviewedInstalments !== undefined){let data12 = data11.numberOfPreviewedInstalments;const _errs24 = errors;if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){validate34.errors = [{instancePath:instancePath+"/previewSchedule/numberOfPreviewedInstalments",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/properties/numberOfPreviewedInstalments/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs24 === errors;}else {var valid4 = true;}if(valid4){if(data11.previewScheduleEnabled !== undefined){const _errs26 = errors;if(typeof data11.previewScheduleEnabled !== "boolean"){validate34.errors = [{instancePath:instancePath+"/previewSchedule/previewScheduleEnabled",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/properties/previewScheduleEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid4 = _errs26 === errors;}else {var valid4 = true;}}}}else {validate34.errors = [{instancePath:instancePath+"/previewSchedule",schemaPath:"#/$defs/PreviewScheduleSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.defaultRepaymentPeriodCount !== undefined){let data14 = data.defaultRepaymentPeriodCount;const _errs28 = errors;if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){validate34.errors = [{instancePath:instancePath+"/defaultRepaymentPeriodCount",schemaPath:"#/properties/defaultRepaymentPeriodCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.billingCycles !== undefined){let data15 = data.billingCycles;const _errs30 = errors;const _errs31 = errors;if(errors === _errs31){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){const _errs33 = errors;for(const key3 in data15){if(!((key3 === "enabled") || (key3 === "startDays"))){validate34.errors = [{instancePath:instancePath+"/billingCycles",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs33 === errors){if(data15.enabled !== undefined){const _errs34 = errors;if(typeof data15.enabled !== "boolean"){validate34.errors = [{instancePath:instancePath+"/billingCycles/enabled",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid6 = _errs34 === errors;}else {var valid6 = true;}if(valid6){if(data15.startDays !== undefined){let data17 = data15.startDays;const _errs36 = errors;if(errors === _errs36){if(Array.isArray(data17)){var valid7 = true;const len0 = data17.length;for(let i0=0; i0<len0; i0++){let data18 = data17[i0];const _errs38 = errors;if(!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))){validate34.errors = [{instancePath:instancePath+"/billingCycles/startDays/" + i0,schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/startDays/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs38 === errors;if(!valid7){break;}}if(valid7){let i1 = data17.length;let j0;if(i1 > 1){const indices0 = {};for(;i1--;){let item0 = data17[i1];if(!(((typeof item0 == "number") && (!(item0 % 1) && !isNaN(item0))) && (isFinite(item0)))){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate34.errors = [{instancePath:instancePath+"/billingCycles/startDays",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/startDays/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break;}indices0[item0] = i1;}}}}else {validate34.errors = [{instancePath:instancePath+"/billingCycles/startDays",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/properties/startDays/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid6 = _errs36 === errors;}else {var valid6 = true;}}}}else {validate34.errors = [{instancePath:instancePath+"/billingCycles",schemaPath:"#/$defs/BillingCyclesProductSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.fixedDaysOfMonth !== undefined){let data19 = data.fixedDaysOfMonth;const _errs40 = errors;if(errors === _errs40){if(Array.isArray(data19)){var valid9 = true;const len1 = data19.length;for(let i2=0; i2<len1; i2++){let data20 = data19[i2];const _errs42 = errors;if(!(((typeof data20 == "number") && (!(data20 % 1) && !isNaN(data20))) && (isFinite(data20)))){validate34.errors = [{instancePath:instancePath+"/fixedDaysOfMonth/" + i2,schemaPath:"#/properties/fixedDaysOfMonth/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid9 = _errs42 === errors;if(!valid9){break;}}}else {validate34.errors = [{instancePath:instancePath+"/fixedDaysOfMonth",schemaPath:"#/properties/fixedDaysOfMonth/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.repaymentScheduleEditOptions !== undefined){let data21 = data.repaymentScheduleEditOptions;const _errs44 = errors;if(errors === _errs44){if(Array.isArray(data21)){var valid10 = true;const len2 = data21.length;for(let i3=0; i3<len2; i3++){let data22 = data21[i3];const _errs46 = errors;if(!(((((((data22 === "ADJUST_PAYMENT_DATES") || (data22 === "ADJUST_PRINCIPAL_PAYMENT_SCHEDULE")) || (data22 === "ADJUST_INTEREST_PAYMENT_SCHEDULE")) || (data22 === "ADJUST_FEE_PAYMENT_SCHEDULE")) || (data22 === "ADJUST_PENALTY_PAYMENT_SCHEDULE")) || (data22 === "ADJUST_NUMBER_OF_INSTALLMENTS")) || (data22 === "ADJUST_PAYMENT_HOLIDAYS"))){validate34.errors = [{instancePath:instancePath+"/repaymentScheduleEditOptions/" + i3,schemaPath:"#/properties/repaymentScheduleEditOptions/items/enum",keyword:"enum",params:{allowedValues: schema47.properties.repaymentScheduleEditOptions.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid10 = _errs46 === errors;if(!valid10){break;}}}else {validate34.errors = [{instancePath:instancePath+"/repaymentScheduleEditOptions",schemaPath:"#/properties/repaymentScheduleEditOptions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.scheduleDueDatesMethod !== undefined){let data23 = data.scheduleDueDatesMethod;const _errs47 = errors;if(!((data23 === "INTERVAL") || (data23 === "FIXED_DAYS_OF_MONTH"))){validate34.errors = [{instancePath:instancePath+"/scheduleDueDatesMethod",schemaPath:"#/properties/scheduleDueDatesMethod/enum",keyword:"enum",params:{allowedValues: schema47.properties.scheduleDueDatesMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs47 === errors;}else {var valid0 = true;}if(valid0){if(data.firstRepaymentDueDateOffset !== undefined){let data24 = data.firstRepaymentDueDateOffset;const _errs48 = errors;const _errs49 = errors;if(errors === _errs49){if(data24 && typeof data24 == "object" && !Array.isArray(data24)){const _errs51 = errors;for(const key4 in data24){if(!((((key4 === "minValue") || (key4 === "encodedKey")) || (key4 === "defaultValue")) || (key4 === "maxValue"))){validate34.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs51 === errors){if(data24.minValue !== undefined){let data25 = data24.minValue;const _errs52 = errors;if(!(((typeof data25 == "number") && (!(data25 % 1) && !isNaN(data25))) && (isFinite(data25)))){validate34.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/minValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid12 = _errs52 === errors;}else {var valid12 = true;}if(valid12){if(data24.encodedKey !== undefined){const _errs54 = errors;if(typeof data24.encodedKey !== "string"){validate34.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/encodedKey",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid12 = _errs54 === errors;}else {var valid12 = true;}if(valid12){if(data24.defaultValue !== undefined){let data27 = data24.defaultValue;const _errs56 = errors;if(!(((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27)))){validate34.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/defaultValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid12 = _errs56 === errors;}else {var valid12 = true;}if(valid12){if(data24.maxValue !== undefined){let data28 = data24.maxValue;const _errs58 = errors;if(!(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28)))){validate34.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset/maxValue",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid12 = _errs58 === errors;}else {var valid12 = true;}}}}}}else {validate34.errors = [{instancePath:instancePath+"/firstRepaymentDueDateOffset",schemaPath:"#/$defs/IntegerIntervalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.roundingSettings !== undefined){let data29 = data.roundingSettings;const _errs60 = errors;const _errs61 = errors;if(errors === _errs61){if(data29 && typeof data29 == "object" && !Array.isArray(data29)){let missing1;if((((data29.roundingRepaymentScheduleMethod === undefined) && (missing1 = "roundingRepaymentScheduleMethod")) || ((data29.repaymentCurrencyRounding === undefined) && (missing1 = "repaymentCurrencyRounding"))) || ((data29.repaymentElementsRoundingMethod === undefined) && (missing1 = "repaymentElementsRoundingMethod"))){validate34.errors = [{instancePath:instancePath+"/roundingSettings",schemaPath:"#/$defs/RoundingSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs63 = errors;for(const key5 in data29){if(!(((key5 === "roundingRepaymentScheduleMethod") || (key5 === "repaymentCurrencyRounding")) || (key5 === "repaymentElementsRoundingMethod"))){validate34.errors = [{instancePath:instancePath+"/roundingSettings",schemaPath:"#/$defs/RoundingSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"}];return false;break;}}if(_errs63 === errors){if(data29.roundingRepaymentScheduleMethod !== undefined){let data30 = data29.roundingRepaymentScheduleMethod;const _errs64 = errors;if(!(((data30 === "NO_ROUNDING") || (data30 === "ROUND_REMAINDER_INTO_LAST_REPAYMENT")) || (data30 === "ROUND_PRINCIPAL_AND_INTEREST_REMAINDER_INTO_LAST_REPAYMENT"))){validate34.errors = [{instancePath:instancePath+"/roundingSettings/roundingRepaymentScheduleMethod",schemaPath:"#/$defs/RoundingSettingsaf30/properties/roundingRepaymentScheduleMethod/enum",keyword:"enum",params:{allowedValues: schema52.properties.roundingRepaymentScheduleMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid14 = _errs64 === errors;}else {var valid14 = true;}if(valid14){if(data29.repaymentCurrencyRounding !== undefined){let data31 = data29.repaymentCurrencyRounding;const _errs65 = errors;if(!(((data31 === "NO_ROUNDING") || (data31 === "ROUND_TO_NEAREST_WHOLE_UNIT")) || (data31 === "ROUND_UP_TO_NEAREST_WHOLE_UNIT"))){validate34.errors = [{instancePath:instancePath+"/roundingSettings/repaymentCurrencyRounding",schemaPath:"#/$defs/RoundingSettingsaf30/properties/repaymentCurrencyRounding/enum",keyword:"enum",params:{allowedValues: schema52.properties.repaymentCurrencyRounding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid14 = _errs65 === errors;}else {var valid14 = true;}if(valid14){if(data29.repaymentElementsRoundingMethod !== undefined){let data32 = data29.repaymentElementsRoundingMethod;const _errs66 = errors;if(!(((data32 === "NO_ROUNDING") || (data32 === "ROUND_ALL")) || (data32 === "PAYMENT_DUE"))){validate34.errors = [{instancePath:instancePath+"/roundingSettings/repaymentElementsRoundingMethod",schemaPath:"#/$defs/RoundingSettingsaf30/properties/repaymentElementsRoundingMethod/enum",keyword:"enum",params:{allowedValues: schema52.properties.repaymentElementsRoundingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid14 = _errs66 === errors;}else {var valid14 = true;}}}}}}else {validate34.errors = [{instancePath:instancePath+"/roundingSettings",schemaPath:"#/$defs/RoundingSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs60 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}else {validate34.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate34.errors = vErrors;return errors === 0;}const schema53 = {"type":"object","title":"AccountingSettings","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"title":"accountingMethod","description":"A list of accounting rules for the product.","enum":["NONE","CASH","ACCRUAL"]},"interestAccrualCalculation":{"title":"interestAccrualCalculation","description":"The accounting interest calculation option selected for the product.","enum":["NONE","AGGREGATED_AMOUNT","BREAKDOWN_PER_ACCOUNT"]},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules for the product.","items":{"description":"A list of accounting rules for the product.","$ref":"#/$defs/GlAccountingRuleaf30"}},"interestAccruedAccountingMethod":{"title":"interestAccruedAccountingMethod","description":"A list of accounting rules for the product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":false};function validate36(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.accountingMethod === undefined) && (missing0 = "accountingMethod")){validate36.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((key0 === "accountingMethod") || (key0 === "interestAccrualCalculation")) || (key0 === "accountingRules")) || (key0 === "interestAccruedAccountingMethod"))){validate36.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.accountingMethod !== undefined){let data0 = data.accountingMethod;const _errs2 = errors;if(!(((data0 === "NONE") || (data0 === "CASH")) || (data0 === "ACCRUAL"))){validate36.errors = [{instancePath:instancePath+"/accountingMethod",schemaPath:"#/properties/accountingMethod/enum",keyword:"enum",params:{allowedValues: schema53.properties.accountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccrualCalculation !== undefined){let data1 = data.interestAccrualCalculation;const _errs3 = errors;if(!(((data1 === "NONE") || (data1 === "AGGREGATED_AMOUNT")) || (data1 === "BREAKDOWN_PER_ACCOUNT"))){validate36.errors = [{instancePath:instancePath+"/interestAccrualCalculation",schemaPath:"#/properties/interestAccrualCalculation/enum",keyword:"enum",params:{allowedValues: schema53.properties.interestAccrualCalculation.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingRules !== undefined){let data2 = data.accountingRules;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing1;if(((data3.glAccountKey === undefined) && (missing1 = "glAccountKey")) || ((data3.financialResource === undefined) && (missing1 = "financialResource"))){validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GlAccountingRuleaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs9 = errors;for(const key1 in data3){if(!((((key1 === "encodedKey") || (key1 === "glAccountKey")) || (key1 === "transactionChannelKey")) || (key1 === "financialResource"))){validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GlAccountingRuleaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data3.encodedKey !== undefined){const _errs10 = errors;if(typeof data3.encodedKey !== "string"){validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data3.glAccountKey !== undefined){const _errs12 = errors;if(typeof data3.glAccountKey !== "string"){validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data3.transactionChannelKey !== undefined){const _errs14 = errors;if(typeof data3.transactionChannelKey !== "string"){validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/transactionChannelKey",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}if(valid3){if(data3.financialResource !== undefined){let data7 = data3.financialResource;const _errs16 = errors;if(!(((((((((((((((((((((((((((data7 === "PORTFOLIO_CONTROL") || (data7 === "FUND_SOURCE")) || (data7 === "WRITE_OFF_EXPENSE")) || (data7 === "INTEREST_INCOME")) || (data7 === "TAXES_PAYABLE")) || (data7 === "FEE_INCOME")) || (data7 === "PENALTY_INCOME")) || (data7 === "NEGATIVE_INTEREST_PAYABLE_RECEIVABLE")) || (data7 === "NEGATIVE_INTEREST_PAYABLE")) || (data7 === "INTEREST_RECEIVABLE")) || (data7 === "FEE_RECEIVABLE")) || (data7 === "PENALTY_RECEIVABLE")) || (data7 === "TAXES_RECEIVABLE")) || (data7 === "DEFERRED_INTERESTS_INCOME")) || (data7 === "DEFERRED_FEE_INCOME")) || (data7 === "DEFERRED_TAXES")) || (data7 === "DEPOSIT_REFERENCE")) || (data7 === "SAVINGS_CONTROL")) || (data7 === "INTEREST_EXPENSE")) || (data7 === "INTEREST_PAYABLE")) || (data7 === "NEGATIVE_INTEREST_INCOME")) || (data7 === "NEGATIVE_INTEREST_RECEIVABLE")) || (data7 === "OVERDRAFT_PORTFOLIO_CONTROL")) || (data7 === "OVERDRAFT_INTEREST_INCOME")) || (data7 === "OVERDRAFT_WRITE_OFF_EXPENSE")) || (data7 === "OVERDRAFT_INTEREST_RECEIVABLE")) || (data7 === "INTER_BRANCH_TRANSFER"))){validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/GlAccountingRuleaf30/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema38.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}}}}}}}else {validate36.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/GlAccountingRuleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate36.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccruedAccountingMethod !== undefined){let data8 = data.interestAccruedAccountingMethod;const _errs17 = errors;if(!(((data8 === "NONE") || (data8 === "DAILY")) || (data8 === "END_OF_MONTH"))){validate36.errors = [{instancePath:instancePath+"/interestAccruedAccountingMethod",schemaPath:"#/properties/interestAccruedAccountingMethod/enum",keyword:"enum",params:{allowedValues: schema53.properties.interestAccruedAccountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}}}}}}}else {validate36.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate36.errors = vErrors;return errors === 0;}const schema55 = {"type":"object","title":"LoanAmountSettings","description":"The amount settings, holds all amount properties.","properties":{"loanAmount":{"title":"loanAmount","$ref":"#/$defs/AmountDecimalConstraintsaf30"},"trancheSettings":{"title":"trancheSettings","$ref":"#/$defs/TrancheSettingsaf30"}},"additionalProperties":false};const schema57 = {"type":"object","title":"TrancheSettings","description":"The tranche settings, indicates the settings regarding tranches in case the product is configured to support tranches.","properties":{"maxNumberOfTranches":{"type":"integer","title":"maxNumberOfTranches","description":"The number of tranches supported by the loan product"}},"additionalProperties":false};function validate38(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "loanAmount") || (key0 === "trancheSettings"))){validate38.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.loanAmount !== undefined){let data0 = data.loanAmount;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((((key1 === "minValue") || (key1 === "encodedKey")) || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate38.errors = [{instancePath:instancePath+"/loanAmount",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate38.errors = [{instancePath:instancePath+"/loanAmount/minValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate38.errors = [{instancePath:instancePath+"/loanAmount/encodedKey",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data3 = data0.maxValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate38.errors = [{instancePath:instancePath+"/loanAmount/maxValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data4 = data0.defaultValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate38.errors = [{instancePath:instancePath+"/loanAmount/defaultValue",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}}else {validate38.errors = [{instancePath:instancePath+"/loanAmount",schemaPath:"#/$defs/AmountDecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.trancheSettings !== undefined){let data5 = data.trancheSettings;const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){const _errs17 = errors;for(const key2 in data5){if(!(key2 === "maxNumberOfTranches")){validate38.errors = [{instancePath:instancePath+"/trancheSettings",schemaPath:"#/$defs/TrancheSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs17 === errors){if(data5.maxNumberOfTranches !== undefined){let data6 = data5.maxNumberOfTranches;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate38.errors = [{instancePath:instancePath+"/trancheSettings/maxNumberOfTranches",schemaPath:"#/$defs/TrancheSettingsaf30/properties/maxNumberOfTranches/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}}}}else {validate38.errors = [{instancePath:instancePath+"/trancheSettings",schemaPath:"#/$defs/TrancheSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}else {validate38.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate38.errors = vErrors;return errors === 0;}const schema58 = {"type":"object","title":"InternalControls","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","title":"dormancyPeriodDays","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"fourEyesPrinciple":{"title":"fourEyesPrinciple","$ref":"#/$defs/FourEyesPrincipleaf30"},"lockSettings":{"title":"lockSettings","$ref":"#/$defs/LockSettingsaf30"}},"additionalProperties":false};const schema59 = {"type":"object","title":"FourEyesPrinciple","description":"Settings for Four Eyes Principle","properties":{"activeForLoanApproval":{"type":"boolean","title":"activeForLoanApproval","description":"Requires separate users to create and approve loan accounts"}},"additionalProperties":false};const schema60 = {"type":"object","title":"LockSettings","description":"Settings applied when transitioning accounts to Locked state","properties":{"cappingPercentage":{"type":"number","title":"cappingPercentage","description":"Specifies the percentage of principal that cannot be exceeded by the sum of interest, fees and penalty balances."},"lockPeriodDays":{"type":"integer","title":"lockPeriodDays","description":"Specifies the number of days for in which the account will be locked if it stays in arrears."},"cappingConstraintType":{"title":"cappingConstraintType","description":"Specifies constraint types for capping charges.","enum":["SOFT_CAP","HARD_CAP"]},"cappingMethod":{"title":"cappingMethod","description":"Specifies how principal will be used when calculating capping charges.","enum":["OUTSTANDING_PRINCIPAL_PERCENTAGE","ORIGINAL_PRINCIPAL_PERCENTAGE"]}},"additionalProperties":false};function validate40(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(((key0 === "dormancyPeriodDays") || (key0 === "fourEyesPrinciple")) || (key0 === "lockSettings"))){validate40.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.dormancyPeriodDays !== undefined){let data0 = data.dormancyPeriodDays;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate40.errors = [{instancePath:instancePath+"/dormancyPeriodDays",schemaPath:"#/properties/dormancyPeriodDays/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fourEyesPrinciple !== undefined){let data1 = data.fourEyesPrinciple;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){const _errs7 = errors;for(const key1 in data1){if(!(key1 === "activeForLoanApproval")){validate40.errors = [{instancePath:instancePath+"/fourEyesPrinciple",schemaPath:"#/$defs/FourEyesPrincipleaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs7 === errors){if(data1.activeForLoanApproval !== undefined){if(typeof data1.activeForLoanApproval !== "boolean"){validate40.errors = [{instancePath:instancePath+"/fourEyesPrinciple/activeForLoanApproval",schemaPath:"#/$defs/FourEyesPrincipleaf30/properties/activeForLoanApproval/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}}else {validate40.errors = [{instancePath:instancePath+"/fourEyesPrinciple",schemaPath:"#/$defs/FourEyesPrincipleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.lockSettings !== undefined){let data3 = data.lockSettings;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){const _errs13 = errors;for(const key2 in data3){if(!((((key2 === "cappingPercentage") || (key2 === "lockPeriodDays")) || (key2 === "cappingConstraintType")) || (key2 === "cappingMethod"))){validate40.errors = [{instancePath:instancePath+"/lockSettings",schemaPath:"#/$defs/LockSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs13 === errors){if(data3.cappingPercentage !== undefined){let data4 = data3.cappingPercentage;const _errs14 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate40.errors = [{instancePath:instancePath+"/lockSettings/cappingPercentage",schemaPath:"#/$defs/LockSettingsaf30/properties/cappingPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data3.lockPeriodDays !== undefined){let data5 = data3.lockPeriodDays;const _errs16 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate40.errors = [{instancePath:instancePath+"/lockSettings/lockPeriodDays",schemaPath:"#/$defs/LockSettingsaf30/properties/lockPeriodDays/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data3.cappingConstraintType !== undefined){let data6 = data3.cappingConstraintType;const _errs18 = errors;if(!((data6 === "SOFT_CAP") || (data6 === "HARD_CAP"))){validate40.errors = [{instancePath:instancePath+"/lockSettings/cappingConstraintType",schemaPath:"#/$defs/LockSettingsaf30/properties/cappingConstraintType/enum",keyword:"enum",params:{allowedValues: schema60.properties.cappingConstraintType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data3.cappingMethod !== undefined){let data7 = data3.cappingMethod;const _errs19 = errors;if(!((data7 === "OUTSTANDING_PRINCIPAL_PERCENTAGE") || (data7 === "ORIGINAL_PRINCIPAL_PERCENTAGE"))){validate40.errors = [{instancePath:instancePath+"/lockSettings/cappingMethod",schemaPath:"#/$defs/LockSettingsaf30/properties/cappingMethod/enum",keyword:"enum",params:{allowedValues: schema60.properties.cappingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs19 === errors;}else {var valid4 = true;}}}}}}else {validate40.errors = [{instancePath:instancePath+"/lockSettings",schemaPath:"#/$defs/LockSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}}}else {validate40.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate40.errors = vErrors;return errors === 0;}const schema61 = {"type":"object","title":"FundingSettings","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"organizationInterestCommission":{"title":"organizationInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"lockFundsAtApproval":{"type":"boolean","title":"lockFundsAtApproval","description":"Shows whether investor funds are locked or not at the loan account's approval."},"funderInterestCommission":{"title":"funderInterestCommission","$ref":"#/$defs/DecimalConstraintsaf30"},"requiredFunds":{"type":"number","title":"requiredFunds","description":"The required investor funds percentage, for opening an account with external funding. If null, the investor funds are not enabled."},"funderInterestCommissionAllocationType":{"title":"funderInterestCommissionAllocationType","description":"Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).","enum":["PERCENTAGE_OF_LOAN_FUNDING","FIXED_INTEREST_COMMISSIONS"]},"enabled":{"type":"boolean","title":"enabled","description":"Indicates whether the product has the investor funds enabled or not."}},"additionalProperties":false};function validate42(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "organizationInterestCommission") || (key0 === "lockFundsAtApproval")) || (key0 === "funderInterestCommission")) || (key0 === "requiredFunds")) || (key0 === "funderInterestCommissionAllocationType")) || (key0 === "enabled"))){validate42.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.organizationInterestCommission !== undefined){let data0 = data.organizationInterestCommission;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((((key1 === "minValue") || (key1 === "encodedKey")) || (key1 === "maxValue")) || (key1 === "defaultValue"))){validate42.errors = [{instancePath:instancePath+"/organizationInterestCommission",schemaPath:"#/$defs/DecimalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate42.errors = [{instancePath:instancePath+"/organizationInterestCommission/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate42.errors = [{instancePath:instancePath+"/organizationInterestCommission/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data3 = data0.maxValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate42.errors = [{instancePath:instancePath+"/organizationInterestCommission/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data4 = data0.defaultValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate42.errors = [{instancePath:instancePath+"/organizationInterestCommission/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}}else {validate42.errors = [{instancePath:instancePath+"/organizationInterestCommission",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.lockFundsAtApproval !== undefined){const _errs14 = errors;if(typeof data.lockFundsAtApproval !== "boolean"){validate42.errors = [{instancePath:instancePath+"/lockFundsAtApproval",schemaPath:"#/properties/lockFundsAtApproval/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.funderInterestCommission !== undefined){let data6 = data.funderInterestCommission;const _errs16 = errors;const _errs17 = errors;if(errors === _errs17){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){const _errs19 = errors;for(const key2 in data6){if(!((((key2 === "minValue") || (key2 === "encodedKey")) || (key2 === "maxValue")) || (key2 === "defaultValue"))){validate42.errors = [{instancePath:instancePath+"/funderInterestCommission",schemaPath:"#/$defs/DecimalConstraintsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs19 === errors){if(data6.minValue !== undefined){let data7 = data6.minValue;const _errs20 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate42.errors = [{instancePath:instancePath+"/funderInterestCommission/minValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs20 === errors;}else {var valid4 = true;}if(valid4){if(data6.encodedKey !== undefined){const _errs22 = errors;if(typeof data6.encodedKey !== "string"){validate42.errors = [{instancePath:instancePath+"/funderInterestCommission/encodedKey",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs22 === errors;}else {var valid4 = true;}if(valid4){if(data6.maxValue !== undefined){let data9 = data6.maxValue;const _errs24 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate42.errors = [{instancePath:instancePath+"/funderInterestCommission/maxValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs24 === errors;}else {var valid4 = true;}if(valid4){if(data6.defaultValue !== undefined){let data10 = data6.defaultValue;const _errs26 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate42.errors = [{instancePath:instancePath+"/funderInterestCommission/defaultValue",schemaPath:"#/$defs/DecimalConstraintsaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs26 === errors;}else {var valid4 = true;}}}}}}else {validate42.errors = [{instancePath:instancePath+"/funderInterestCommission",schemaPath:"#/$defs/DecimalConstraintsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.requiredFunds !== undefined){let data11 = data.requiredFunds;const _errs28 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate42.errors = [{instancePath:instancePath+"/requiredFunds",schemaPath:"#/properties/requiredFunds/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.funderInterestCommissionAllocationType !== undefined){let data12 = data.funderInterestCommissionAllocationType;const _errs30 = errors;if(!((data12 === "PERCENTAGE_OF_LOAN_FUNDING") || (data12 === "FIXED_INTEREST_COMMISSIONS"))){validate42.errors = [{instancePath:instancePath+"/funderInterestCommissionAllocationType",schemaPath:"#/properties/funderInterestCommissionAllocationType/enum",keyword:"enum",params:{allowedValues: schema61.properties.funderInterestCommissionAllocationType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.enabled !== undefined){const _errs31 = errors;if(typeof data.enabled !== "boolean"){validate42.errors = [{instancePath:instancePath+"/enabled",schemaPath:"#/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}}}}}}}}else {validate42.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate42.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.type === undefined) && (missing0 = "type")) || ((data.id === undefined) && (missing0 = "id"))) || ((data.creditArrangementSettings === undefined) && (missing0 = "creditArrangementSettings"))) || ((data.name === undefined) && (missing0 = "name"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema12.properties, key0))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.notes !== undefined){const _errs2 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.availabilitySettings !== undefined){const _errs4 = errors;if(!(validate12(data.availabilitySettings, {instancePath:instancePath+"/availabilitySettings",parentData:data,parentDataProperty:"availabilitySettings",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentSettings !== undefined){const _errs5 = errors;if(!(validate14(data.paymentSettings, {instancePath:instancePath+"/paymentSettings",parentData:data,parentDataProperty:"paymentSettings",rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.taxSettings !== undefined){let data3 = data.taxSettings;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){const _errs9 = errors;for(const key1 in data3){if(!(((((key1 === "taxSourceKey") || (key1 === "taxesOnInterestEnabled")) || (key1 === "taxesOnPenaltyEnabled")) || (key1 === "taxCalculationMethod")) || (key1 === "taxesOnFeesEnabled"))){validate11.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/TaxSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data3.taxSourceKey !== undefined){const _errs10 = errors;if(typeof data3.taxSourceKey !== "string"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxSourceKey",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data3.taxesOnInterestEnabled !== undefined){const _errs12 = errors;if(typeof data3.taxesOnInterestEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxesOnInterestEnabled",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxesOnInterestEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data3.taxesOnPenaltyEnabled !== undefined){const _errs14 = errors;if(typeof data3.taxesOnPenaltyEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxesOnPenaltyEnabled",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxesOnPenaltyEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data3.taxCalculationMethod !== undefined){let data7 = data3.taxCalculationMethod;const _errs16 = errors;if(!((data7 === "INCLUSIVE") || (data7 === "EXCLUSIVE"))){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxCalculationMethod",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema20.properties.taxCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data3.taxesOnFeesEnabled !== undefined){const _errs17 = errors;if(typeof data3.taxesOnFeesEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/taxesOnFeesEnabled",schemaPath:"#/$defs/TaxSettingsaf30/properties/taxesOnFeesEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs17 === errors;}else {var valid2 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/TaxSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.redrawSettings !== undefined){let data9 = data.redrawSettings;const _errs19 = errors;const _errs20 = errors;if(errors === _errs20){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){let missing1;if((data9.allowRedraw === undefined) && (missing1 = "allowRedraw")){validate11.errors = [{instancePath:instancePath+"/redrawSettings",schemaPath:"#/$defs/ProductRedrawSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs22 = errors;for(const key2 in data9){if(!(key2 === "allowRedraw")){validate11.errors = [{instancePath:instancePath+"/redrawSettings",schemaPath:"#/$defs/ProductRedrawSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs22 === errors){if(data9.allowRedraw !== undefined){if(typeof data9.allowRedraw !== "boolean"){validate11.errors = [{instancePath:instancePath+"/redrawSettings/allowRedraw",schemaPath:"#/$defs/ProductRedrawSettingsaf30/properties/allowRedraw/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}}}else {validate11.errors = [{instancePath:instancePath+"/redrawSettings",schemaPath:"#/$defs/ProductRedrawSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data11 = data.type;const _errs25 = errors;if(!(((((data11 === "FIXED_TERM_LOAN") || (data11 === "DYNAMIC_TERM_LOAN")) || (data11 === "INTEREST_FREE_LOAN")) || (data11 === "TRANCHED_LOAN")) || (data11 === "REVOLVING_CREDIT"))){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.arrearsSettings !== undefined){const _errs26 = errors;if(!(validate18(data.arrearsSettings, {instancePath:instancePath+"/arrearsSettings",parentData:data,parentDataProperty:"arrearsSettings",rootData}))){vErrors = vErrors === null ? validate18.errors : vErrors.concat(validate18.errors);errors = vErrors.length;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.newAccountSettings !== undefined){let data13 = data.newAccountSettings;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if(data13 && typeof data13 == "object" && !Array.isArray(data13)){let missing2;if((((data13.idGeneratorType === undefined) && (missing2 = "idGeneratorType")) || ((data13.accountInitialState === undefined) && (missing2 = "accountInitialState"))) || ((data13.idPattern === undefined) && (missing2 = "idPattern"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/NewAccountSettingsaf30/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs30 = errors;for(const key3 in data13){if(!(((key3 === "idGeneratorType") || (key3 === "accountInitialState")) || (key3 === "idPattern"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/NewAccountSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs30 === errors){if(data13.idGeneratorType !== undefined){let data14 = data13.idGeneratorType;const _errs31 = errors;if(!((data14 === "INCREMENTAL_NUMBER") || (data14 === "RANDOM_PATTERN"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/idGeneratorType",schemaPath:"#/$defs/NewAccountSettingsaf30/properties/idGeneratorType/enum",keyword:"enum",params:{allowedValues: schema25.properties.idGeneratorType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs31 === errors;}else {var valid6 = true;}if(valid6){if(data13.accountInitialState !== undefined){let data15 = data13.accountInitialState;const _errs32 = errors;if(!((((((data15 === "PARTIAL_APPLICATION") || (data15 === "PENDING_APPROVAL")) || (data15 === "APPROVED")) || (data15 === "ACTIVE")) || (data15 === "ACTIVE_IN_ARREARS")) || (data15 === "CLOSED"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/accountInitialState",schemaPath:"#/$defs/NewAccountSettingsaf30/properties/accountInitialState/enum",keyword:"enum",params:{allowedValues: schema25.properties.accountInitialState.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs32 === errors;}else {var valid6 = true;}if(valid6){if(data13.idPattern !== undefined){const _errs33 = errors;if(typeof data13.idPattern !== "string"){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/idPattern",schemaPath:"#/$defs/NewAccountSettingsaf30/properties/idPattern/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs33 === errors;}else {var valid6 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/NewAccountSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.interestSettings !== undefined){const _errs35 = errors;if(!(validate20(data.interestSettings, {instancePath:instancePath+"/interestSettings",parentData:data,parentDataProperty:"interestSettings",rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs36 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.currency !== undefined){let data19 = data.currency;const _errs38 = errors;const _errs39 = errors;if(errors === _errs39){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){const _errs41 = errors;for(const key4 in data19){if(!((key4 === "currencyCode") || (key4 === "code"))){validate11.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/$defs/Currencyaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs41 === errors){if(data19.currencyCode !== undefined){const _errs42 = errors;if(typeof data19.currencyCode !== "string"){validate11.errors = [{instancePath:instancePath+"/currency/currencyCode",schemaPath:"#/$defs/Currencyaf30/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs42 === errors;}else {var valid8 = true;}if(valid8){if(data19.code !== undefined){let data21 = data19.code;const _errs44 = errors;if(!(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((data21 === "AED") || (data21 === "AFN")) || (data21 === "ALL")) || (data21 === "AMD")) || (data21 === "ANG")) || (data21 === "AOA")) || (data21 === "ARS")) || (data21 === "AUD")) || (data21 === "AWG")) || (data21 === "AZN")) || (data21 === "BAM")) || (data21 === "BBD")) || (data21 === "BDT")) || (data21 === "BGN")) || (data21 === "BHD")) || (data21 === "BIF")) || (data21 === "BMD")) || (data21 === "BND")) || (data21 === "BOB")) || (data21 === "BOV")) || (data21 === "BRL")) || (data21 === "BSD")) || (data21 === "BTC")) || (data21 === "BTN")) || (data21 === "BWP")) || (data21 === "BYR")) || (data21 === "BYN")) || (data21 === "BZD")) || (data21 === "CAD")) || (data21 === "CDF")) || (data21 === "CHE")) || (data21 === "CHF")) || (data21 === "CHW")) || (data21 === "CLF")) || (data21 === "CLP")) || (data21 === "CNY")) || (data21 === "COP")) || (data21 === "COU")) || (data21 === "CRC")) || (data21 === "CUC")) || (data21 === "CUP")) || (data21 === "CVE")) || (data21 === "CZK")) || (data21 === "DJF")) || (data21 === "DKK")) || (data21 === "DOP")) || (data21 === "DZD")) || (data21 === "EGP")) || (data21 === "ERN")) || (data21 === "ETB")) || (data21 === "EUR")) || (data21 === "FJD")) || (data21 === "FKP")) || (data21 === "GBP")) || (data21 === "GEL")) || (data21 === "GHS")) || (data21 === "GIP")) || (data21 === "GMD")) || (data21 === "GNF")) || (data21 === "GTQ")) || (data21 === "GYD")) || (data21 === "HKD")) || (data21 === "HNL")) || (data21 === "HRK")) || (data21 === "HTG")) || (data21 === "HUF")) || (data21 === "IDR")) || (data21 === "ILS")) || (data21 === "INR")) || (data21 === "IQD")) || (data21 === "IRR")) || (data21 === "ISK")) || (data21 === "JMD")) || (data21 === "JOD")) || (data21 === "JPY")) || (data21 === "KES")) || (data21 === "KGS")) || (data21 === "KHR")) || (data21 === "KMF")) || (data21 === "KPW")) || (data21 === "KRW")) || (data21 === "KWD")) || (data21 === "KYD")) || (data21 === "KZT")) || (data21 === "LAK")) || (data21 === "LBP")) || (data21 === "LKR")) || (data21 === "LRD")) || (data21 === "LSL")) || (data21 === "LTL")) || (data21 === "LVL")) || (data21 === "LYD")) || (data21 === "MAD")) || (data21 === "MDL")) || (data21 === "MGA")) || (data21 === "MKD")) || (data21 === "MMK")) || (data21 === "MNT")) || (data21 === "MOP")) || (data21 === "MRO")) || (data21 === "MRU")) || (data21 === "MUR")) || (data21 === "MVR")) || (data21 === "MWK")) || (data21 === "MXN")) || (data21 === "MXV")) || (data21 === "MYR")) || (data21 === "MZN")) || (data21 === "NAD")) || (data21 === "NGN")) || (data21 === "NIO")) || (data21 === "NOK")) || (data21 === "NPR")) || (data21 === "NZD")) || (data21 === "OMR")) || (data21 === "PAB")) || (data21 === "PEN")) || (data21 === "PGK")) || (data21 === "PHP")) || (data21 === "PKR")) || (data21 === "PLN")) || (data21 === "PYG")) || (data21 === "QAR")) || (data21 === "RON")) || (data21 === "RSD")) || (data21 === "RUB")) || (data21 === "RWF")) || (data21 === "SAR")) || (data21 === "SBD")) || (data21 === "SCR")) || (data21 === "SDG")) || (data21 === "SEK")) || (data21 === "SGD")) || (data21 === "SHP")) || (data21 === "SLL")) || (data21 === "SOS")) || (data21 === "SRD")) || (data21 === "STD")) || (data21 === "STN")) || (data21 === "SVC")) || (data21 === "SYP")) || (data21 === "SZL")) || (data21 === "THB")) || (data21 === "TJS")) || (data21 === "TMT")) || (data21 === "TND")) || (data21 === "TOP")) || (data21 === "TRY")) || (data21 === "TTD")) || (data21 === "TWD")) || (data21 === "TZS")) || (data21 === "UAH")) || (data21 === "UGX")) || (data21 === "USD")) || (data21 === "USN")) || (data21 === "UYI")) || (data21 === "UYU")) || (data21 === "UYW")) || (data21 === "UZS")) || (data21 === "VED")) || (data21 === "VEF")) || (data21 === "VES")) || (data21 === "VND")) || (data21 === "VUV")) || (data21 === "WST")) || (data21 === "XAG")) || (data21 === "XAU")) || (data21 === "XAF")) || (data21 === "XBA")) || (data21 === "XBB")) || (data21 === "XBC")) || (data21 === "XBD")) || (data21 === "XCD")) || (data21 === "XDR")) || (data21 === "XOF")) || (data21 === "XPD")) || (data21 === "XPF")) || (data21 === "XPT")) || (data21 === "XSU")) || (data21 === "XTS")) || (data21 === "XUA")) || (data21 === "XXX")) || (data21 === "YER")) || (data21 === "ZAR")) || (data21 === "ZMK")) || (data21 === "ZWL")) || (data21 === "ZMW")) || (data21 === "SSP")) || (data21 === "NON_FIAT"))){validate11.errors = [{instancePath:instancePath+"/currency/code",schemaPath:"#/$defs/Currencyaf30/properties/code/enum",keyword:"enum",params:{allowedValues: schema32.properties.code.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs44 === errors;}else {var valid8 = true;}}}}else {validate11.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/$defs/Currencyaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs45 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){let data23 = data.state;const _errs47 = errors;if(!((data23 === "ACTIVE") || (data23 === "INACTIVE"))){validate11.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema12.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs47 === errors;}else {var valid0 = true;}if(valid0){if(data.penaltySettings !== undefined){const _errs48 = errors;if(!(validate26(data.penaltySettings, {instancePath:instancePath+"/penaltySettings",parentData:data,parentDataProperty:"penaltySettings",rootData}))){vErrors = vErrors === null ? validate26.errors : vErrors.concat(validate26.errors);errors = vErrors.length;}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.adjustInterestForFirstInstallment !== undefined){const _errs49 = errors;if(typeof data.adjustInterestForFirstInstallment !== "boolean"){validate11.errors = [{instancePath:instancePath+"/adjustInterestForFirstInstallment",schemaPath:"#/properties/adjustInterestForFirstInstallment/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs49 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs51 = errors;if(errors === _errs51){if(errors === _errs51){if(!(typeof data.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.feesSettings !== undefined){const _errs53 = errors;if(!(validate28(data.feesSettings, {instancePath:instancePath+"/feesSettings",parentData:data,parentDataProperty:"feesSettings",rootData}))){vErrors = vErrors === null ? validate28.errors : vErrors.concat(validate28.errors);errors = vErrors.length;}var valid0 = _errs53 === errors;}else {var valid0 = true;}if(valid0){if(data.accountLinkSettings !== undefined){let data28 = data.accountLinkSettings;const _errs54 = errors;const _errs55 = errors;if(errors === _errs55){if(data28 && typeof data28 == "object" && !Array.isArray(data28)){let missing3;if((data28.enabled === undefined) && (missing3 = "enabled")){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings",schemaPath:"#/$defs/AccountLinkSettingsaf30/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {const _errs57 = errors;for(const key5 in data28){if(!((((key5 === "linkedAccountOptions") || (key5 === "settlementMethod")) || (key5 === "enabled")) || (key5 === "linkableDepositProductKey"))){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings",schemaPath:"#/$defs/AccountLinkSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"}];return false;break;}}if(_errs57 === errors){if(data28.linkedAccountOptions !== undefined){let data29 = data28.linkedAccountOptions;const _errs58 = errors;if(errors === _errs58){if(Array.isArray(data29)){var valid11 = true;const len0 = data29.length;for(let i0=0; i0<len0; i0++){let data30 = data29[i0];const _errs60 = errors;if(!((data30 === "AUTO_LINK_ACCOUNTS") || (data30 === "AUTO_CREATE_LINKED_ACCOUNTS"))){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkedAccountOptions/" + i0,schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkedAccountOptions/items/enum",keyword:"enum",params:{allowedValues: schema40.properties.linkedAccountOptions.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid11 = _errs60 === errors;if(!valid11){break;}}if(valid11){let i1 = data29.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data29[i1], data29[j0])){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkedAccountOptions",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkedAccountOptions/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkedAccountOptions",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkedAccountOptions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid10 = _errs58 === errors;}else {var valid10 = true;}if(valid10){if(data28.settlementMethod !== undefined){let data31 = data28.settlementMethod;const _errs61 = errors;if(!(((data31 === "FULL_DUE_AMOUNTS") || (data31 === "PARTIAL_DUE_AMOUNTS")) || (data31 === "NO_AUTOMATED_TRANSFERS"))){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/settlementMethod",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/settlementMethod/enum",keyword:"enum",params:{allowedValues: schema40.properties.settlementMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid10 = _errs61 === errors;}else {var valid10 = true;}if(valid10){if(data28.enabled !== undefined){const _errs62 = errors;if(typeof data28.enabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/enabled",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid10 = _errs62 === errors;}else {var valid10 = true;}if(valid10){if(data28.linkableDepositProductKey !== undefined){const _errs64 = errors;if(typeof data28.linkableDepositProductKey !== "string"){validate11.errors = [{instancePath:instancePath+"/accountLinkSettings/linkableDepositProductKey",schemaPath:"#/$defs/AccountLinkSettingsaf30/properties/linkableDepositProductKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid10 = _errs64 === errors;}else {var valid10 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/accountLinkSettings",schemaPath:"#/$defs/AccountLinkSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs54 === errors;}else {var valid0 = true;}if(valid0){if(data.securitySettings !== undefined){let data34 = data.securitySettings;const _errs66 = errors;const _errs67 = errors;if(errors === _errs67){if(data34 && typeof data34 == "object" && !Array.isArray(data34)){const _errs69 = errors;for(const key6 in data34){if(!(((key6 === "isCollateralEnabled") || (key6 === "isGuarantorsEnabled")) || (key6 === "requiredGuaranties"))){validate11.errors = [{instancePath:instancePath+"/securitySettings",schemaPath:"#/$defs/SecuritySettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key6},message:"must NOT have additional properties"}];return false;break;}}if(_errs69 === errors){if(data34.isCollateralEnabled !== undefined){const _errs70 = errors;if(typeof data34.isCollateralEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/securitySettings/isCollateralEnabled",schemaPath:"#/$defs/SecuritySettingsaf30/properties/isCollateralEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid14 = _errs70 === errors;}else {var valid14 = true;}if(valid14){if(data34.isGuarantorsEnabled !== undefined){const _errs72 = errors;if(typeof data34.isGuarantorsEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/securitySettings/isGuarantorsEnabled",schemaPath:"#/$defs/SecuritySettingsaf30/properties/isGuarantorsEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid14 = _errs72 === errors;}else {var valid14 = true;}if(valid14){if(data34.requiredGuaranties !== undefined){let data37 = data34.requiredGuaranties;const _errs74 = errors;if(!((typeof data37 == "number") && (isFinite(data37)))){validate11.errors = [{instancePath:instancePath+"/securitySettings/requiredGuaranties",schemaPath:"#/$defs/SecuritySettingsaf30/properties/requiredGuaranties/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid14 = _errs74 === errors;}else {var valid14 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/securitySettings",schemaPath:"#/$defs/SecuritySettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs66 === errors;}else {var valid0 = true;}if(valid0){if(data.templates !== undefined){let data38 = data.templates;const _errs76 = errors;if(errors === _errs76){if(Array.isArray(data38)){var valid15 = true;const len1 = data38.length;for(let i2=0; i2<len1; i2++){let data39 = data38[i2];const _errs78 = errors;const _errs79 = errors;if(errors === _errs79){if(data39 && typeof data39 == "object" && !Array.isArray(data39)){const _errs81 = errors;for(const key7 in data39){if(!(((((key7 === "name") || (key7 === "encodedKey")) || (key7 === "creationDate")) || (key7 === "type")) || (key7 === "lastModifiedDate"))){validate11.errors = [{instancePath:instancePath+"/templates/" + i2,schemaPath:"#/$defs/DocumentTemplateaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key7},message:"must NOT have additional properties"}];return false;break;}}if(_errs81 === errors){if(data39.name !== undefined){const _errs82 = errors;if(typeof data39.name !== "string"){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/name",schemaPath:"#/$defs/DocumentTemplateaf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid17 = _errs82 === errors;}else {var valid17 = true;}if(valid17){if(data39.encodedKey !== undefined){const _errs84 = errors;if(typeof data39.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/encodedKey",schemaPath:"#/$defs/DocumentTemplateaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid17 = _errs84 === errors;}else {var valid17 = true;}if(valid17){if(data39.creationDate !== undefined){const _errs86 = errors;if(errors === _errs86){if(errors === _errs86){if(!(typeof data39.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/creationDate",schemaPath:"#/$defs/DocumentTemplateaf30/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid17 = _errs86 === errors;}else {var valid17 = true;}if(valid17){if(data39.type !== undefined){let data43 = data39.type;const _errs88 = errors;if(!(((data43 === "ACCOUNT") || (data43 === "TRANSACTION")) || (data43 === "ACCOUNT_WITH_TRANSACTIONS"))){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/type",schemaPath:"#/$defs/DocumentTemplateaf30/properties/type/enum",keyword:"enum",params:{allowedValues: schema42.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid17 = _errs88 === errors;}else {var valid17 = true;}if(valid17){if(data39.lastModifiedDate !== undefined){const _errs89 = errors;if(errors === _errs89){if(errors === _errs89){if(!(typeof data39.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/templates/" + i2+"/lastModifiedDate",schemaPath:"#/$defs/DocumentTemplateaf30/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid17 = _errs89 === errors;}else {var valid17 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/templates/" + i2,schemaPath:"#/$defs/DocumentTemplateaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid15 = _errs78 === errors;if(!valid15){break;}}}else {validate11.errors = [{instancePath:instancePath+"/templates",schemaPath:"#/properties/templates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs76 === errors;}else {var valid0 = true;}if(valid0){if(data.gracePeriodSettings !== undefined){const _errs91 = errors;if(!(validate32(data.gracePeriodSettings, {instancePath:instancePath+"/gracePeriodSettings",parentData:data,parentDataProperty:"gracePeriodSettings",rootData}))){vErrors = vErrors === null ? validate32.errors : vErrors.concat(validate32.errors);errors = vErrors.length;}var valid0 = _errs91 === errors;}else {var valid0 = true;}if(valid0){if(data.offsetSettings !== undefined){let data46 = data.offsetSettings;const _errs92 = errors;const _errs93 = errors;if(errors === _errs93){if(data46 && typeof data46 == "object" && !Array.isArray(data46)){const _errs95 = errors;for(const key8 in data46){if(!(key8 === "allowOffset")){validate11.errors = [{instancePath:instancePath+"/offsetSettings",schemaPath:"#/$defs/OffsetSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key8},message:"must NOT have additional properties"}];return false;break;}}if(_errs95 === errors){if(data46.allowOffset !== undefined){if(typeof data46.allowOffset !== "boolean"){validate11.errors = [{instancePath:instancePath+"/offsetSettings/allowOffset",schemaPath:"#/$defs/OffsetSettingsaf30/properties/allowOffset/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}}else {validate11.errors = [{instancePath:instancePath+"/offsetSettings",schemaPath:"#/$defs/OffsetSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs92 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs98 = errors;if(errors === _errs98){if(errors === _errs98){if(!(typeof data.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs98 === errors;}else {var valid0 = true;}if(valid0){if(data.creditArrangementSettings !== undefined){let data49 = data.creditArrangementSettings;const _errs100 = errors;const _errs101 = errors;if(errors === _errs101){if(data49 && typeof data49 == "object" && !Array.isArray(data49)){const _errs103 = errors;for(const key9 in data49){if(!(key9 === "creditArrangementRequirement")){validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings",schemaPath:"#/$defs/CreditArrangementSettingsaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key9},message:"must NOT have additional properties"}];return false;break;}}if(_errs103 === errors){if(data49.creditArrangementRequirement !== undefined){let data50 = data49.creditArrangementRequirement;if(!(((data50 === "OPTIONAL") || (data50 === "REQUIRED")) || (data50 === "NOT_REQUIRED"))){validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings/creditArrangementRequirement",schemaPath:"#/$defs/CreditArrangementSettingsaf30/properties/creditArrangementRequirement/enum",keyword:"enum",params:{allowedValues: schema46.properties.creditArrangementRequirement.enum},message:"must be equal to one of the allowed values"}];return false;}}}}else {validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings",schemaPath:"#/$defs/CreditArrangementSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs100 === errors;}else {var valid0 = true;}if(valid0){if(data.allowCustomRepaymentAllocation !== undefined){const _errs105 = errors;if(typeof data.allowCustomRepaymentAllocation !== "boolean"){validate11.errors = [{instancePath:instancePath+"/allowCustomRepaymentAllocation",schemaPath:"#/properties/allowCustomRepaymentAllocation/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs105 === errors;}else {var valid0 = true;}if(valid0){if(data.scheduleSettings !== undefined){const _errs107 = errors;if(!(validate34(data.scheduleSettings, {instancePath:instancePath+"/scheduleSettings",parentData:data,parentDataProperty:"scheduleSettings",rootData}))){vErrors = vErrors === null ? validate34.errors : vErrors.concat(validate34.errors);errors = vErrors.length;}var valid0 = _errs107 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingSettings !== undefined){const _errs108 = errors;if(!(validate36(data.accountingSettings, {instancePath:instancePath+"/accountingSettings",parentData:data,parentDataProperty:"accountingSettings",rootData}))){vErrors = vErrors === null ? validate36.errors : vErrors.concat(validate36.errors);errors = vErrors.length;}var valid0 = _errs108 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs109 = errors;if(typeof data.name !== "string"){validate11.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs109 === errors;}else {var valid0 = true;}if(valid0){if(data.loanAmountSettings !== undefined){const _errs111 = errors;if(!(validate38(data.loanAmountSettings, {instancePath:instancePath+"/loanAmountSettings",parentData:data,parentDataProperty:"loanAmountSettings",rootData}))){vErrors = vErrors === null ? validate38.errors : vErrors.concat(validate38.errors);errors = vErrors.length;}var valid0 = _errs111 === errors;}else {var valid0 = true;}if(valid0){if(data.category !== undefined){let data56 = data.category;const _errs112 = errors;if(!((((((data56 === "PERSONAL_LENDING") || (data56 === "PURCHASE_FINANCING")) || (data56 === "RETAIL_MORTGAGES")) || (data56 === "SME_LENDING")) || (data56 === "COMMERCIAL")) || (data56 === "UNCATEGORIZED"))){validate11.errors = [{instancePath:instancePath+"/category",schemaPath:"#/properties/category/enum",keyword:"enum",params:{allowedValues: schema12.properties.category.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs112 === errors;}else {var valid0 = true;}if(valid0){if(data.internalControls !== undefined){const _errs113 = errors;if(!(validate40(data.internalControls, {instancePath:instancePath+"/internalControls",parentData:data,parentDataProperty:"internalControls",rootData}))){vErrors = vErrors === null ? validate40.errors : vErrors.concat(validate40.errors);errors = vErrors.length;}var valid0 = _errs113 === errors;}else {var valid0 = true;}if(valid0){if(data.fundingSettings !== undefined){const _errs114 = errors;if(!(validate42(data.fundingSettings, {instancePath:instancePath+"/fundingSettings",parentData:data,parentDataProperty:"fundingSettings",rootData}))){vErrors = vErrors === null ? validate42.errors : vErrors.concat(validate42.errors);errors = vErrors.length;}var valid0 = _errs114 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;