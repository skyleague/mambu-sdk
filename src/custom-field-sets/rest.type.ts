/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import AjvValidator from 'ajv'
import type { ValidateFunction } from 'ajv'

export type GetAllBySetIdResponse = CustomFieldMeta[]

export const GetAllBySetIdResponse = {
    validate: require('./schemas/get-all-by-set-id-response.schema.js') as ValidateFunction<GetAllBySetIdResponse>,
    get schema() {
        return GetAllBySetIdResponse.validate.schema
    },
    get errors() {
        return GetAllBySetIdResponse.validate.errors ?? undefined
    },
    is: (o: unknown): o is GetAllBySetIdResponse => GetAllBySetIdResponse.validate(o) === true,
} as const

export interface ErrorResponse {
    errors?: RestError[]
}

export const ErrorResponse = {
    validate: require('./schemas/error-response.schema.js') as ValidateFunction<ErrorResponse>,
    get schema() {
        return ErrorResponse.validate.schema
    },
    get errors() {
        return ErrorResponse.validate.errors ?? undefined
    },
    is: (o: unknown): o is ErrorResponse => ErrorResponse.validate(o) === true,
    assert: (o: unknown) => {
        if (!ErrorResponse.validate(o)) {
            throw new AjvValidator.ValidationError(ErrorResponse.errors ?? [])
        }
    },
} as const

export type GetAllResponse = CustomFieldSetMeta[]

export const GetAllResponse = {
    validate: require('./schemas/get-all-response.schema.js') as ValidateFunction<GetAllResponse>,
    get schema() {
        return GetAllResponse.validate.schema
    },
    get errors() {
        return GetAllResponse.validate.errors ?? undefined
    },
    is: (o: unknown): o is GetAllResponse => GetAllResponse.validate(o) === true,
} as const

/**
 * Custom Field Date Transfer Object
 */
export interface CustomFieldMeta {
    displaySettings?: CustomFieldDisplaySettings
    /**
     * Date at which the latest update was performed for this field
     */
    lastModifiedDate?: string
    /**
     * Information on what record types the custom field is available for.
     */
    usage?: CustomFieldUsage[]
    /**
     * Indicates that the field has predefined selections and only those can be used to populate it
     */
    selectionOptions?: CustomFieldSelectionOption[]
    editRights?: CustomFieldEditRights
    /**
     * Date at which the custom field was created
     */
    creationDate?: string
    /**
     * Supported input type
     */
    type?: 'FREE_TEXT' | 'SELECTION' | 'NUMBER' | 'CHECKBOX' | 'DATE' | 'DATE_TIME' | 'CLIENT_LINK' | 'GROUP_LINK' | 'USER_LINK'
    viewRights?: CustomFieldViewRights
    valueValidationSettings?: CustomFieldValueValidationSettings
    /**
     * Indicates with what object the custom field is associated
     */
    availableFor?:
        | 'CLIENT'
        | 'GROUP'
        | 'CREDIT_ARRANGEMENT'
        | 'LOAN_ACCOUNT'
        | 'GUARANTOR'
        | 'ASSET'
        | 'DEPOSIT_ACCOUNT'
        | 'DEPOSIT_PRODUCT'
        | 'TRANSACTION_CHANNEL'
        | 'TRANSACTION_TYPE'
        | 'BRANCH'
        | 'CENTRE'
        | 'USER'
    /**
     * Indicates the master field on which the dependency is based upon.
     */
    dependentFieldKey?: string
    /**
     * The encoded key of the entity, generated, globally unique
     */
    encodedKey?: string
    /**
     * User-defined ID, globally unique.
     */
    id?: string
    /**
     * Indicates whether the field is active or inactive
     */
    state?: 'ACTIVE' | 'INACTIVE'
}

/**
 * Groups all fields related to a custom field's display settings
 */
export interface CustomFieldDisplaySettings {
    /**
     * Free-text description of the field.
     */
    description?: string
    /**
     * Field display size in the UI.
     */
    fieldSize?: 'SHORT' | 'LONG'
    /**
     * Custom field position in the custom field set.
     */
    position?: number
    /**
     * Shows the original id of the built in custom field
     */
    builtInId?:
        | 'FIRST_NAME'
        | 'MIDDLE_NAME'
        | 'LAST_NAME'
        | 'BIRTHDATE'
        | 'GENDER'
        | 'MOBILE_PHONE'
        | 'MOBILE_PHONE_2'
        | 'HOME_PHONE'
        | 'EMAIL_ADDRESS'
    /**
     * User-defined name, displayed in the UI.
     */
    displayName?: string
}

/**
 * Information on what record types the custom field is available for.
 */
export interface CustomFieldUsage {
    /**
     * Indicates whether the field is displayed by default on create/edit page for this record type.
     */
    default?: boolean
    /**
     * Indicates the key of the record type (eg client type)
     */
    objectKey?: string
    /**
     * Indicates whether the field is mandatory or not for this record type.
     */
    required?: boolean
}

/**
 * Groups all fields related to a custom field's selection option
 */
export interface CustomFieldSelectionOption {
    /**
     * Indicates the key for the value on the master field.
     */
    forSelectionKey?: string
    /**
     * Indicates the value of the master field.
     */
    forValue?: string
    /**
     * List of values that can be used in the slave field based on current master selection.
     */
    availableOptions?: CustomFieldAvailableOption[]
}

/**
 * Groups the fields related to one option available within a selection
 */
export interface CustomFieldAvailableOption {
    /**
     * Selection score
     */
    score?: number
    /**
     * System-generated ID of the predefined value
     */
    selectionKey?: string
    /**
     * Predefined value name
     */
    value?: string
}

/**
 * Settings that indicate the defined editing rights by role for the custom field
 */
export interface CustomFieldEditRights {
    /**
     * Indicates whether the field can be edited by all users or by roles
     */
    allUsers?: boolean
    /**
     * Lists the IDs of the roles that have edit rights for this field when it's not accessible by all users
     */
    roles?: string[]
}

/**
 * Settings that indicate the defined view rights by role for the custom field
 */
export interface CustomFieldViewRights {
    /**
     * Indicates whether the field can be viewed by all users or by roles
     */
    allUsers?: boolean
    /**
     * Lists the IDs of the roles that have view rights for this field when it's not accessible by all users
     */
    roles?: string[]
}

/**
 * Settings for field input validation.
 */
export interface CustomFieldValueValidationSettings {
    /**
     * Indicates if a validation is set in terms of expected character type/format
     */
    validationPattern?: string
    /**
     * Indicates whether this field allows duplicate values or not
     */
    unique?: boolean
}

export interface RestError {
    errorCode?: number
    errorSource?: string
    errorReason?: string
}

/**
 * Model representation of a Custom Field Set
 */
export interface CustomFieldSetMeta {
    displaySettings?: CustomFieldSetDisplaySettings
    /**
     * Indicates the entity that the custom field set is associated with (eg. clients or any entity that allows CF definition)
     */
    availableFor?:
        | 'CLIENT'
        | 'GROUP'
        | 'CREDIT_ARRANGEMENT'
        | 'LOAN_ACCOUNT'
        | 'GUARANTOR'
        | 'ASSET'
        | 'DEPOSIT_ACCOUNT'
        | 'DEPOSIT_PRODUCT'
        | 'TRANSACTION_CHANNEL'
        | 'TRANSACTION_TYPE'
        | 'BRANCH'
        | 'CENTRE'
        | 'USER'
    /**
     * This section lists all the custom fields associated with this set
     */
    customFields?: CustomFieldIdentity[]
    /**
     * Free text field to store eventual notes with regard to custom field group purpose/details
     */
    description?: string
    /**
     * The encoded key of the entity, generated, globally unique
     */
    encodedKey?: string
    /**
     * User-defined ID, gobally unique
     */
    id?: string
    /**
     * Date at which the custom field set was created
     */
    creationDate?: string
    /**
     * The usage decides how the custom field set will be used in the UI and how the custom field values will be stored. For STANDARD set type the custom field set can be used only once (i.e Personal Information). For GROUPED set type the custom field set can be used multiple times (i.e Addresses). For further details please see [here](https://support.mambu.com/customer/en/portal/articles/1986000-custom-fields?b_id=873#2)
     */
    fieldSetType?: 'STANDARD' | 'GROUPED'
}

/**
 * Wrapper holds the display properties of a Custom Field Set
 */
export interface CustomFieldSetDisplaySettings {
    /**
     * Represents the order of the custom field set (starts from 0)
     */
    position?: number
    /**
     * User-provided name of the custom field set
     */
    displayName?: string
    /**
     * This is used only for builtIn custom field sets and can have two possible values:
     * True - when this is a "mambu" field set,
     * False - when this is a tenant-defined field set
     */
    builtIn?: boolean
}

/**
 * A simple representation, holds only the information that identifies the custom field
 */
export interface CustomFieldIdentity {
    /**
     * The encoded key of the entity, generated, globally unique
     */
    encodedKey?: string
    /**
     * User-provided ID of the custom field
     */
    id?: string
}
