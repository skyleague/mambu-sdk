/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"Subscription","description":"Subscription is a high level consumption unit. Subscriptions allow applications to easily scale the number of clients by managing consumed event offsets and distributing load between instances. The key properties that identify a subscription are `owning_application`, `event_types` and `consumer_group`. It is not possible to have two different subscriptions with these properties being the same.","properties":{"id":{"type":"string","title":"id","description":"ID of subscription that was created. Is generated by Mambu, should not be specified when creating a subscription.","minLength":1},"owning_application":{"type":"string","title":"owning_application","description":"The id of application owning the subscription.","minLength":1},"event_types":{"type":"array","title":"event_types","description":"EventTypes to subscribe to. The order is not important. Subscriptions that differ only by the order of EventTypes will be considered the same and will have the same id. The size of the `event_type`s list is limited by the total number of partitions within these event types. Default limit for partition count is `100`.","items":{"type":"string"}},"consumer_group":{"type":"string","title":"consumer_group","description":"The value describing the use case of this subscription. In general that is an additional identifier used to differ subscriptions having the same `owning_application` and `event_types`.","minLength":1},"created_at":{"type":"string","title":"created_at","description":"Timestamp of creation of the subscription. This is generated by Mambu. It should not be specified when creating subscription and sending it may result in a client error.","minLength":1,"format":"date-time"},"updated_at":{"type":"string","title":"updated_at","description":"Timestamp of last update of the subscription. This is generated by Mambu. It should not be specified when creating subscription and sending it may result in a client error. Its initial value is same as `created_at`.","minLength":1,"format":"date-time"},"read_from":{"type":"string","title":"read_from","description":"Position to start reading events from. Currently supported values: - `begin` - read from the oldest available event. - `end` - read from the most recent offset. - `cursors` - read from cursors provided in initial_cursors property. Applied when the client starts reading from a subscription.","minLength":1},"initial_cursors":{"type":"array","title":"initial_cursors","description":"List of cursors to start reading from. This property is required when `read_from` = cursors. The `initial` cursors should cover all partitions of subscription. Clients will get events starting from next offset positions.","items":{"description":"List of cursors to start reading from. This property is required when `read_from` = cursors. The `initial` cursors should cover all partitions of subscription. Clients will get events starting from next offset positions.","$ref":"#/$defs/SubscriptionCursorWithoutTokena147"},"minItems":1,"uniqueItems":true}},"required":["owning_application","event_types"],"additionalProperties":false,"$defs":{"SubscriptionCursorWithoutTokena147":{"title":"Subscription-Cursor-Without-Token","description":""}}};const schema12 = {"title":"Subscription-Cursor-Without-Token","description":""};const func4 = require("ajv/dist/runtime/ucs2length").default;const func0 = require("ajv/dist/runtime/equal").default;function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.owning_application === undefined) && (missing0 = "owning_application")) || ((data.event_types === undefined) && (missing0 = "event_types"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((((key0 === "id") || (key0 === "owning_application")) || (key0 === "event_types")) || (key0 === "consumer_group")) || (key0 === "created_at")) || (key0 === "updated_at")) || (key0 === "read_from")) || (key0 === "initial_cursors"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.id !== undefined){let data0 = data.id;const _errs2 = errors;if(errors === _errs2){if(typeof data0 === "string"){if(func4(data0) < 1){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.owning_application !== undefined){let data1 = data.owning_application;const _errs4 = errors;if(errors === _errs4){if(typeof data1 === "string"){if(func4(data1) < 1){validate10.errors = [{instancePath:instancePath+"/owning_application",schemaPath:"#/properties/owning_application/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/owning_application",schemaPath:"#/properties/owning_application/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.event_types !== undefined){let data2 = data.event_types;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs8 = errors;if(typeof data2[i0] !== "string"){validate10.errors = [{instancePath:instancePath+"/event_types/" + i0,schemaPath:"#/properties/event_types/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs8 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/event_types",schemaPath:"#/properties/event_types/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.consumer_group !== undefined){let data4 = data.consumer_group;const _errs10 = errors;if(errors === _errs10){if(typeof data4 === "string"){if(func4(data4) < 1){validate10.errors = [{instancePath:instancePath+"/consumer_group",schemaPath:"#/properties/consumer_group/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/consumer_group",schemaPath:"#/properties/consumer_group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.created_at !== undefined){let data5 = data.created_at;const _errs12 = errors;if(errors === _errs12){if(errors === _errs12){if(typeof data5 === "string"){if(func4(data5) < 1){validate10.errors = [{instancePath:instancePath+"/created_at",schemaPath:"#/properties/created_at/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/created_at",schemaPath:"#/properties/created_at/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.updated_at !== undefined){let data6 = data.updated_at;const _errs14 = errors;if(errors === _errs14){if(errors === _errs14){if(typeof data6 === "string"){if(func4(data6) < 1){validate10.errors = [{instancePath:instancePath+"/updated_at",schemaPath:"#/properties/updated_at/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/updated_at",schemaPath:"#/properties/updated_at/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.read_from !== undefined){let data7 = data.read_from;const _errs16 = errors;if(errors === _errs16){if(typeof data7 === "string"){if(func4(data7) < 1){validate10.errors = [{instancePath:instancePath+"/read_from",schemaPath:"#/properties/read_from/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/read_from",schemaPath:"#/properties/read_from/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.initial_cursors !== undefined){let data8 = data.initial_cursors;const _errs18 = errors;if(errors === _errs18){if(Array.isArray(data8)){if(data8.length < 1){validate10.errors = [{instancePath:instancePath+"/initial_cursors",schemaPath:"#/properties/initial_cursors/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid2 = true;const len1 = data8.length;for(let i1=0; i1<len1; i1++){const _errs20 = errors;var valid2 = _errs20 === errors;if(!valid2){break;}}if(valid2){let i2 = data8.length;let j0;if(i2 > 1){outer0:for(;i2--;){for(j0 = i2; j0--;){if(func0(data8[i2], data8[j0])){validate10.errors = [{instancePath:instancePath+"/initial_cursors",schemaPath:"#/properties/initial_cursors/uniqueItems",keyword:"uniqueItems",params:{i: i2, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i2+" are identical)"}];return false;break outer0;}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/initial_cursors",schemaPath:"#/properties/initial_cursors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;