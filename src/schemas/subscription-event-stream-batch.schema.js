/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"SubscriptionEventStreamBatch","type":"object","description":"One chunk of events in a stream. A batch consists of an array of `event`s plus a `cursor` pointing to the offset of the last `event` in the stream.\n\nThe size of the array of `event` is limited by the parameters used to initialize a Stream.\n\nSequential batches might present repeated cursors if no new events have arrived.","properties":{"cursor":{"$ref":"#/$defs/SubscriptionCursor"},"events":{"type":"array","description":"[Payload of an Event. Usually represents a status transition in a Business process.]","items":{"$ref":"#/$defs/Event"},"minItems":1,"uniqueItems":true},"info":{"$ref":"#/$defs/StreamInfo"}},"required":["cursor"],"additionalProperties":true,"$defs":{"SubscriptionCursor":{"type":"object","description":"","properties":{"cursor_token":{"type":"string","description":"An opaque value defined by the server.","minLength":1},"event_type":{"type":"string","description":"The name of the event type this partition's events belong to.","minLength":1},"offset":{"type":"string","description":"Offset of the event being pointed to. Note that if you want to specify beginning position of a stream with first event at offset `N`, you should specify offset `N-1`. This applies in cases when you create new subscription or reset subscription offsets. Also for stream start offsets one can use two special values: - `begin` - read from the oldest available event. - `end` - read from the most recent offset.","minLength":1},"partition":{"type":"string","description":"Id of the partition pointed to by this cursor.","minLength":1}},"required":["cursor_token","event_type","offset","partition"],"additionalProperties":true},"Event":{"type":"object","description":"Payload of an Event. Usually represents a status transition in a Business process.","properties":{"body":{"anyOf":[{"type":"string"},{"type":"object","additionalProperties":true}]},"metadata":{"$ref":"#/$defs/EventMetadata"},"template_name":{"type":"string","description":"Name of the notification template.","minLength":1}},"required":["body","metadata","template_name"],"additionalProperties":true},"EventMetadata":{"type":"object","description":"Metadata for this Event.","properties":{"category":{"type":"string","description":"Indicates if the content of the notification can be configured in Mambu or it is fixed. Currently only one category is supported: `DATA`","minLength":1},"content_type":{"description":"Notification content format.","enum":["application/xml","application/json","text/plain; charset=UTF-8"]},"eid":{"type":"string","description":"Unique identifier of this Event. Consumers MIGHT use this value to assert uniqueness of reception of the Event.","minLength":1,"format":"uuid"},"event_type":{"type":"string","description":"The EventType of this Event.","minLength":1},"occurred_at":{"type":"string","description":"Timestamp of creation of the Event generated by Mambu.","minLength":1,"format":"date-time"}},"required":["category","content_type","eid","event_type","occurred_at"],"additionalProperties":true},"StreamInfo":{"type":"object","description":"This object contains general information about the stream. Used only for debugging purposes. We recommend logging this object in order to solve connection issues. \n\nClients should not parse this structure.","additionalProperties":true}}};const schema12 = {"type":"object","description":"","properties":{"cursor_token":{"type":"string","description":"An opaque value defined by the server.","minLength":1},"event_type":{"type":"string","description":"The name of the event type this partition's events belong to.","minLength":1},"offset":{"type":"string","description":"Offset of the event being pointed to. Note that if you want to specify beginning position of a stream with first event at offset `N`, you should specify offset `N-1`. This applies in cases when you create new subscription or reset subscription offsets. Also for stream start offsets one can use two special values: - `begin` - read from the oldest available event. - `end` - read from the most recent offset.","minLength":1},"partition":{"type":"string","description":"Id of the partition pointed to by this cursor.","minLength":1}},"required":["cursor_token","event_type","offset","partition"],"additionalProperties":true};const schema15 = {"type":"object","description":"This object contains general information about the stream. Used only for debugging purposes. We recommend logging this object in order to solve connection issues. \n\nClients should not parse this structure.","additionalProperties":true};const func4 = require("ajv/dist/runtime/ucs2length").default;const func0 = require("ajv/dist/runtime/equal").default;const schema13 = {"type":"object","description":"Payload of an Event. Usually represents a status transition in a Business process.","properties":{"body":{"anyOf":[{"type":"string"},{"type":"object","additionalProperties":true}]},"metadata":{"$ref":"#/$defs/EventMetadata"},"template_name":{"type":"string","description":"Name of the notification template.","minLength":1}},"required":["body","metadata","template_name"],"additionalProperties":true};const schema14 = {"type":"object","description":"Metadata for this Event.","properties":{"category":{"type":"string","description":"Indicates if the content of the notification can be configured in Mambu or it is fixed. Currently only one category is supported: `DATA`","minLength":1},"content_type":{"description":"Notification content format.","enum":["application/xml","application/json","text/plain; charset=UTF-8"]},"eid":{"type":"string","description":"Unique identifier of this Event. Consumers MIGHT use this value to assert uniqueness of reception of the Event.","minLength":1,"format":"uuid"},"event_type":{"type":"string","description":"The EventType of this Event.","minLength":1},"occurred_at":{"type":"string","description":"Timestamp of creation of the Event generated by Mambu.","minLength":1,"format":"date-time"}},"required":["category","content_type","eid","event_type","occurred_at"],"additionalProperties":true};const formats0 = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;const formats2 = require("ajv-formats/dist/formats").fullFormats["date-time"];function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.body === undefined) && (missing0 = "body")) || ((data.metadata === undefined) && (missing0 = "metadata"))) || ((data.template_name === undefined) && (missing0 = "template_name"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.body !== undefined){let data0 = data.body;const _errs2 = errors;const _errs3 = errors;let valid1 = false;const _errs4 = errors;if(typeof data0 !== "string"){const err0 = {instancePath:instancePath+"/body",schemaPath:"#/properties/body/anyOf/0/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var _valid0 = _errs4 === errors;valid1 = valid1 || _valid0;if(!valid1){const _errs6 = errors;if(errors === _errs6){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){}else {const err1 = {instancePath:instancePath+"/body",schemaPath:"#/properties/body/anyOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs6 === errors;valid1 = valid1 || _valid0;}if(!valid1){const err2 = {instancePath:instancePath+"/body",schemaPath:"#/properties/body/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate11.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.metadata !== undefined){let data1 = data.metadata;const _errs9 = errors;const _errs10 = errors;if(errors === _errs10){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;let valid3 = true;for( missing1 of schema14.required){valid3 = data1[missing1] !== undefined;if(!valid3){validate11.errors = [{instancePath:instancePath+"/metadata",schemaPath:"#/$defs/EventMetadata/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;break;}}if(valid3){if(data1.category !== undefined){let data2 = data1.category;const _errs13 = errors;if(errors === _errs13){if(typeof data2 === "string"){if(func4(data2) < 1){validate11.errors = [{instancePath:instancePath+"/metadata/category",schemaPath:"#/$defs/EventMetadata/properties/category/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/metadata/category",schemaPath:"#/$defs/EventMetadata/properties/category/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs13 === errors;}else {var valid4 = true;}if(valid4){if(data1.content_type !== undefined){let data3 = data1.content_type;const _errs15 = errors;if(!(((data3 === "application/xml") || (data3 === "application/json")) || (data3 === "text/plain; charset=UTF-8"))){validate11.errors = [{instancePath:instancePath+"/metadata/content_type",schemaPath:"#/$defs/EventMetadata/properties/content_type/enum",keyword:"enum",params:{allowedValues: schema14.properties.content_type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs15 === errors;}else {var valid4 = true;}if(valid4){if(data1.eid !== undefined){let data4 = data1.eid;const _errs16 = errors;if(errors === _errs16){if(errors === _errs16){if(typeof data4 === "string"){if(func4(data4) < 1){validate11.errors = [{instancePath:instancePath+"/metadata/eid",schemaPath:"#/$defs/EventMetadata/properties/eid/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}else {if(!(formats0.test(data4))){validate11.errors = [{instancePath:instancePath+"/metadata/eid",schemaPath:"#/$defs/EventMetadata/properties/eid/format",keyword:"format",params:{format: "uuid"},message:"must match format \""+"uuid"+"\""}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/metadata/eid",schemaPath:"#/$defs/EventMetadata/properties/eid/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data1.event_type !== undefined){let data5 = data1.event_type;const _errs18 = errors;if(errors === _errs18){if(typeof data5 === "string"){if(func4(data5) < 1){validate11.errors = [{instancePath:instancePath+"/metadata/event_type",schemaPath:"#/$defs/EventMetadata/properties/event_type/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/metadata/event_type",schemaPath:"#/$defs/EventMetadata/properties/event_type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data1.occurred_at !== undefined){let data6 = data1.occurred_at;const _errs20 = errors;if(errors === _errs20){if(errors === _errs20){if(typeof data6 === "string"){if(func4(data6) < 1){validate11.errors = [{instancePath:instancePath+"/metadata/occurred_at",schemaPath:"#/$defs/EventMetadata/properties/occurred_at/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}else {if(!(formats2.validate(data6))){validate11.errors = [{instancePath:instancePath+"/metadata/occurred_at",schemaPath:"#/$defs/EventMetadata/properties/occurred_at/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/metadata/occurred_at",schemaPath:"#/$defs/EventMetadata/properties/occurred_at/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs20 === errors;}else {var valid4 = true;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/metadata",schemaPath:"#/$defs/EventMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.template_name !== undefined){let data7 = data.template_name;const _errs22 = errors;if(errors === _errs22){if(typeof data7 === "string"){if(func4(data7) < 1){validate11.errors = [{instancePath:instancePath+"/template_name",schemaPath:"#/properties/template_name/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/template_name",schemaPath:"#/properties/template_name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.cursor === undefined) && (missing0 = "cursor")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.cursor !== undefined){let data0 = data.cursor;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing1;if(((((data0.cursor_token === undefined) && (missing1 = "cursor_token")) || ((data0.event_type === undefined) && (missing1 = "event_type"))) || ((data0.offset === undefined) && (missing1 = "offset"))) || ((data0.partition === undefined) && (missing1 = "partition"))){validate10.errors = [{instancePath:instancePath+"/cursor",schemaPath:"#/$defs/SubscriptionCursor/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data0.cursor_token !== undefined){let data1 = data0.cursor_token;const _errs6 = errors;if(errors === _errs6){if(typeof data1 === "string"){if(func4(data1) < 1){validate10.errors = [{instancePath:instancePath+"/cursor/cursor_token",schemaPath:"#/$defs/SubscriptionCursor/properties/cursor_token/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/cursor/cursor_token",schemaPath:"#/$defs/SubscriptionCursor/properties/cursor_token/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.event_type !== undefined){let data2 = data0.event_type;const _errs8 = errors;if(errors === _errs8){if(typeof data2 === "string"){if(func4(data2) < 1){validate10.errors = [{instancePath:instancePath+"/cursor/event_type",schemaPath:"#/$defs/SubscriptionCursor/properties/event_type/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/cursor/event_type",schemaPath:"#/$defs/SubscriptionCursor/properties/event_type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.offset !== undefined){let data3 = data0.offset;const _errs10 = errors;if(errors === _errs10){if(typeof data3 === "string"){if(func4(data3) < 1){validate10.errors = [{instancePath:instancePath+"/cursor/offset",schemaPath:"#/$defs/SubscriptionCursor/properties/offset/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/cursor/offset",schemaPath:"#/$defs/SubscriptionCursor/properties/offset/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.partition !== undefined){let data4 = data0.partition;const _errs12 = errors;if(errors === _errs12){if(typeof data4 === "string"){if(func4(data4) < 1){validate10.errors = [{instancePath:instancePath+"/cursor/partition",schemaPath:"#/$defs/SubscriptionCursor/properties/partition/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/cursor/partition",schemaPath:"#/$defs/SubscriptionCursor/properties/partition/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/cursor",schemaPath:"#/$defs/SubscriptionCursor/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.events !== undefined){let data5 = data.events;const _errs14 = errors;if(errors === _errs14){if(Array.isArray(data5)){if(data5.length < 1){validate10.errors = [{instancePath:instancePath+"/events",schemaPath:"#/properties/events/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid3 = true;const len0 = data5.length;for(let i0=0; i0<len0; i0++){const _errs16 = errors;if(!(validate11(data5[i0], {instancePath:instancePath+"/events/" + i0,parentData:data5,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid3 = _errs16 === errors;if(!valid3){break;}}if(valid3){let i1 = data5.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data5[i1], data5[j0])){validate10.errors = [{instancePath:instancePath+"/events",schemaPath:"#/properties/events/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/events",schemaPath:"#/properties/events/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data7 = data.info;const _errs17 = errors;const _errs18 = errors;if(errors === _errs18){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){}else {validate10.errors = [{instancePath:instancePath+"/info",schemaPath:"#/$defs/StreamInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs17 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;