/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'

export const RestError = z.object({
    errorCode: z.number().int().optional(),
    errorReason: z.string().optional(),
    errorSource: z.string().optional(),
})

export type RestError = z.infer<typeof RestError>

export const IdentificationDocumentTemplate = z
    .object({
        allowAttachments: z.boolean().describe('`TRUE` if a template allows files to be attached, `FALSE` otherwise.').optional(),
        documentIdTemplate: z
            .string()
            .describe(
                'The ID template constraint to define the ID number length and format. Templates consist of the characters `#`, `@`, and `$`, where `#` specifies a number, `@` a letter, and `$` a number or a letter.',
            )
            .optional(),
        documentType: z.string().describe('The type of the document. For example, passport.').optional(),
        encodedKey: z.string().describe('The encoded key of the ID template. It is auto generated and unique.').optional(),
        id: z.string().describe('The unique identifier for the template.').optional(),
        issuingAuthority: z.string().describe('The authority that issued the document.').optional(),
        mandatory: z
            .boolean()
            .describe('`TRUE` if a template is mandatory for all the individual clients, `FALSE` otherwise.')
            .optional(),
    })
    .describe('Represents a template for identification documents.')

export type IdentificationDocumentTemplate = z.infer<typeof IdentificationDocumentTemplate>

export const ErrorResponse = z.object({
    errors: RestError.array().optional(),
})

export type ErrorResponse = z.infer<typeof ErrorResponse>

export const GetAllResponse = IdentificationDocumentTemplate.array()

export type GetAllResponse = z.infer<typeof GetAllResponse>
