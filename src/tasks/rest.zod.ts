/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'

export const RestError = z.object({
    errorCode: z.number().int().optional(),
    errorReason: z.string().optional(),
    errorSource: z.string().optional(),
})

export type RestError = z.infer<typeof RestError>

export const Task = z
    .object({
        assignedUserKey: z.string().describe('The key of the user this task is assigned to.').optional(),
        createdByFullName: z.string().describe('The name of the user who created the task.').optional(),
        createdByUserKey: z
            .string()
            .describe(
                'The key of the user that created this task. The value is not editable and it is populated at task creation with the current user key.',
            )
            .optional(),
        creationDate: z.string().datetime({ offset: true }).describe('The date when the task was created.').optional(),
        description: z.string().describe('The description of the task.').optional(),
        dueDate: z.string().date().describe('The due date when the task has to be completed.'),
        encodedKey: z.string().describe('The encoded key of the task, which is auto generated, and must be unique.').optional(),
        id: z.number().int().describe('The ID of the task, which is uniquely generated for the task.').optional(),
        lastModifiedDate: z.string().datetime({ offset: true }).describe('The last date when the task was modified.').optional(),
        status: z
            .enum(['OPEN', 'COMPLETED'])
            .describe('The status of this task, a new task always has an `OPEN` status.')
            .optional(),
        taskLinkKey: z
            .string()
            .describe('The individual linked to this task. If null, it means nobody is linked to this task.')
            .optional(),
        taskLinkType: z
            .enum([
                'CLIENT',
                'GROUP',
                'LOAN_PRODUCT',
                'SAVINGS_PRODUCT',
                'CENTRE',
                'BRANCH',
                'USER',
                'LOAN_ACCOUNT',
                'DEPOSIT_ACCOUNT',
                'ID_DOCUMENT',
                'LINE_OF_CREDIT',
                'GL_JOURNAL_ENTRY',
            ])
            .describe('The type of the owner represented by the task link key.')
            .optional(),
        templateKey: z.string().describe('The template key used to create the task.').optional(),
        title: z.string().describe('The title of the task.').optional(),
    })
    .describe(
        `Represents a human task that can be assigned by one user to another. When a task is created, it's status is set to \`OPEN\`.`,
    )

export type Task = z.infer<typeof Task>

export const PatchOperation = z
    .object({
        from: z.string().describe('The field from where a value should be moved, when using move').optional(),
        op: z.enum(['ADD', 'REPLACE', 'REMOVE', 'MOVE']).describe('The change to perform'),
        path: z.string().describe('The field to perform the operation on'),
        value: z.unknown().describe('The value of the field, can be null').optional(),
    })
    .describe('A single change that needs to be made to a resource')

export type PatchOperation = z.infer<typeof PatchOperation>

export const ErrorResponse = z.object({
    errors: RestError.array().optional(),
})

export type ErrorResponse = z.infer<typeof ErrorResponse>

export const GetAllResponse = Task.array()

export type GetAllResponse = z.infer<typeof GetAllResponse>

export const PatchRequest = PatchOperation.array()

export type PatchRequest = z.infer<typeof PatchRequest>
