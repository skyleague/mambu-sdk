/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","type":"array","title":"getCommentsResponse","items":{"$ref":"#/$defs/Comment"},"$defs":{"Comment":{"type":"object","title":"Comment","description":"Comment Data Transfer Object","properties":{"ownerType":{"title":"ownerType","description":"The type of the entity that owns this comment","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date this comment was modified","format":"date-time"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the comment, auto generated, unique"},"text":{"type":"string","title":"text","description":"The message in the comment"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the comment","format":"date-time"},"ownerKey":{"type":"string","title":"ownerKey","description":"The owner key of the comment, representing the encoded key of the entity owning this comment"},"userKey":{"type":"string","title":"userKey","description":"The key of the user"}},"additionalProperties":false}}};const schema12 = {"type":"object","title":"Comment","description":"Comment Data Transfer Object","properties":{"ownerType":{"title":"ownerType","description":"The type of the entity that owns this comment","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date this comment was modified","format":"date-time"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the comment, auto generated, unique"},"text":{"type":"string","title":"text","description":"The message in the comment"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the comment","format":"date-time"},"ownerKey":{"type":"string","title":"ownerKey","description":"The owner key of the comment, representing the encoded key of the entity owning this comment"},"userKey":{"type":"string","title":"userKey","description":"The key of the user"}},"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs4 = errors;for(const key0 in data0){if(!(((((((key0 === "ownerType") || (key0 === "lastModifiedDate")) || (key0 === "encodedKey")) || (key0 === "text")) || (key0 === "creationDate")) || (key0 === "ownerKey")) || (key0 === "userKey"))){validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/Comment/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs4 === errors){if(data0.ownerType !== undefined){let data1 = data0.ownerType;const _errs5 = errors;if(!((((((((((((data1 === "CLIENT") || (data1 === "GROUP")) || (data1 === "LOAN_PRODUCT")) || (data1 === "SAVINGS_PRODUCT")) || (data1 === "CENTRE")) || (data1 === "BRANCH")) || (data1 === "USER")) || (data1 === "LOAN_ACCOUNT")) || (data1 === "DEPOSIT_ACCOUNT")) || (data1 === "ID_DOCUMENT")) || (data1 === "LINE_OF_CREDIT")) || (data1 === "GL_JOURNAL_ENTRY"))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/ownerType",schemaPath:"#/$defs/Comment/properties/ownerType/enum",keyword:"enum",params:{allowedValues: schema12.properties.ownerType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs5 === errors;}else {var valid2 = true;}if(valid2){if(data0.lastModifiedDate !== undefined){const _errs6 = errors;if(errors === _errs6){if(errors === _errs6){if(!(typeof data0.lastModifiedDate === "string")){validate10.errors = [{instancePath:instancePath+"/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/Comment/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs8 = errors;if(typeof data0.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/encodedKey",schemaPath:"#/$defs/Comment/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.text !== undefined){const _errs10 = errors;if(typeof data0.text !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/text",schemaPath:"#/$defs/Comment/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data0.creationDate !== undefined){const _errs12 = errors;if(errors === _errs12){if(errors === _errs12){if(!(typeof data0.creationDate === "string")){validate10.errors = [{instancePath:instancePath+"/" + i0+"/creationDate",schemaPath:"#/$defs/Comment/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data0.ownerKey !== undefined){const _errs14 = errors;if(typeof data0.ownerKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/ownerKey",schemaPath:"#/$defs/Comment/properties/ownerKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data0.userKey !== undefined){const _errs16 = errors;if(typeof data0.userKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/userKey",schemaPath:"#/$defs/Comment/properties/userKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/Comment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;