/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"GetCommentsResponse","type":"array","items":{"$ref":"#/$defs/Comment"},"$defs":{"Comment":{"type":"object","description":"Represents information about the comment data transfer object.","properties":{"creationDate":{"type":"string","description":"The creation date of the comment.","format":"date-time"},"encodedKey":{"type":"string","description":"The comments's encoded key, which is auto-generated and unique."},"lastModifiedDate":{"type":"string","description":"The last date when this comment was modified.","format":"date-time"},"ownerKey":{"type":"string","description":"The encoded key of the entity that owns this comment."},"ownerType":{"description":"The type of the entity that owns this comment.","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"text":{"type":"string","description":"The message in the comment."},"userKey":{"type":"string","description":"The user's key."}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents information about the comment data transfer object.","properties":{"creationDate":{"type":"string","description":"The creation date of the comment.","format":"date-time"},"encodedKey":{"type":"string","description":"The comments's encoded key, which is auto-generated and unique."},"lastModifiedDate":{"type":"string","description":"The last date when this comment was modified.","format":"date-time"},"ownerKey":{"type":"string","description":"The encoded key of the entity that owns this comment."},"ownerType":{"description":"The type of the entity that owns this comment.","enum":["CLIENT","GROUP","LOAN_PRODUCT","SAVINGS_PRODUCT","CENTRE","BRANCH","USER","LOAN_ACCOUNT","DEPOSIT_ACCOUNT","ID_DOCUMENT","LINE_OF_CREDIT","GL_JOURNAL_ENTRY"]},"text":{"type":"string","description":"The message in the comment."},"userKey":{"type":"string","description":"The user's key."}},"additionalProperties":true};const func0 = require("ajv/dist/runtime/equal").default;function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.creationDate !== undefined){const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(!(typeof data0.creationDate === "string")){validate10.errors = [{instancePath:instancePath+"/" + i0+"/creationDate",schemaPath:"#/$defs/Comment/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs5 === errors;}else {var valid2 = true;}if(valid2){if(data0.encodedKey !== undefined){const _errs7 = errors;if(typeof data0.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/encodedKey",schemaPath:"#/$defs/Comment/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data0.lastModifiedDate !== undefined){const _errs9 = errors;if(errors === _errs9){if(errors === _errs9){if(!(typeof data0.lastModifiedDate === "string")){validate10.errors = [{instancePath:instancePath+"/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/Comment/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data0.ownerKey !== undefined){const _errs11 = errors;if(typeof data0.ownerKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/ownerKey",schemaPath:"#/$defs/Comment/properties/ownerKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data0.ownerType !== undefined){const _errs13 = errors;let valid3;valid3 = false;for(const v0 of schema12.properties.ownerType.enum){if(func0(data0.ownerType, v0)){valid3 = true;break;}}if(!valid3){validate10.errors = [{instancePath:instancePath+"/" + i0+"/ownerType",schemaPath:"#/$defs/Comment/properties/ownerType/enum",keyword:"enum",params:{allowedValues: schema12.properties.ownerType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data0.text !== undefined){const _errs14 = errors;if(typeof data0.text !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/text",schemaPath:"#/$defs/Comment/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data0.userKey !== undefined){const _errs16 = errors;if(typeof data0.userKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/userKey",schemaPath:"#/$defs/Comment/properties/userKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/Comment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;