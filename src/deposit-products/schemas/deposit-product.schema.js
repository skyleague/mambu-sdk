/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"DepositProduct","type":"object","description":"A deposit product defines the terms and constraints on deposit accounts","properties":{"notes":{"type":"string","title":"notes","description":"Some notes/a description about the product"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last date the product was updated","format":"date-time"},"availabilitySettings":{"title":"availabilitySettings","$ref":"#/$defs/DepositProductAvailabilitySettingsaf30"},"feesSettings":{"title":"feesSettings","$ref":"#/$defs/DepositProductFeeSettingsaf30"},"templates":{"type":"array","title":"templates","description":"Template documents of the product.","items":{"$ref":"#/$defs/DocumentTemplateaf30"}},"taxSettings":{"title":"taxSettings","$ref":"#/$defs/DepositProductTaxSettingsaf30"},"offsetSettings":{"title":"offsetSettings","$ref":"#/$defs/DepositProductOffsetSettingsaf30"},"creationDate":{"type":"string","title":"creationDate","description":"The date this product was created","format":"date-time"},"type":{"title":"type","description":"Indicates the type of product.","enum":["CURRENT_ACCOUNT","REGULAR_SAVINGS","FIXED_DEPOSIT","SAVINGS_PLAN","INVESTOR_ACCOUNT"]},"creditArrangementSettings":{"title":"creditArrangementSettings","$ref":"#/$defs/CreditArrangementSettingsaf30"},"currencySettings":{"title":"currencySettings","$ref":"#/$defs/DepositProductCurrencySettingsaf30"},"maturitySettings":{"title":"maturitySettings","$ref":"#/$defs/DepositMaturitySettingsaf30"},"newAccountSettings":{"title":"newAccountSettings","$ref":"#/$defs/DepositNewAccountSettingsaf30"},"interestSettings":{"title":"interestSettings","$ref":"#/$defs/DepositProductInterestSettingsaf30"},"accountingSettings":{"title":"accountingSettings","$ref":"#/$defs/DepositProductAccountingSettingsaf30"},"name":{"type":"string","title":"name","description":"The name of the product"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the deposit product, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the product, can be generated and customized, unique"},"state":{"title":"state","description":"Indicates the current state of the product","enum":["ACTIVE","INACTIVE"]},"category":{"title":"category","description":"Indicates the category that the product belongs to","enum":["PERSONAL_DEPOSIT","BUSINESS_DEPOSIT","DAILY_BANKING_ACCOUNTS","BUSINESS_BANKING_ACCOUNTS","STORED_VALUE_ACCOUNTS","UNCATEGORIZED"]},"overdraftSettings":{"title":"overdraftSettings","$ref":"#/$defs/DepositProductOverdraftSettingsaf30"},"internalControls":{"title":"internalControls","$ref":"#/$defs/DepositProductInternalControlsaf30"},"overdraftInterestSettings":{"title":"overdraftInterestSettings","$ref":"#/$defs/OverdraftInterestSettingsaf30"}},"required":["type","newAccountSettings","accountingSettings","name","id","state"],"additionalProperties":true,"$defs":{"DepositProductAvailabilitySettingsaf30":{"type":"object","title":"DepositProductAvailabilitySettingsaf30","description":"Holds information about product availability.","properties":{"branchSettings":{"title":"branchSettings","$ref":"#/$defs/BranchSettingsaf30"},"availableFor":{"type":"array","title":"availableFor","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS"]},"uniqueItems":true}},"additionalProperties":true},"BranchSettingsaf30":{"type":"object","title":"BranchSettingsaf30","description":"Holds information about branch availability for the product.","properties":{"forAllBranches":{"type":"boolean","title":"forAllBranches","description":"Indicates if this product should be available for all branches"},"availableProductBranches":{"type":"array","title":"availableProductBranches","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}}},"additionalProperties":true},"DepositProductFeeSettingsaf30":{"type":"object","title":"DepositProductFeeSettingsaf30","description":"Defines fees settings for the product.","properties":{"fees":{"type":"array","title":"fees","description":"List of all fees that can be applied for accounts of this loan product.","items":{"$ref":"#/$defs/DepositProductPredefinedFeeaf30"}},"allowArbitraryFees":{"type":"boolean","title":"allowArbitraryFees","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."}},"additionalProperties":true},"DepositProductPredefinedFeeaf30":{"type":"object","title":"DepositProductPredefinedFeeaf30","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"amount":{"type":"number","title":"amount","description":"The amount of the fee"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"Shows the last modified date of the fee","format":"date-time"},"amountCalculationMethod":{"title":"amountCalculationMethod","description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","MAMBU_FUNCTION"]},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MONTHLY_FEE","ARBITRARY"]},"creationDate":{"type":"string","title":"creationDate","description":"Shows the creation date of the fee","format":"date-time"},"amountCalculationFunctionName":{"type":"string","title":"amountCalculationFunctionName","description":"External function"},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"$ref":"#/$defs/DepositGLAccountingRuleaf30"}},"name":{"type":"string","title":"name","description":"The name of the fee"},"feeApplication":{"title":"feeApplication","description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the predefined fee, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the fee"},"state":{"title":"state","description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"applyDateMethod":{"title":"applyDateMethod","description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]}},"required":["trigger","feeApplication","state"],"additionalProperties":true},"DepositGLAccountingRuleaf30":{"type":"object","title":"DepositGLAccountingRuleaf30","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the accounting rule, auto generated, unique."},"glAccountKey":{"type":"string","title":"glAccountKey","description":"The encoded key of the account that is mapped to the financialResource"},"financialResource":{"title":"financialResource","description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]}},"required":["glAccountKey","financialResource"],"additionalProperties":true},"DocumentTemplateaf30":{"type":"object","title":"DocumentTemplateaf30","description":"Template documents of the product.","properties":{"name":{"type":"string","title":"name","description":"The name the document"},"encodedKey":{"type":"string","title":"encodedKey","description":"The document encodedKey"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the document","format":"date-time"},"type":{"title":"type","description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the document","format":"date-time"}},"additionalProperties":true},"DepositProductTaxSettingsaf30":{"type":"object","title":"DepositProductTaxSettingsaf30","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"withholdingTaxEnabled":{"type":"boolean","title":"withholdingTaxEnabled","description":"Whether withholding taxes are enabled for this product or not"}},"additionalProperties":true},"DepositProductOffsetSettingsaf30":{"type":"object","title":"DepositProductOffsetSettingsaf30","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","title":"allowOffset","description":"Specify if the product allow to create accounts which can be used as offset for loans"}},"additionalProperties":true},"CreditArrangementSettingsaf30":{"type":"object","title":"CreditArrangementSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"title":"creditArrangementRequirement","description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":true},"DepositProductCurrencySettingsaf30":{"type":"object","title":"DepositProductCurrencySettingsaf30","description":"Currency settings for the product.","properties":{"currencies":{"type":"array","title":"currencies","description":"Currencies that can be used by accounts of this product","items":{"$ref":"#/$defs/Currencyaf30"}}},"additionalProperties":true},"Currencyaf30":{"type":"object","title":"Currencyaf30","description":"Represents a currency eg. USD, EUR.","properties":{"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."},"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]}},"additionalProperties":true},"DepositMaturitySettingsaf30":{"type":"object","title":"DepositMaturitySettingsaf30","description":"The maturity settings for the product.","properties":{"maturityPeriodUnit":{"title":"maturityPeriodUnit","description":"maturity period measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"maturityPeriod":{"title":"maturityPeriod","$ref":"#/$defs/IntegerIntervalaf30"}},"additionalProperties":true},"IntegerIntervalaf30":{"type":"object","title":"IntegerIntervalaf30","description":"Decimal integer, like min/max/default.","properties":{"minValue":{"type":"integer","title":"minValue","description":"The minimum value."},"defaultValue":{"type":"integer","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"integer","title":"maxValue","description":"The maximum value."}},"additionalProperties":true},"DepositNewAccountSettingsaf30":{"type":"object","title":"DepositNewAccountSettingsaf30","description":"New Account settings for deposit accounts","properties":{"idGeneratorType":{"title":"idGeneratorType","description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"idPattern":{"type":"string","title":"idPattern","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["idGeneratorType","idPattern"],"additionalProperties":true},"DepositProductInterestSettingsaf30":{"type":"object","title":"DepositProductInterestSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the deposit account based on this product.","properties":{"interestRateSettings":{"title":"interestRateSettings","$ref":"#/$defs/DepositProductInterestRateSettingsaf30"},"collectInterestWhenLocked":{"type":"boolean","title":"collectInterestWhenLocked","description":"Whether locked accounts still collect Interest or not"},"interestGainsProvidedEndDate":{"type":"string","title":"interestGainsProvidedEndDate","description":"The date when the accounts under this product, will no longer have interest gains provided","format":"date"},"interestCalculationBalance":{"title":"interestCalculationBalance","description":"The balance which is used for the Interest calculation","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]},"interestPaidIntoAccount":{"type":"boolean","title":"interestPaidIntoAccount","description":"If interest should be payed into the deposit account"},"maximumBalance":{"type":"number","title":"maximumBalance","description":"The maximum balance used for Interest calculation"},"daysInYear":{"title":"daysInYear","description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestGainsProvidedStartDate":{"type":"string","title":"interestGainsProvidedStartDate","description":"The date when the accounts of this product will start to have interest gains provided. Starting with this date 0 interest rate is enforced on the accounts of this product.","format":"date"},"interestPaymentSettings":{"title":"interestPaymentSettings","$ref":"#/$defs/InterestPaymentSettingsaf30"}},"additionalProperties":true},"DepositProductInterestRateSettingsaf30":{"type":"object","title":"DepositProductInterestRateSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the deposit created based on this product.","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"allowNegativeInterestRate":{"type":"boolean","title":"allowNegativeInterestRate","description":"Indicator whether the deposit product allows negative values for interest rate"},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"accrueInterestAfterMaturity":{"type":"boolean","title":"accrueInterestAfterMaturity","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductInterestRateTieraf30"}},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"}},"additionalProperties":true},"DecimalIntervalaf30":{"type":"object","title":"DecimalIntervalaf30","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":true},"DepositProductInterestRateTieraf30":{"type":"object","title":"DepositProductInterestRateTieraf30","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingDay":{"type":"integer","title":"endingDay","description":"The top-limit value for the account period since activation in order to determine if this tier is used or not"}},"required":["interestRate"],"additionalProperties":true},"InterestPaymentSettingsaf30":{"type":"object","title":"InterestPaymentSettingsaf30","description":"Defines the interest payment settings for the deposit product and for deposits created based on this product","properties":{"interestPaymentDates":{"type":"array","title":"interestPaymentDates","description":"List of all dates on which the interest is payed into deposit account","items":{"$ref":"#/$defs/MonthAndDayaf30"}},"interestPaymentPoint":{"title":"interestPaymentPoint","description":"Specifies when the interest should be paid to the deposit account","enum":["FIRST_DAY_OF_MONTH","EVERY_WEEK","EVERY_OTHER_WEEK","EVERY_MONTH","EVERY_3_MONTHS","ON_FIXED_DATES","DAILY","ANNUALLY","BI_ANNUALLY","ON_ACCOUNT_MATURITY"]}},"additionalProperties":true},"MonthAndDayaf30":{"type":"object","title":"MonthAndDayaf30","description":"Wrapper for month and day for instances where the year isn't needed","properties":{"month":{"type":"integer","title":"month","description":"The month of the year"},"day":{"type":"integer","title":"day","description":"The day in the month"}},"additionalProperties":true},"DepositProductAccountingSettingsaf30":{"type":"object","title":"DepositProductAccountingSettingsaf30","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"title":"accountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","CASH","ACCRUAL"]},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules for the product.","items":{"$ref":"#/$defs/DepositGLAccountingRuleaf30"}},"interestAccruedAccountingMethod":{"title":"interestAccruedAccountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":true},"DepositProductOverdraftSettingsaf30":{"type":"object","title":"DepositProductOverdraftSettingsaf30","description":"The overdraft settings of the deposit product","properties":{"allowOverdraft":{"type":"boolean","title":"allowOverdraft","description":"Whether the accounts for this product may have overdraft"},"allowTechnicalOverdraft":{"type":"boolean","title":"allowTechnicalOverdraft","description":"Whether the accounts for this product may have technical overdraft"},"maxOverdraftLimit":{"type":"number","title":"maxOverdraftLimit","description":"How much money may be taken out for the account to go negative"}},"additionalProperties":true},"DepositProductInternalControlsaf30":{"type":"object","title":"DepositProductInternalControlsaf30","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","title":"dormancyPeriodDays","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"recommendedDepositAmount":{"type":"number","title":"recommendedDepositAmount","description":"Recommended amount for a deposit"},"openingBalance":{"title":"openingBalance","$ref":"#/$defs/AmountDecimalIntervalaf30"},"maxWithdrawalAmount":{"type":"number","title":"maxWithdrawalAmount","description":"Max amount per withdrawal"}},"additionalProperties":true},"AmountDecimalIntervalaf30":{"type":"object","title":"AmountDecimalIntervalaf30","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":true},"OverdraftInterestSettingsaf30":{"type":"object","title":"OverdraftInterestSettingsaf30","description":"Overdraft settings for the product","properties":{"interestRateSettings":{"title":"interestRateSettings","$ref":"#/$defs/DepositProductOverdraftInterestRateSettingsaf30"},"daysInYear":{"title":"daysInYear","description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestCalculationBalance":{"title":"interestCalculationBalance","description":"The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]}},"additionalProperties":true},"DepositProductOverdraftInterestRateSettingsaf30":{"type":"object","title":"DepositProductOverdraftInterestRateSettingsaf30","description":"The overdraft interest settings, defines constraints regarding interest that will be used on the account created based on this product.","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductOverdraftInterestRateTieraf30"}},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"}},"additionalProperties":true},"DepositProductOverdraftInterestRateTieraf30":{"type":"object","title":"DepositProductOverdraftInterestRateTieraf30","description":"Used for TIERED interest rates, holds the values to define how the interest is computed","properties":{"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"}},"required":["interestRate"],"additionalProperties":true}}};const schema17 = {"type":"object","title":"DocumentTemplateaf30","description":"Template documents of the product.","properties":{"name":{"type":"string","title":"name","description":"The name the document"},"encodedKey":{"type":"string","title":"encodedKey","description":"The document encodedKey"},"creationDate":{"type":"string","title":"creationDate","description":"The creation date of the document","format":"date-time"},"type":{"title":"type","description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"The last modified date of the document","format":"date-time"}},"additionalProperties":true};const schema18 = {"type":"object","title":"DepositProductTaxSettingsaf30","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"withholdingTaxEnabled":{"type":"boolean","title":"withholdingTaxEnabled","description":"Whether withholding taxes are enabled for this product or not"}},"additionalProperties":true};const schema19 = {"type":"object","title":"DepositProductOffsetSettingsaf30","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","title":"allowOffset","description":"Specify if the product allow to create accounts which can be used as offset for loans"}},"additionalProperties":true};const schema20 = {"type":"object","title":"CreditArrangementSettingsaf30","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"title":"creditArrangementRequirement","description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":true};const schema25 = {"type":"object","title":"DepositNewAccountSettingsaf30","description":"New Account settings for deposit accounts","properties":{"idGeneratorType":{"title":"idGeneratorType","description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"idPattern":{"type":"string","title":"idPattern","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["idGeneratorType","idPattern"],"additionalProperties":true};const schema34 = {"type":"object","title":"DepositProductOverdraftSettingsaf30","description":"The overdraft settings of the deposit product","properties":{"allowOverdraft":{"type":"boolean","title":"allowOverdraft","description":"Whether the accounts for this product may have overdraft"},"allowTechnicalOverdraft":{"type":"boolean","title":"allowTechnicalOverdraft","description":"Whether the accounts for this product may have technical overdraft"},"maxOverdraftLimit":{"type":"number","title":"maxOverdraftLimit","description":"How much money may be taken out for the account to go negative"}},"additionalProperties":true};const schema12 = {"type":"object","title":"DepositProductAvailabilitySettingsaf30","description":"Holds information about product availability.","properties":{"branchSettings":{"title":"branchSettings","$ref":"#/$defs/BranchSettingsaf30"},"availableFor":{"type":"array","title":"availableFor","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS"]},"uniqueItems":true}},"additionalProperties":true};const schema13 = {"type":"object","title":"BranchSettingsaf30","description":"Holds information about branch availability for the product.","properties":{"forAllBranches":{"type":"boolean","title":"forAllBranches","description":"Indicates if this product should be available for all branches"},"availableProductBranches":{"type":"array","title":"availableProductBranches","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}}},"additionalProperties":true};const func0 = require("ajv/dist/runtime/equal").default;function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.branchSettings !== undefined){let data0 = data.branchSettings;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.forAllBranches !== undefined){const _errs6 = errors;if(typeof data0.forAllBranches !== "boolean"){validate11.errors = [{instancePath:instancePath+"/branchSettings/forAllBranches",schemaPath:"#/$defs/BranchSettingsaf30/properties/forAllBranches/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.availableProductBranches !== undefined){let data2 = data0.availableProductBranches;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data2)){var valid3 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs10 = errors;if(typeof data2[i0] !== "string"){validate11.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches/" + i0,schemaPath:"#/$defs/BranchSettingsaf30/properties/availableProductBranches/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;if(!valid3){break;}}}else {validate11.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches",schemaPath:"#/$defs/BranchSettingsaf30/properties/availableProductBranches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/branchSettings",schemaPath:"#/$defs/BranchSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.availableFor !== undefined){let data4 = data.availableFor;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data4)){var valid4 = true;const len1 = data4.length;for(let i1=0; i1<len1; i1++){let data5 = data4[i1];const _errs14 = errors;if(!((data5 === "INDIVIDUALS") || (data5 === "PURE_GROUPS"))){validate11.errors = [{instancePath:instancePath+"/availableFor/" + i1,schemaPath:"#/properties/availableFor/items/enum",keyword:"enum",params:{allowedValues: schema12.properties.availableFor.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs14 === errors;if(!valid4){break;}}if(valid4){let i2 = data4.length;let j0;if(i2 > 1){outer0:for(;i2--;){for(j0 = i2; j0--;){if(func0(data4[i2], data4[j0])){validate11.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/uniqueItems",keyword:"uniqueItems",params:{i: i2, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i2+" are identical)"}];return false;break outer0;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}const schema14 = {"type":"object","title":"DepositProductFeeSettingsaf30","description":"Defines fees settings for the product.","properties":{"fees":{"type":"array","title":"fees","description":"List of all fees that can be applied for accounts of this loan product.","items":{"$ref":"#/$defs/DepositProductPredefinedFeeaf30"}},"allowArbitraryFees":{"type":"boolean","title":"allowArbitraryFees","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."}},"additionalProperties":true};const schema15 = {"type":"object","title":"DepositProductPredefinedFeeaf30","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"amount":{"type":"number","title":"amount","description":"The amount of the fee"},"lastModifiedDate":{"type":"string","title":"lastModifiedDate","description":"Shows the last modified date of the fee","format":"date-time"},"amountCalculationMethod":{"title":"amountCalculationMethod","description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","MAMBU_FUNCTION"]},"trigger":{"title":"trigger","description":"Shows the event that will trigger a fee","enum":["MANUAL","MONTHLY_FEE","ARBITRARY"]},"creationDate":{"type":"string","title":"creationDate","description":"Shows the creation date of the fee","format":"date-time"},"amountCalculationFunctionName":{"type":"string","title":"amountCalculationFunctionName","description":"External function"},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"$ref":"#/$defs/DepositGLAccountingRuleaf30"}},"name":{"type":"string","title":"name","description":"The name of the fee"},"feeApplication":{"title":"feeApplication","description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the predefined fee, auto generated, unique"},"id":{"type":"string","title":"id","description":"The id of the fee"},"state":{"title":"state","description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"applyDateMethod":{"title":"applyDateMethod","description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]}},"required":["trigger","feeApplication","state"],"additionalProperties":true};const schema16 = {"type":"object","title":"DepositGLAccountingRuleaf30","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the accounting rule, auto generated, unique."},"glAccountKey":{"type":"string","title":"glAccountKey","description":"The encoded key of the account that is mapped to the financialResource"},"financialResource":{"title":"financialResource","description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]}},"required":["glAccountKey","financialResource"],"additionalProperties":true};function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.trigger === undefined) && (missing0 = "trigger")) || ((data.feeApplication === undefined) && (missing0 = "feeApplication"))) || ((data.state === undefined) && (missing0 = "state"))){validate14.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.amount !== undefined){let data0 = data.amount;const _errs2 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate14.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs4 = errors;if(errors === _errs4){if(errors === _errs4){if(!(typeof data.lastModifiedDate === "string")){validate14.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationMethod !== undefined){let data2 = data.amountCalculationMethod;const _errs6 = errors;if(!((data2 === "FLAT") || (data2 === "MAMBU_FUNCTION"))){validate14.errors = [{instancePath:instancePath+"/amountCalculationMethod",schemaPath:"#/properties/amountCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema15.properties.amountCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.trigger !== undefined){let data3 = data.trigger;const _errs7 = errors;if(!(((data3 === "MANUAL") || (data3 === "MONTHLY_FEE")) || (data3 === "ARBITRARY"))){validate14.errors = [{instancePath:instancePath+"/trigger",schemaPath:"#/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema15.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs8 = errors;if(errors === _errs8){if(errors === _errs8){if(!(typeof data.creationDate === "string")){validate14.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationFunctionName !== undefined){const _errs10 = errors;if(typeof data.amountCalculationFunctionName !== "string"){validate14.errors = [{instancePath:instancePath+"/amountCalculationFunctionName",schemaPath:"#/properties/amountCalculationFunctionName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingRules !== undefined){let data6 = data.accountingRules;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data6)){var valid1 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){let data7 = data6[i0];const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing1;if(((data7.glAccountKey === undefined) && (missing1 = "glAccountKey")) || ((data7.financialResource === undefined) && (missing1 = "financialResource"))){validate14.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRuleaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data7.encodedKey !== undefined){const _errs18 = errors;if(typeof data7.encodedKey !== "string"){validate14.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositGLAccountingRuleaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs18 === errors;}else {var valid3 = true;}if(valid3){if(data7.glAccountKey !== undefined){const _errs20 = errors;if(typeof data7.glAccountKey !== "string"){validate14.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/DepositGLAccountingRuleaf30/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs20 === errors;}else {var valid3 = true;}if(valid3){if(data7.financialResource !== undefined){const _errs22 = errors;let valid4;valid4 = false;for(const v0 of schema16.properties.financialResource.enum){if(func0(data7.financialResource, v0)){valid4 = true;break;}}if(!valid4){validate14.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/DepositGLAccountingRuleaf30/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema16.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs22 === errors;}else {var valid3 = true;}}}}}else {validate14.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRuleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs14 === errors;if(!valid1){break;}}}else {validate14.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs23 = errors;if(typeof data.name !== "string"){validate14.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.feeApplication !== undefined){let data12 = data.feeApplication;const _errs25 = errors;if(!((data12 === "REQUIRED") || (data12 === "OPTIONAL"))){validate14.errors = [{instancePath:instancePath+"/feeApplication",schemaPath:"#/properties/feeApplication/enum",keyword:"enum",params:{allowedValues: schema15.properties.feeApplication.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs26 = errors;if(typeof data.encodedKey !== "string"){validate14.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs28 = errors;if(typeof data.id !== "string"){validate14.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){let data15 = data.state;const _errs30 = errors;if(!((data15 === "ACTIVE") || (data15 === "INACTIVE"))){validate14.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema15.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.applyDateMethod !== undefined){let data16 = data.applyDateMethod;const _errs31 = errors;if(!((data16 === "MONTHLY_FROM_ACTIVATION") || (data16 === "FIRST_OF_EVERY_MONTH"))){validate14.errors = [{instancePath:instancePath+"/applyDateMethod",schemaPath:"#/properties/applyDateMethod/enum",keyword:"enum",params:{allowedValues: schema15.properties.applyDateMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.fees !== undefined){let data0 = data.fees;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs4 = errors;if(!(validate14(data0[i0], {instancePath:instancePath+"/fees/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate13.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.allowArbitraryFees !== undefined){const _errs5 = errors;if(typeof data.allowArbitraryFees !== "boolean"){validate13.errors = [{instancePath:instancePath+"/allowArbitraryFees",schemaPath:"#/properties/allowArbitraryFees/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}else {validate13.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate13.errors = vErrors;return errors === 0;}const schema21 = {"type":"object","title":"DepositProductCurrencySettingsaf30","description":"Currency settings for the product.","properties":{"currencies":{"type":"array","title":"currencies","description":"Currencies that can be used by accounts of this product","items":{"$ref":"#/$defs/Currencyaf30"}}},"additionalProperties":true};const schema22 = {"type":"object","title":"Currencyaf30","description":"Represents a currency eg. USD, EUR.","properties":{"currencyCode":{"type":"string","title":"currencyCode","description":"Currency code for NON_FIAT currency."},"code":{"title":"code","description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMK","ZWL","ZMW","SSP","NON_FIAT"]}},"additionalProperties":true};function validate17(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.currencies !== undefined){let data0 = data.currencies;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.currencyCode !== undefined){const _errs8 = errors;if(typeof data1.currencyCode !== "string"){validate17.errors = [{instancePath:instancePath+"/currencies/" + i0+"/currencyCode",schemaPath:"#/$defs/Currencyaf30/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.code !== undefined){const _errs10 = errors;let valid4;valid4 = false;for(const v0 of schema22.properties.code.enum){if(func0(data1.code, v0)){valid4 = true;break;}}if(!valid4){validate17.errors = [{instancePath:instancePath+"/currencies/" + i0+"/code",schemaPath:"#/$defs/Currencyaf30/properties/code/enum",keyword:"enum",params:{allowedValues: schema22.properties.code.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}}}else {validate17.errors = [{instancePath:instancePath+"/currencies/" + i0,schemaPath:"#/$defs/Currencyaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate17.errors = [{instancePath:instancePath+"/currencies",schemaPath:"#/properties/currencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}else {validate17.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate17.errors = vErrors;return errors === 0;}const schema23 = {"type":"object","title":"DepositMaturitySettingsaf30","description":"The maturity settings for the product.","properties":{"maturityPeriodUnit":{"title":"maturityPeriodUnit","description":"maturity period measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"maturityPeriod":{"title":"maturityPeriod","$ref":"#/$defs/IntegerIntervalaf30"}},"additionalProperties":true};const schema24 = {"type":"object","title":"IntegerIntervalaf30","description":"Decimal integer, like min/max/default.","properties":{"minValue":{"type":"integer","title":"minValue","description":"The minimum value."},"defaultValue":{"type":"integer","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"integer","title":"maxValue","description":"The maximum value."}},"additionalProperties":true};function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.maturityPeriodUnit !== undefined){let data0 = data.maturityPeriodUnit;const _errs2 = errors;if(!(((data0 === "DAYS") || (data0 === "WEEKS")) || (data0 === "MONTHS"))){validate19.errors = [{instancePath:instancePath+"/maturityPeriodUnit",schemaPath:"#/properties/maturityPeriodUnit/enum",keyword:"enum",params:{allowedValues: schema23.properties.maturityPeriodUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.maturityPeriod !== undefined){let data1 = data.maturityPeriod;const _errs3 = errors;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.minValue !== undefined){let data2 = data1.minValue;const _errs7 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate19.errors = [{instancePath:instancePath+"/maturityPeriod/minValue",schemaPath:"#/$defs/IntegerIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data1.defaultValue !== undefined){let data3 = data1.defaultValue;const _errs9 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate19.errors = [{instancePath:instancePath+"/maturityPeriod/defaultValue",schemaPath:"#/$defs/IntegerIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data1.maxValue !== undefined){let data4 = data1.maxValue;const _errs11 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate19.errors = [{instancePath:instancePath+"/maturityPeriod/maxValue",schemaPath:"#/$defs/IntegerIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}}}}else {validate19.errors = [{instancePath:instancePath+"/maturityPeriod",schemaPath:"#/$defs/IntegerIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}else {validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate19.errors = vErrors;return errors === 0;}const schema26 = {"type":"object","title":"DepositProductInterestSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the deposit account based on this product.","properties":{"interestRateSettings":{"title":"interestRateSettings","$ref":"#/$defs/DepositProductInterestRateSettingsaf30"},"collectInterestWhenLocked":{"type":"boolean","title":"collectInterestWhenLocked","description":"Whether locked accounts still collect Interest or not"},"interestGainsProvidedEndDate":{"type":"string","title":"interestGainsProvidedEndDate","description":"The date when the accounts under this product, will no longer have interest gains provided","format":"date"},"interestCalculationBalance":{"title":"interestCalculationBalance","description":"The balance which is used for the Interest calculation","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]},"interestPaidIntoAccount":{"type":"boolean","title":"interestPaidIntoAccount","description":"If interest should be payed into the deposit account"},"maximumBalance":{"type":"number","title":"maximumBalance","description":"The maximum balance used for Interest calculation"},"daysInYear":{"title":"daysInYear","description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestGainsProvidedStartDate":{"type":"string","title":"interestGainsProvidedStartDate","description":"The date when the accounts of this product will start to have interest gains provided. Starting with this date 0 interest rate is enforced on the accounts of this product.","format":"date"},"interestPaymentSettings":{"title":"interestPaymentSettings","$ref":"#/$defs/InterestPaymentSettingsaf30"}},"additionalProperties":true};const schema27 = {"type":"object","title":"DepositProductInterestRateSettingsaf30","description":"The interest settings, defines constraints regarding interest that will be used on the deposit created based on this product.","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"allowNegativeInterestRate":{"type":"boolean","title":"allowNegativeInterestRate","description":"Indicator whether the deposit product allows negative values for interest rate"},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"accrueInterestAfterMaturity":{"type":"boolean","title":"accrueInterestAfterMaturity","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductInterestRateTieraf30"}},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"}},"additionalProperties":true};const schema28 = {"type":"object","title":"DecimalIntervalaf30","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":true};const schema29 = {"type":"object","title":"DepositProductInterestRateTieraf30","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingDay":{"type":"integer","title":"endingDay","description":"The top-limit value for the account period since activation in order to determine if this tier is used or not"}},"required":["interestRate"],"additionalProperties":true};function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestRate !== undefined){let data0 = data.interestRate;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate22.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data2 = data0.maxValue;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate22.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data3 = data0.defaultValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate22.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}else {validate22.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data4 = data.interestRateReviewUnit;const _errs12 = errors;if(!(((data4 === "DAYS") || (data4 === "WEEKS")) || (data4 === "MONTHS"))){validate22.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema27.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.allowNegativeInterestRate !== undefined){const _errs13 = errors;if(typeof data.allowNegativeInterestRate !== "boolean"){validate22.errors = [{instancePath:instancePath+"/allowNegativeInterestRate",schemaPath:"#/properties/allowNegativeInterestRate/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data6 = data.interestRateSource;const _errs15 = errors;if(!((data6 === "FIXED_INTEREST_RATE") || (data6 === "INDEX_INTEREST_RATE"))){validate22.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema27.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequency !== undefined){const _errs16 = errors;let valid3;valid3 = false;for(const v0 of schema27.properties.interestChargeFrequency.enum){if(func0(data.interestChargeFrequency, v0)){valid3 = true;break;}}if(!valid3){validate22.errors = [{instancePath:instancePath+"/interestChargeFrequency",schemaPath:"#/properties/interestChargeFrequency/enum",keyword:"enum",params:{allowedValues: schema27.properties.interestChargeFrequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.accrueInterestAfterMaturity !== undefined){const _errs17 = errors;if(typeof data.accrueInterestAfterMaturity !== "boolean"){validate22.errors = [{instancePath:instancePath+"/accrueInterestAfterMaturity",schemaPath:"#/properties/accrueInterestAfterMaturity/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTerms !== undefined){let data9 = data.interestRateTerms;const _errs19 = errors;if(!((((data9 === "FIXED") || (data9 === "TIERED")) || (data9 === "TIERED_PERIOD")) || (data9 === "TIERED_BAND"))){validate22.errors = [{instancePath:instancePath+"/interestRateTerms",schemaPath:"#/properties/interestRateTerms/enum",keyword:"enum",params:{allowedValues: schema27.properties.interestRateTerms.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequencyCount !== undefined){let data10 = data.interestChargeFrequencyCount;const _errs20 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate22.errors = [{instancePath:instancePath+"/interestChargeFrequencyCount",schemaPath:"#/properties/interestChargeFrequencyCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data11 = data.interestRateReviewCount;const _errs22 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate22.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs24 = errors;if(typeof data.indexSourceKey !== "string"){validate22.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data13 = data.interestRateTiers;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data13)){var valid4 = true;const len0 = data13.length;for(let i0=0; i0<len0; i0++){let data14 = data13[i0];const _errs28 = errors;const _errs29 = errors;if(errors === _errs29){if(data14 && typeof data14 == "object" && !Array.isArray(data14)){let missing0;if((data14.interestRate === undefined) && (missing0 = "interestRate")){validate22.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductInterestRateTieraf30/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data14.endingBalance !== undefined){let data15 = data14.endingBalance;const _errs32 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate22.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/DepositProductInterestRateTieraf30/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs32 === errors;}else {var valid6 = true;}if(valid6){if(data14.interestRate !== undefined){let data16 = data14.interestRate;const _errs34 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate22.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/DepositProductInterestRateTieraf30/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs34 === errors;}else {var valid6 = true;}if(valid6){if(data14.encodedKey !== undefined){const _errs36 = errors;if(typeof data14.encodedKey !== "string"){validate22.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositProductInterestRateTieraf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs36 === errors;}else {var valid6 = true;}if(valid6){if(data14.endingDay !== undefined){let data18 = data14.endingDay;const _errs38 = errors;if(!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))){validate22.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingDay",schemaPath:"#/$defs/DepositProductInterestRateTieraf30/properties/endingDay/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs38 === errors;}else {var valid6 = true;}}}}}}else {validate22.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductInterestRateTieraf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs28 === errors;if(!valid4){break;}}}else {validate22.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs40 = errors;if(typeof data.encodedKey !== "string"){validate22.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}const schema30 = {"type":"object","title":"InterestPaymentSettingsaf30","description":"Defines the interest payment settings for the deposit product and for deposits created based on this product","properties":{"interestPaymentDates":{"type":"array","title":"interestPaymentDates","description":"List of all dates on which the interest is payed into deposit account","items":{"$ref":"#/$defs/MonthAndDayaf30"}},"interestPaymentPoint":{"title":"interestPaymentPoint","description":"Specifies when the interest should be paid to the deposit account","enum":["FIRST_DAY_OF_MONTH","EVERY_WEEK","EVERY_OTHER_WEEK","EVERY_MONTH","EVERY_3_MONTHS","ON_FIXED_DATES","DAILY","ANNUALLY","BI_ANNUALLY","ON_ACCOUNT_MATURITY"]}},"additionalProperties":true};const schema31 = {"type":"object","title":"MonthAndDayaf30","description":"Wrapper for month and day for instances where the year isn't needed","properties":{"month":{"type":"integer","title":"month","description":"The month of the year"},"day":{"type":"integer","title":"day","description":"The day in the month"}},"additionalProperties":true};function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestPaymentDates !== undefined){let data0 = data.interestPaymentDates;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.month !== undefined){let data2 = data1.month;const _errs8 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate24.errors = [{instancePath:instancePath+"/interestPaymentDates/" + i0+"/month",schemaPath:"#/$defs/MonthAndDayaf30/properties/month/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.day !== undefined){let data3 = data1.day;const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate24.errors = [{instancePath:instancePath+"/interestPaymentDates/" + i0+"/day",schemaPath:"#/$defs/MonthAndDayaf30/properties/day/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}}}else {validate24.errors = [{instancePath:instancePath+"/interestPaymentDates/" + i0,schemaPath:"#/$defs/MonthAndDayaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate24.errors = [{instancePath:instancePath+"/interestPaymentDates",schemaPath:"#/properties/interestPaymentDates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestPaymentPoint !== undefined){const _errs12 = errors;let valid4;valid4 = false;for(const v0 of schema30.properties.interestPaymentPoint.enum){if(func0(data.interestPaymentPoint, v0)){valid4 = true;break;}}if(!valid4){validate24.errors = [{instancePath:instancePath+"/interestPaymentPoint",schemaPath:"#/properties/interestPaymentPoint/enum",keyword:"enum",params:{allowedValues: schema30.properties.interestPaymentPoint.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}else {validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate24.errors = vErrors;return errors === 0;}function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestRateSettings !== undefined){const _errs2 = errors;if(!(validate22(data.interestRateSettings, {instancePath:instancePath+"/interestRateSettings",parentData:data,parentDataProperty:"interestRateSettings",rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.collectInterestWhenLocked !== undefined){const _errs3 = errors;if(typeof data.collectInterestWhenLocked !== "boolean"){validate21.errors = [{instancePath:instancePath+"/collectInterestWhenLocked",schemaPath:"#/properties/collectInterestWhenLocked/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.interestGainsProvidedEndDate !== undefined){const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(!(typeof data.interestGainsProvidedEndDate === "string")){validate21.errors = [{instancePath:instancePath+"/interestGainsProvidedEndDate",schemaPath:"#/properties/interestGainsProvidedEndDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.interestCalculationBalance !== undefined){const _errs7 = errors;let valid1;valid1 = false;for(const v0 of schema26.properties.interestCalculationBalance.enum){if(func0(data.interestCalculationBalance, v0)){valid1 = true;break;}}if(!valid1){validate21.errors = [{instancePath:instancePath+"/interestCalculationBalance",schemaPath:"#/properties/interestCalculationBalance/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestCalculationBalance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.interestPaidIntoAccount !== undefined){const _errs8 = errors;if(typeof data.interestPaidIntoAccount !== "boolean"){validate21.errors = [{instancePath:instancePath+"/interestPaidIntoAccount",schemaPath:"#/properties/interestPaidIntoAccount/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.maximumBalance !== undefined){let data5 = data.maximumBalance;const _errs10 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate21.errors = [{instancePath:instancePath+"/maximumBalance",schemaPath:"#/properties/maximumBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.daysInYear !== undefined){const _errs12 = errors;let valid2;valid2 = false;for(const v1 of schema26.properties.daysInYear.enum){if(func0(data.daysInYear, v1)){valid2 = true;break;}}if(!valid2){validate21.errors = [{instancePath:instancePath+"/daysInYear",schemaPath:"#/properties/daysInYear/enum",keyword:"enum",params:{allowedValues: schema26.properties.daysInYear.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.interestGainsProvidedStartDate !== undefined){const _errs13 = errors;if(errors === _errs13){if(errors === _errs13){if(!(typeof data.interestGainsProvidedStartDate === "string")){validate21.errors = [{instancePath:instancePath+"/interestGainsProvidedStartDate",schemaPath:"#/properties/interestGainsProvidedStartDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestPaymentSettings !== undefined){const _errs15 = errors;if(!(validate24(data.interestPaymentSettings, {instancePath:instancePath+"/interestPaymentSettings",parentData:data,parentDataProperty:"interestPaymentSettings",rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var valid0 = _errs15 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}const schema32 = {"type":"object","title":"DepositProductAccountingSettingsaf30","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"title":"accountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","CASH","ACCRUAL"]},"accountingRules":{"type":"array","title":"accountingRules","description":"A list of accounting rules for the product.","items":{"$ref":"#/$defs/DepositGLAccountingRuleaf30"}},"interestAccruedAccountingMethod":{"title":"interestAccruedAccountingMethod","description":"A list of accounting rules for a product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":true};function validate27(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.accountingMethod === undefined) && (missing0 = "accountingMethod")){validate27.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountingMethod !== undefined){let data0 = data.accountingMethod;const _errs2 = errors;if(!(((data0 === "NONE") || (data0 === "CASH")) || (data0 === "ACCRUAL"))){validate27.errors = [{instancePath:instancePath+"/accountingMethod",schemaPath:"#/properties/accountingMethod/enum",keyword:"enum",params:{allowedValues: schema32.properties.accountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingRules !== undefined){let data1 = data.accountingRules;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.glAccountKey === undefined) && (missing1 = "glAccountKey")) || ((data2.financialResource === undefined) && (missing1 = "financialResource"))){validate27.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRuleaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data2.encodedKey !== undefined){const _errs9 = errors;if(typeof data2.encodedKey !== "string"){validate27.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositGLAccountingRuleaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}if(valid3){if(data2.glAccountKey !== undefined){const _errs11 = errors;if(typeof data2.glAccountKey !== "string"){validate27.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/DepositGLAccountingRuleaf30/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data2.financialResource !== undefined){const _errs13 = errors;let valid4;valid4 = false;for(const v0 of schema16.properties.financialResource.enum){if(func0(data2.financialResource, v0)){valid4 = true;break;}}if(!valid4){validate27.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/DepositGLAccountingRuleaf30/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema16.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}}}}}else {validate27.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRuleaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate27.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccruedAccountingMethod !== undefined){let data6 = data.interestAccruedAccountingMethod;const _errs14 = errors;if(!(((data6 === "NONE") || (data6 === "DAILY")) || (data6 === "END_OF_MONTH"))){validate27.errors = [{instancePath:instancePath+"/interestAccruedAccountingMethod",schemaPath:"#/properties/interestAccruedAccountingMethod/enum",keyword:"enum",params:{allowedValues: schema32.properties.interestAccruedAccountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}else {validate27.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate27.errors = vErrors;return errors === 0;}const schema35 = {"type":"object","title":"DepositProductInternalControlsaf30","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","title":"dormancyPeriodDays","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"recommendedDepositAmount":{"type":"number","title":"recommendedDepositAmount","description":"Recommended amount for a deposit"},"openingBalance":{"title":"openingBalance","$ref":"#/$defs/AmountDecimalIntervalaf30"},"maxWithdrawalAmount":{"type":"number","title":"maxWithdrawalAmount","description":"Max amount per withdrawal"}},"additionalProperties":true};const schema36 = {"type":"object","title":"AmountDecimalIntervalaf30","description":"Decimal constraints, like min/max/default.","properties":{"minValue":{"type":"number","title":"minValue","description":"The minimum value."},"maxValue":{"type":"number","title":"maxValue","description":"The maximum value."},"defaultValue":{"type":"number","title":"defaultValue","description":"The default value, will be used in case no other value was filled in by the user."}},"additionalProperties":true};function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.dormancyPeriodDays !== undefined){let data0 = data.dormancyPeriodDays;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate29.errors = [{instancePath:instancePath+"/dormancyPeriodDays",schemaPath:"#/properties/dormancyPeriodDays/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.recommendedDepositAmount !== undefined){let data1 = data.recommendedDepositAmount;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate29.errors = [{instancePath:instancePath+"/recommendedDepositAmount",schemaPath:"#/properties/recommendedDepositAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.openingBalance !== undefined){let data2 = data.openingBalance;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.minValue !== undefined){let data3 = data2.minValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate29.errors = [{instancePath:instancePath+"/openingBalance/minValue",schemaPath:"#/$defs/AmountDecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.maxValue !== undefined){let data4 = data2.maxValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate29.errors = [{instancePath:instancePath+"/openingBalance/maxValue",schemaPath:"#/$defs/AmountDecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.defaultValue !== undefined){let data5 = data2.defaultValue;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate29.errors = [{instancePath:instancePath+"/openingBalance/defaultValue",schemaPath:"#/$defs/AmountDecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}else {validate29.errors = [{instancePath:instancePath+"/openingBalance",schemaPath:"#/$defs/AmountDecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.maxWithdrawalAmount !== undefined){let data6 = data.maxWithdrawalAmount;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate29.errors = [{instancePath:instancePath+"/maxWithdrawalAmount",schemaPath:"#/properties/maxWithdrawalAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}const schema37 = {"type":"object","title":"OverdraftInterestSettingsaf30","description":"Overdraft settings for the product","properties":{"interestRateSettings":{"title":"interestRateSettings","$ref":"#/$defs/DepositProductOverdraftInterestRateSettingsaf30"},"daysInYear":{"title":"daysInYear","description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestCalculationBalance":{"title":"interestCalculationBalance","description":"The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]}},"additionalProperties":true};const schema38 = {"type":"object","title":"DepositProductOverdraftInterestRateSettingsaf30","description":"The overdraft interest settings, defines constraints regarding interest that will be used on the account created based on this product.","properties":{"interestRate":{"title":"interestRate","$ref":"#/$defs/DecimalIntervalaf30"},"interestRateReviewUnit":{"title":"interestRateReviewUnit","description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"title":"interestRateSource","description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateReviewCount":{"type":"integer","title":"interestRateReviewCount","description":"Interest rate review frequency unit count"},"indexSourceKey":{"type":"string","title":"indexSourceKey","description":"Index rate source key."},"interestRateTiers":{"type":"array","title":"interestRateTiers","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductOverdraftInterestRateTieraf30"}},"interestChargeFrequency":{"title":"interestChargeFrequency","description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestRateTerms":{"title":"interestRateTerms","description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestChargeFrequencyCount":{"type":"integer","title":"interestChargeFrequencyCount","description":"the count of units to apply over the interval"}},"additionalProperties":true};const schema40 = {"type":"object","title":"DepositProductOverdraftInterestRateTieraf30","description":"Used for TIERED interest rates, holds the values to define how the interest is computed","properties":{"endingBalance":{"type":"number","title":"endingBalance","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","title":"interestRate","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"},"encodedKey":{"type":"string","title":"encodedKey","description":"The encoded key of the interest rate tier, auto generated, unique"}},"required":["interestRate"],"additionalProperties":true};function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestRate !== undefined){let data0 = data.interestRate;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.minValue !== undefined){let data1 = data0.minValue;const _errs6 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate32.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data2 = data0.maxValue;const _errs8 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate32.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.defaultValue !== undefined){let data3 = data0.defaultValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate32.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalIntervalaf30/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}else {validate32.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalIntervalaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data4 = data.interestRateReviewUnit;const _errs12 = errors;if(!(((data4 === "DAYS") || (data4 === "WEEKS")) || (data4 === "MONTHS"))){validate32.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema38.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data5 = data.interestRateSource;const _errs13 = errors;if(!((data5 === "FIXED_INTEREST_RATE") || (data5 === "INDEX_INTEREST_RATE"))){validate32.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema38.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data6 = data.interestRateReviewCount;const _errs14 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate32.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs16 = errors;if(typeof data.indexSourceKey !== "string"){validate32.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data8 = data.interestRateTiers;const _errs18 = errors;if(errors === _errs18){if(Array.isArray(data8)){var valid3 = true;const len0 = data8.length;for(let i0=0; i0<len0; i0++){let data9 = data8[i0];const _errs20 = errors;const _errs21 = errors;if(errors === _errs21){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){let missing0;if((data9.interestRate === undefined) && (missing0 = "interestRate")){validate32.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductOverdraftInterestRateTieraf30/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data9.endingBalance !== undefined){let data10 = data9.endingBalance;const _errs24 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate32.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/DepositProductOverdraftInterestRateTieraf30/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid5 = _errs24 === errors;}else {var valid5 = true;}if(valid5){if(data9.interestRate !== undefined){let data11 = data9.interestRate;const _errs26 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate32.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/DepositProductOverdraftInterestRateTieraf30/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid5 = _errs26 === errors;}else {var valid5 = true;}if(valid5){if(data9.encodedKey !== undefined){const _errs28 = errors;if(typeof data9.encodedKey !== "string"){validate32.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositProductOverdraftInterestRateTieraf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs28 === errors;}else {var valid5 = true;}}}}}else {validate32.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductOverdraftInterestRateTieraf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs20 === errors;if(!valid3){break;}}}else {validate32.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequency !== undefined){const _errs30 = errors;let valid6;valid6 = false;for(const v0 of schema38.properties.interestChargeFrequency.enum){if(func0(data.interestChargeFrequency, v0)){valid6 = true;break;}}if(!valid6){validate32.errors = [{instancePath:instancePath+"/interestChargeFrequency",schemaPath:"#/properties/interestChargeFrequency/enum",keyword:"enum",params:{allowedValues: schema38.properties.interestChargeFrequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTerms !== undefined){let data14 = data.interestRateTerms;const _errs31 = errors;if(!((((data14 === "FIXED") || (data14 === "TIERED")) || (data14 === "TIERED_PERIOD")) || (data14 === "TIERED_BAND"))){validate32.errors = [{instancePath:instancePath+"/interestRateTerms",schemaPath:"#/properties/interestRateTerms/enum",keyword:"enum",params:{allowedValues: schema38.properties.interestRateTerms.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequencyCount !== undefined){let data15 = data.interestChargeFrequencyCount;const _errs32 = errors;if(!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))){validate32.errors = [{instancePath:instancePath+"/interestChargeFrequencyCount",schemaPath:"#/properties/interestChargeFrequencyCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate32.errors = vErrors;return errors === 0;}function validate31(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestRateSettings !== undefined){const _errs2 = errors;if(!(validate32(data.interestRateSettings, {instancePath:instancePath+"/interestRateSettings",parentData:data,parentDataProperty:"interestRateSettings",rootData}))){vErrors = vErrors === null ? validate32.errors : vErrors.concat(validate32.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.daysInYear !== undefined){const _errs3 = errors;let valid1;valid1 = false;for(const v0 of schema37.properties.daysInYear.enum){if(func0(data.daysInYear, v0)){valid1 = true;break;}}if(!valid1){validate31.errors = [{instancePath:instancePath+"/daysInYear",schemaPath:"#/properties/daysInYear/enum",keyword:"enum",params:{allowedValues: schema37.properties.daysInYear.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.interestCalculationBalance !== undefined){const _errs4 = errors;let valid2;valid2 = false;for(const v1 of schema37.properties.interestCalculationBalance.enum){if(func0(data.interestCalculationBalance, v1)){valid2 = true;break;}}if(!valid2){validate31.errors = [{instancePath:instancePath+"/interestCalculationBalance",schemaPath:"#/properties/interestCalculationBalance/enum",keyword:"enum",params:{allowedValues: schema37.properties.interestCalculationBalance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate31.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate31.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;let valid0 = true;for( missing0 of schema11.required){valid0 = data[missing0] !== undefined;if(!valid0){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;break;}}if(valid0){if(data.notes !== undefined){const _errs2 = errors;if(typeof data.notes !== "string"){validate10.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs2 === errors;}else {var valid1 = true;}if(valid1){if(data.lastModifiedDate !== undefined){const _errs4 = errors;if(errors === _errs4){if(errors === _errs4){if(!(typeof data.lastModifiedDate === "string")){validate10.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.availabilitySettings !== undefined){const _errs6 = errors;if(!(validate11(data.availabilitySettings, {instancePath:instancePath+"/availabilitySettings",parentData:data,parentDataProperty:"availabilitySettings",rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data.feesSettings !== undefined){const _errs7 = errors;if(!(validate13(data.feesSettings, {instancePath:instancePath+"/feesSettings",parentData:data,parentDataProperty:"feesSettings",rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data.templates !== undefined){let data4 = data.templates;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data4)){var valid2 = true;const len0 = data4.length;for(let i0=0; i0<len0; i0++){let data5 = data4[i0];const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){if(data5.name !== undefined){const _errs14 = errors;if(typeof data5.name !== "string"){validate10.errors = [{instancePath:instancePath+"/templates/" + i0+"/name",schemaPath:"#/$defs/DocumentTemplateaf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data5.encodedKey !== undefined){const _errs16 = errors;if(typeof data5.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/templates/" + i0+"/encodedKey",schemaPath:"#/$defs/DocumentTemplateaf30/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data5.creationDate !== undefined){const _errs18 = errors;if(errors === _errs18){if(errors === _errs18){if(!(typeof data5.creationDate === "string")){validate10.errors = [{instancePath:instancePath+"/templates/" + i0+"/creationDate",schemaPath:"#/$defs/DocumentTemplateaf30/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data5.type !== undefined){let data9 = data5.type;const _errs20 = errors;if(!(((data9 === "ACCOUNT") || (data9 === "TRANSACTION")) || (data9 === "ACCOUNT_WITH_TRANSACTIONS"))){validate10.errors = [{instancePath:instancePath+"/templates/" + i0+"/type",schemaPath:"#/$defs/DocumentTemplateaf30/properties/type/enum",keyword:"enum",params:{allowedValues: schema17.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid4 = _errs20 === errors;}else {var valid4 = true;}if(valid4){if(data5.lastModifiedDate !== undefined){const _errs21 = errors;if(errors === _errs21){if(errors === _errs21){if(!(typeof data5.lastModifiedDate === "string")){validate10.errors = [{instancePath:instancePath+"/templates/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/DocumentTemplateaf30/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs21 === errors;}else {var valid4 = true;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/templates/" + i0,schemaPath:"#/$defs/DocumentTemplateaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs10 === errors;if(!valid2){break;}}}else {validate10.errors = [{instancePath:instancePath+"/templates",schemaPath:"#/properties/templates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data.taxSettings !== undefined){let data11 = data.taxSettings;const _errs23 = errors;const _errs24 = errors;if(errors === _errs24){if(data11 && typeof data11 == "object" && !Array.isArray(data11)){if(data11.withholdingTaxEnabled !== undefined){if(typeof data11.withholdingTaxEnabled !== "boolean"){validate10.errors = [{instancePath:instancePath+"/taxSettings/withholdingTaxEnabled",schemaPath:"#/$defs/DepositProductTaxSettingsaf30/properties/withholdingTaxEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/DepositProductTaxSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs23 === errors;}else {var valid1 = true;}if(valid1){if(data.offsetSettings !== undefined){let data13 = data.offsetSettings;const _errs29 = errors;const _errs30 = errors;if(errors === _errs30){if(data13 && typeof data13 == "object" && !Array.isArray(data13)){if(data13.allowOffset !== undefined){if(typeof data13.allowOffset !== "boolean"){validate10.errors = [{instancePath:instancePath+"/offsetSettings/allowOffset",schemaPath:"#/$defs/DepositProductOffsetSettingsaf30/properties/allowOffset/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/offsetSettings",schemaPath:"#/$defs/DepositProductOffsetSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs29 === errors;}else {var valid1 = true;}if(valid1){if(data.creationDate !== undefined){const _errs35 = errors;if(errors === _errs35){if(errors === _errs35){if(!(typeof data.creationDate === "string")){validate10.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs35 === errors;}else {var valid1 = true;}if(valid1){if(data.type !== undefined){const _errs37 = errors;let valid9;valid9 = false;for(const v0 of schema11.properties.type.enum){if(func0(data.type, v0)){valid9 = true;break;}}if(!valid9){validate10.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema11.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs37 === errors;}else {var valid1 = true;}if(valid1){if(data.creditArrangementSettings !== undefined){let data17 = data.creditArrangementSettings;const _errs38 = errors;const _errs39 = errors;if(errors === _errs39){if(data17 && typeof data17 == "object" && !Array.isArray(data17)){if(data17.creditArrangementRequirement !== undefined){let data18 = data17.creditArrangementRequirement;if(!(((data18 === "OPTIONAL") || (data18 === "REQUIRED")) || (data18 === "NOT_REQUIRED"))){validate10.errors = [{instancePath:instancePath+"/creditArrangementSettings/creditArrangementRequirement",schemaPath:"#/$defs/CreditArrangementSettingsaf30/properties/creditArrangementRequirement/enum",keyword:"enum",params:{allowedValues: schema20.properties.creditArrangementRequirement.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/creditArrangementSettings",schemaPath:"#/$defs/CreditArrangementSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs38 === errors;}else {var valid1 = true;}if(valid1){if(data.currencySettings !== undefined){const _errs43 = errors;if(!(validate17(data.currencySettings, {instancePath:instancePath+"/currencySettings",parentData:data,parentDataProperty:"currencySettings",rootData}))){vErrors = vErrors === null ? validate17.errors : vErrors.concat(validate17.errors);errors = vErrors.length;}var valid1 = _errs43 === errors;}else {var valid1 = true;}if(valid1){if(data.maturitySettings !== undefined){const _errs44 = errors;if(!(validate19(data.maturitySettings, {instancePath:instancePath+"/maturitySettings",parentData:data,parentDataProperty:"maturitySettings",rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid1 = _errs44 === errors;}else {var valid1 = true;}if(valid1){if(data.newAccountSettings !== undefined){let data21 = data.newAccountSettings;const _errs45 = errors;const _errs46 = errors;if(errors === _errs46){if(data21 && typeof data21 == "object" && !Array.isArray(data21)){let missing1;if(((data21.idGeneratorType === undefined) && (missing1 = "idGeneratorType")) || ((data21.idPattern === undefined) && (missing1 = "idPattern"))){validate10.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/DepositNewAccountSettingsaf30/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data21.idGeneratorType !== undefined){let data22 = data21.idGeneratorType;const _errs49 = errors;if(!((data22 === "INCREMENTAL_NUMBER") || (data22 === "RANDOM_PATTERN"))){validate10.errors = [{instancePath:instancePath+"/newAccountSettings/idGeneratorType",schemaPath:"#/$defs/DepositNewAccountSettingsaf30/properties/idGeneratorType/enum",keyword:"enum",params:{allowedValues: schema25.properties.idGeneratorType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid13 = _errs49 === errors;}else {var valid13 = true;}if(valid13){if(data21.idPattern !== undefined){const _errs50 = errors;if(typeof data21.idPattern !== "string"){validate10.errors = [{instancePath:instancePath+"/newAccountSettings/idPattern",schemaPath:"#/$defs/DepositNewAccountSettingsaf30/properties/idPattern/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid13 = _errs50 === errors;}else {var valid13 = true;}}}}else {validate10.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/DepositNewAccountSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs45 === errors;}else {var valid1 = true;}if(valid1){if(data.interestSettings !== undefined){const _errs52 = errors;if(!(validate21(data.interestSettings, {instancePath:instancePath+"/interestSettings",parentData:data,parentDataProperty:"interestSettings",rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid1 = _errs52 === errors;}else {var valid1 = true;}if(valid1){if(data.accountingSettings !== undefined){const _errs53 = errors;if(!(validate27(data.accountingSettings, {instancePath:instancePath+"/accountingSettings",parentData:data,parentDataProperty:"accountingSettings",rootData}))){vErrors = vErrors === null ? validate27.errors : vErrors.concat(validate27.errors);errors = vErrors.length;}var valid1 = _errs53 === errors;}else {var valid1 = true;}if(valid1){if(data.name !== undefined){const _errs54 = errors;if(typeof data.name !== "string"){validate10.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs54 === errors;}else {var valid1 = true;}if(valid1){if(data.encodedKey !== undefined){const _errs56 = errors;if(typeof data.encodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs56 === errors;}else {var valid1 = true;}if(valid1){if(data.id !== undefined){const _errs58 = errors;if(typeof data.id !== "string"){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs58 === errors;}else {var valid1 = true;}if(valid1){if(data.state !== undefined){let data29 = data.state;const _errs60 = errors;if(!((data29 === "ACTIVE") || (data29 === "INACTIVE"))){validate10.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema11.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs60 === errors;}else {var valid1 = true;}if(valid1){if(data.category !== undefined){const _errs61 = errors;let valid14;valid14 = false;for(const v1 of schema11.properties.category.enum){if(func0(data.category, v1)){valid14 = true;break;}}if(!valid14){validate10.errors = [{instancePath:instancePath+"/category",schemaPath:"#/properties/category/enum",keyword:"enum",params:{allowedValues: schema11.properties.category.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs61 === errors;}else {var valid1 = true;}if(valid1){if(data.overdraftSettings !== undefined){let data31 = data.overdraftSettings;const _errs62 = errors;const _errs63 = errors;if(errors === _errs63){if(data31 && typeof data31 == "object" && !Array.isArray(data31)){if(data31.allowOverdraft !== undefined){const _errs66 = errors;if(typeof data31.allowOverdraft !== "boolean"){validate10.errors = [{instancePath:instancePath+"/overdraftSettings/allowOverdraft",schemaPath:"#/$defs/DepositProductOverdraftSettingsaf30/properties/allowOverdraft/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid16 = _errs66 === errors;}else {var valid16 = true;}if(valid16){if(data31.allowTechnicalOverdraft !== undefined){const _errs68 = errors;if(typeof data31.allowTechnicalOverdraft !== "boolean"){validate10.errors = [{instancePath:instancePath+"/overdraftSettings/allowTechnicalOverdraft",schemaPath:"#/$defs/DepositProductOverdraftSettingsaf30/properties/allowTechnicalOverdraft/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid16 = _errs68 === errors;}else {var valid16 = true;}if(valid16){if(data31.maxOverdraftLimit !== undefined){let data34 = data31.maxOverdraftLimit;const _errs70 = errors;if(!((typeof data34 == "number") && (isFinite(data34)))){validate10.errors = [{instancePath:instancePath+"/overdraftSettings/maxOverdraftLimit",schemaPath:"#/$defs/DepositProductOverdraftSettingsaf30/properties/maxOverdraftLimit/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid16 = _errs70 === errors;}else {var valid16 = true;}}}}else {validate10.errors = [{instancePath:instancePath+"/overdraftSettings",schemaPath:"#/$defs/DepositProductOverdraftSettingsaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs62 === errors;}else {var valid1 = true;}if(valid1){if(data.internalControls !== undefined){const _errs72 = errors;if(!(validate29(data.internalControls, {instancePath:instancePath+"/internalControls",parentData:data,parentDataProperty:"internalControls",rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var valid1 = _errs72 === errors;}else {var valid1 = true;}if(valid1){if(data.overdraftInterestSettings !== undefined){const _errs73 = errors;if(!(validate31(data.overdraftInterestSettings, {instancePath:instancePath+"/overdraftInterestSettings",parentData:data,parentDataProperty:"overdraftInterestSettings",rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid1 = _errs73 === errors;}else {var valid1 = true;}}}}}}}}}}}}}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;