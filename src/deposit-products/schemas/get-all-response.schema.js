/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"GetAllResponse","type":"array","items":{"$ref":"#/$defs/DepositProduct"},"$defs":{"DepositProduct":{"type":"object","description":"A deposit product defines the terms and constraints on deposit accounts","properties":{"accountingSettings":{"$ref":"#/$defs/DepositProductAccountingSettings"},"availabilitySettings":{"$ref":"#/$defs/DepositProductAvailabilitySettings"},"category":{"description":"Indicates the category that the product belongs to","enum":["PERSONAL_DEPOSIT","BUSINESS_DEPOSIT","DAILY_BANKING_ACCOUNTS","BUSINESS_BANKING_ACCOUNTS","STORED_VALUE_ACCOUNTS","UNCATEGORIZED"]},"creationDate":{"type":"string","description":"The date this product was created","format":"date-time"},"creditArrangementSettings":{"$ref":"#/$defs/CreditArrangementSettings"},"currencySettings":{"$ref":"#/$defs/DepositProductCurrencySettings"},"encodedKey":{"type":"string","description":"The encoded key of the deposit product, auto generated, unique"},"feesSettings":{"$ref":"#/$defs/DepositProductFeeSettings"},"id":{"type":"string","description":"The id of the product, can be generated and customized, unique"},"interestSettings":{"$ref":"#/$defs/DepositProductInterestSettings"},"internalControls":{"$ref":"#/$defs/DepositProductInternalControls"},"lastModifiedDate":{"type":"string","description":"The last date the product was updated","format":"date-time"},"maturitySettings":{"$ref":"#/$defs/DepositMaturitySettings"},"name":{"type":"string","description":"The name of the product"},"newAccountSettings":{"$ref":"#/$defs/DepositNewAccountSettings"},"notes":{"type":"string","description":"Some notes/a description about the product"},"offsetSettings":{"$ref":"#/$defs/DepositProductOffsetSettings"},"overdraftInterestSettings":{"$ref":"#/$defs/OverdraftInterestSettings"},"overdraftSettings":{"$ref":"#/$defs/DepositProductOverdraftSettings"},"state":{"description":"Indicates the current state of the product","enum":["ACTIVE","INACTIVE"]},"taxSettings":{"$ref":"#/$defs/DepositProductTaxSettings"},"templates":{"type":"array","description":"Template documents of the product.","items":{"$ref":"#/$defs/DocumentTemplate"}},"type":{"description":"Indicates the type of product.","enum":["CURRENT_ACCOUNT","REGULAR_SAVINGS","FIXED_DEPOSIT","SAVINGS_PLAN","INVESTOR_ACCOUNT"]}},"required":["accountingSettings","id","name","newAccountSettings","state","type"],"additionalProperties":true},"DepositProductAccountingSettings":{"type":"object","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"description":"A list of accounting rules for a product.","enum":["NONE","CASH","ACCRUAL"]},"accountingRules":{"type":"array","description":"A list of accounting rules for the product.","items":{"$ref":"#/$defs/DepositGLAccountingRule"}},"interestAccruedAccountingMethod":{"description":"A list of accounting rules for a product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":true},"DepositGLAccountingRule":{"type":"object","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","description":"The encoded key of the accounting rule, auto generated, unique."},"financialResource":{"description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]},"glAccountKey":{"type":"string","description":"The encoded key of the account that is mapped to the financialResource"}},"required":["financialResource","glAccountKey"],"additionalProperties":true},"DepositProductAvailabilitySettings":{"type":"object","description":"Holds information about product availability.","properties":{"availableFor":{"type":"array","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS"]},"uniqueItems":true},"branchSettings":{"$ref":"#/$defs/BranchSettings"}},"additionalProperties":true},"BranchSettings":{"type":"object","description":"Holds information about branch availability for the product.","properties":{"availableProductBranches":{"type":"array","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}},"forAllBranches":{"type":"boolean","description":"Indicates if this product should be available for all branches"}},"additionalProperties":true},"CreditArrangementSettings":{"type":"object","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":true},"DepositProductCurrencySettings":{"type":"object","description":"Currency settings for the product.","properties":{"currencies":{"type":"array","description":"Currencies that can be used by accounts of this product","items":{"$ref":"#/$defs/Currency"}}},"additionalProperties":true},"Currency":{"type":"object","description":"Represents a currency eg. USD, EUR.","properties":{"code":{"description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZIG","ZMK","ZWL","ZMW","SSP","NON_FIAT"]},"currencyCode":{"type":"string","description":"Currency code for NON_FIAT currency."}},"additionalProperties":true},"DepositProductFeeSettings":{"type":"object","description":"Defines fees settings for the product.","properties":{"allowArbitraryFees":{"type":"boolean","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."},"fees":{"type":"array","description":"List of all fees that can be applied for accounts of this loan product.","items":{"$ref":"#/$defs/DepositProductPredefinedFee"}}},"additionalProperties":true},"DepositProductPredefinedFee":{"type":"object","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"accountingRules":{"type":"array","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"$ref":"#/$defs/DepositGLAccountingRule"}},"amount":{"type":"number","description":"The amount of the fee"},"amountCalculationFunctionName":{"type":"string","description":"External function"},"amountCalculationMethod":{"description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","MAMBU_FUNCTION"]},"applyDateMethod":{"description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]},"creationDate":{"type":"string","description":"Shows the creation date of the fee","format":"date-time"},"encodedKey":{"type":"string","description":"The encoded key of the predefined fee, auto generated, unique"},"feeApplication":{"description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"id":{"type":"string","description":"The id of the fee"},"lastModifiedDate":{"type":"string","description":"Shows the last modified date of the fee","format":"date-time"},"name":{"type":"string","description":"The name of the fee"},"state":{"description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"trigger":{"description":"Shows the event that will trigger a fee","enum":["MANUAL","MONTHLY_FEE","ARBITRARY"]}},"required":["feeApplication","state","trigger"],"additionalProperties":true},"DepositProductInterestSettings":{"type":"object","description":"The interest settings, defines constraints regarding interest that will be used on the deposit account based on this product.","properties":{"collectInterestWhenLocked":{"type":"boolean","description":"Whether locked accounts still collect Interest or not"},"daysInYear":{"description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestCalculationBalance":{"description":"The balance which is used for the Interest calculation","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]},"interestGainsProvidedEndDate":{"type":"string","description":"The date when the accounts under this product, will no longer have interest gains provided","format":"date"},"interestGainsProvidedStartDate":{"type":"string","description":"The date when the accounts of this product will start to have interest gains provided. Starting with this date 0 interest rate is enforced on the accounts of this product.","format":"date"},"interestPaidIntoAccount":{"type":"boolean","description":"If interest should be payed into the deposit account"},"interestPaymentSettings":{"$ref":"#/$defs/InterestPaymentSettings"},"interestRateSettings":{"$ref":"#/$defs/DepositProductInterestRateSettings"},"maximumBalance":{"type":"number","description":"The maximum balance used for Interest calculation"}},"additionalProperties":true},"InterestPaymentSettings":{"type":"object","description":"Defines the interest payment settings for the deposit product and for deposits created based on this product","properties":{"interestPaymentDates":{"type":"array","description":"List of all dates on which the interest is payed into deposit account","items":{"$ref":"#/$defs/MonthAndDay"}},"interestPaymentPoint":{"description":"Specifies when the interest should be paid to the deposit account","enum":["FIRST_DAY_OF_MONTH","EVERY_WEEK","EVERY_OTHER_WEEK","EVERY_MONTH","EVERY_3_MONTHS","ON_FIXED_DATES","DAILY","ANNUALLY","BI_ANNUALLY","ON_ACCOUNT_MATURITY"]}},"additionalProperties":true},"MonthAndDay":{"type":"object","description":"Wrapper for month and day for instances where the year isn't needed","properties":{"day":{"type":"integer","description":"The day in the month"},"month":{"type":"integer","description":"The month of the year"}},"additionalProperties":true},"DepositProductInterestRateSettings":{"type":"object","description":"The interest settings, defines constraints regarding interest that will be used on the deposit created based on this product.","properties":{"accrueInterestAfterMaturity":{"type":"boolean","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"allowNegativeInterestRate":{"type":"boolean","description":"Indicator whether the deposit product allows negative values for interest rate"},"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"indexSourceKey":{"type":"string","description":"Index rate source key."},"interestChargeFrequency":{"description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestChargeFrequencyCount":{"type":"integer","description":"the count of units to apply over the interval"},"interestRate":{"$ref":"#/$defs/DecimalInterval"},"interestRateReviewCount":{"type":"integer","description":"Interest rate review frequency unit count"},"interestRateReviewUnit":{"description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateTerms":{"description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestRateTiers":{"type":"array","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductInterestRateTier"}}},"additionalProperties":true},"DecimalInterval":{"type":"object","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"number","description":"The maximum value."},"minValue":{"type":"number","description":"The minimum value."}},"additionalProperties":true},"DepositProductInterestRateTier":{"type":"object","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"endingDay":{"type":"integer","description":"The top-limit value for the account period since activation in order to determine if this tier is used or not"},"interestRate":{"type":"number","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true},"DepositProductInternalControls":{"type":"object","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"maxWithdrawalAmount":{"type":"number","description":"Max amount per withdrawal"},"openingBalance":{"$ref":"#/$defs/AmountDecimalInterval"},"recommendedDepositAmount":{"type":"number","description":"Recommended amount for a deposit"}},"additionalProperties":true},"AmountDecimalInterval":{"type":"object","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"number","description":"The maximum value."},"minValue":{"type":"number","description":"The minimum value."}},"additionalProperties":true},"DepositMaturitySettings":{"type":"object","description":"The maturity settings for the product.","properties":{"maturityPeriod":{"$ref":"#/$defs/IntegerInterval"},"maturityPeriodUnit":{"description":"maturity period measurement unit","enum":["DAYS","WEEKS","MONTHS"]}},"additionalProperties":true},"IntegerInterval":{"type":"object","description":"Decimal integer, like min/max/default.","properties":{"defaultValue":{"type":"integer","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"integer","description":"The maximum value."},"minValue":{"type":"integer","description":"The minimum value."}},"additionalProperties":true},"DepositNewAccountSettings":{"type":"object","description":"New Account settings for deposit accounts","properties":{"idGeneratorType":{"description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"idPattern":{"type":"string","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["idGeneratorType","idPattern"],"additionalProperties":true},"DepositProductOffsetSettings":{"type":"object","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","description":"Specify if the product allow to create accounts which can be used as offset for loans"}},"additionalProperties":true},"OverdraftInterestSettings":{"type":"object","description":"Overdraft settings for the product","properties":{"daysInYear":{"description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestCalculationBalance":{"description":"The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]},"interestRateSettings":{"$ref":"#/$defs/DepositProductOverdraftInterestRateSettings"}},"additionalProperties":true},"DepositProductOverdraftInterestRateSettings":{"type":"object","description":"The overdraft interest settings, defines constraints regarding interest that will be used on the account created based on this product.","properties":{"indexSourceKey":{"type":"string","description":"Index rate source key."},"interestChargeFrequency":{"description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestChargeFrequencyCount":{"type":"integer","description":"the count of units to apply over the interval"},"interestRate":{"$ref":"#/$defs/DecimalInterval"},"interestRateReviewCount":{"type":"integer","description":"Interest rate review frequency unit count"},"interestRateReviewUnit":{"description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateTerms":{"description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestRateTiers":{"type":"array","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductOverdraftInterestRateTier"}}},"additionalProperties":true},"DepositProductOverdraftInterestRateTier":{"type":"object","description":"Used for TIERED interest rates, holds the values to define how the interest is computed","properties":{"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true},"DepositProductOverdraftSettings":{"type":"object","description":"The overdraft settings of the deposit product","properties":{"allowOverdraft":{"type":"boolean","description":"Whether the accounts for this product may have overdraft"},"allowTechnicalOverdraft":{"type":"boolean","description":"Whether the accounts for this product may have technical overdraft"},"maxOverdraftLimit":{"type":"number","description":"How much money may be taken out for the account to go negative"}},"additionalProperties":true},"DepositProductTaxSettings":{"type":"object","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"withholdingTaxEnabled":{"type":"boolean","description":"Whether withholding taxes are enabled for this product or not"}},"additionalProperties":true},"DocumentTemplate":{"type":"object","description":"Template documents of the product.","properties":{"creationDate":{"type":"string","description":"The creation date of the document","format":"date-time"},"encodedKey":{"type":"string","description":"The document encodedKey"},"lastModifiedDate":{"type":"string","description":"The last modified date of the document","format":"date-time"},"name":{"type":"string","description":"The name the document"},"type":{"description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"A deposit product defines the terms and constraints on deposit accounts","properties":{"accountingSettings":{"$ref":"#/$defs/DepositProductAccountingSettings"},"availabilitySettings":{"$ref":"#/$defs/DepositProductAvailabilitySettings"},"category":{"description":"Indicates the category that the product belongs to","enum":["PERSONAL_DEPOSIT","BUSINESS_DEPOSIT","DAILY_BANKING_ACCOUNTS","BUSINESS_BANKING_ACCOUNTS","STORED_VALUE_ACCOUNTS","UNCATEGORIZED"]},"creationDate":{"type":"string","description":"The date this product was created","format":"date-time"},"creditArrangementSettings":{"$ref":"#/$defs/CreditArrangementSettings"},"currencySettings":{"$ref":"#/$defs/DepositProductCurrencySettings"},"encodedKey":{"type":"string","description":"The encoded key of the deposit product, auto generated, unique"},"feesSettings":{"$ref":"#/$defs/DepositProductFeeSettings"},"id":{"type":"string","description":"The id of the product, can be generated and customized, unique"},"interestSettings":{"$ref":"#/$defs/DepositProductInterestSettings"},"internalControls":{"$ref":"#/$defs/DepositProductInternalControls"},"lastModifiedDate":{"type":"string","description":"The last date the product was updated","format":"date-time"},"maturitySettings":{"$ref":"#/$defs/DepositMaturitySettings"},"name":{"type":"string","description":"The name of the product"},"newAccountSettings":{"$ref":"#/$defs/DepositNewAccountSettings"},"notes":{"type":"string","description":"Some notes/a description about the product"},"offsetSettings":{"$ref":"#/$defs/DepositProductOffsetSettings"},"overdraftInterestSettings":{"$ref":"#/$defs/OverdraftInterestSettings"},"overdraftSettings":{"$ref":"#/$defs/DepositProductOverdraftSettings"},"state":{"description":"Indicates the current state of the product","enum":["ACTIVE","INACTIVE"]},"taxSettings":{"$ref":"#/$defs/DepositProductTaxSettings"},"templates":{"type":"array","description":"Template documents of the product.","items":{"$ref":"#/$defs/DocumentTemplate"}},"type":{"description":"Indicates the type of product.","enum":["CURRENT_ACCOUNT","REGULAR_SAVINGS","FIXED_DEPOSIT","SAVINGS_PLAN","INVESTOR_ACCOUNT"]}},"required":["accountingSettings","id","name","newAccountSettings","state","type"],"additionalProperties":true};const schema17 = {"type":"object","description":"The funding settings, holds the settings regarding the funding for the loan product.","properties":{"creditArrangementRequirement":{"description":"Shows whether accounts created after this product can/should be part of a line of credit.","enum":["OPTIONAL","REQUIRED","NOT_REQUIRED"]}},"additionalProperties":true};const schema33 = {"type":"object","description":"New Account settings for deposit accounts","properties":{"idGeneratorType":{"description":"The type of generator used for IDs creation.","enum":["INCREMENTAL_NUMBER","RANDOM_PATTERN"]},"idPattern":{"type":"string","description":"The pattern that will be used for ID validation (as referred to as an input mask)."}},"required":["idGeneratorType","idPattern"],"additionalProperties":true};const schema34 = {"type":"object","description":"The offset settings, holds information about offset.","properties":{"allowOffset":{"type":"boolean","description":"Specify if the product allow to create accounts which can be used as offset for loans"}},"additionalProperties":true};const schema39 = {"type":"object","description":"The overdraft settings of the deposit product","properties":{"allowOverdraft":{"type":"boolean","description":"Whether the accounts for this product may have overdraft"},"allowTechnicalOverdraft":{"type":"boolean","description":"Whether the accounts for this product may have technical overdraft"},"maxOverdraftLimit":{"type":"number","description":"How much money may be taken out for the account to go negative"}},"additionalProperties":true};const schema40 = {"type":"object","description":"Tax settings, defines some settings for taxes on the loan product","properties":{"withholdingTaxEnabled":{"type":"boolean","description":"Whether withholding taxes are enabled for this product or not"}},"additionalProperties":true};const schema41 = {"type":"object","description":"Template documents of the product.","properties":{"creationDate":{"type":"string","description":"The creation date of the document","format":"date-time"},"encodedKey":{"type":"string","description":"The document encodedKey"},"lastModifiedDate":{"type":"string","description":"The last modified date of the document","format":"date-time"},"name":{"type":"string","description":"The name the document"},"type":{"description":"The type of the template","enum":["ACCOUNT","TRANSACTION","ACCOUNT_WITH_TRANSACTIONS"]}},"additionalProperties":true};const schema13 = {"type":"object","description":"Accounting settings, defines the accounting settings for the product.","properties":{"accountingMethod":{"description":"A list of accounting rules for a product.","enum":["NONE","CASH","ACCRUAL"]},"accountingRules":{"type":"array","description":"A list of accounting rules for the product.","items":{"$ref":"#/$defs/DepositGLAccountingRule"}},"interestAccruedAccountingMethod":{"description":"A list of accounting rules for a product.","enum":["NONE","DAILY","END_OF_MONTH"]}},"required":["accountingMethod"],"additionalProperties":true};const schema14 = {"type":"object","description":"The GL accounting rule, it maps a financial resource with a GL account for a specific product (i.e loan or saving).","properties":{"encodedKey":{"type":"string","description":"The encoded key of the accounting rule, auto generated, unique."},"financialResource":{"description":"General Ledger Financial Resources used to setup the product accounting rules and determine the credit and debit accounts when logging journal entries","enum":["PORTFOLIO_CONTROL","FUND_SOURCE","WRITE_OFF_EXPENSE","INTEREST_INCOME","TAXES_PAYABLE","FEE_INCOME","PENALTY_INCOME","NEGATIVE_INTEREST_PAYABLE_RECEIVABLE","NEGATIVE_INTEREST_PAYABLE","INTEREST_RECEIVABLE","FEE_RECEIVABLE","PENALTY_RECEIVABLE","TAXES_RECEIVABLE","DEFERRED_INTERESTS_INCOME","DEFERRED_FEE_INCOME","DEFERRED_TAXES","DEPOSIT_REFERENCE","SAVINGS_CONTROL","INTEREST_EXPENSE","INTEREST_PAYABLE","NEGATIVE_INTEREST_INCOME","NEGATIVE_INTEREST_RECEIVABLE","OVERDRAFT_PORTFOLIO_CONTROL","OVERDRAFT_INTEREST_INCOME","OVERDRAFT_WRITE_OFF_EXPENSE","OVERDRAFT_INTEREST_RECEIVABLE","INTER_BRANCH_TRANSFER"]},"glAccountKey":{"type":"string","description":"The encoded key of the account that is mapped to the financialResource"}},"required":["financialResource","glAccountKey"],"additionalProperties":true};const func0 = require("ajv/dist/runtime/equal").default;function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.accountingMethod === undefined) && (missing0 = "accountingMethod")){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountingMethod !== undefined){let data0 = data.accountingMethod;const _errs2 = errors;if(!(((data0 === "NONE") || (data0 === "CASH")) || (data0 === "ACCRUAL"))){validate12.errors = [{instancePath:instancePath+"/accountingMethod",schemaPath:"#/properties/accountingMethod/enum",keyword:"enum",params:{allowedValues: schema13.properties.accountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.accountingRules !== undefined){let data1 = data.accountingRules;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.financialResource === undefined) && (missing1 = "financialResource")) || ((data2.glAccountKey === undefined) && (missing1 = "glAccountKey"))){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRule/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data2.encodedKey !== undefined){const _errs9 = errors;if(typeof data2.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositGLAccountingRule/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}if(valid3){if(data2.financialResource !== undefined){const _errs11 = errors;let valid4;valid4 = false;for(const v0 of schema14.properties.financialResource.enum){if(func0(data2.financialResource, v0)){valid4 = true;break;}}if(!valid4){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/DepositGLAccountingRule/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema14.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data2.glAccountKey !== undefined){const _errs12 = errors;if(typeof data2.glAccountKey !== "string"){validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/DepositGLAccountingRule/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}}}}}else {validate12.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRule/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAccruedAccountingMethod !== undefined){let data6 = data.interestAccruedAccountingMethod;const _errs14 = errors;if(!(((data6 === "NONE") || (data6 === "DAILY")) || (data6 === "END_OF_MONTH"))){validate12.errors = [{instancePath:instancePath+"/interestAccruedAccountingMethod",schemaPath:"#/properties/interestAccruedAccountingMethod/enum",keyword:"enum",params:{allowedValues: schema13.properties.interestAccruedAccountingMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema15 = {"type":"object","description":"Holds information about product availability.","properties":{"availableFor":{"type":"array","description":"Holds the entities this product is available for. i.e Individuals","items":{"enum":["INDIVIDUALS","PURE_GROUPS"]},"uniqueItems":true},"branchSettings":{"$ref":"#/$defs/BranchSettings"}},"additionalProperties":true};const schema16 = {"type":"object","description":"Holds information about branch availability for the product.","properties":{"availableProductBranches":{"type":"array","description":"Holds the encoded keys of the branches this product should be available for.","items":{"type":"string"}},"forAllBranches":{"type":"boolean","description":"Indicates if this product should be available for all branches"}},"additionalProperties":true};function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.availableFor !== undefined){let data0 = data.availableFor;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;if(!((data1 === "INDIVIDUALS") || (data1 === "PURE_GROUPS"))){validate14.errors = [{instancePath:instancePath+"/availableFor/" + i0,schemaPath:"#/properties/availableFor/items/enum",keyword:"enum",params:{allowedValues: schema15.properties.availableFor.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs4 === errors;if(!valid1){break;}}if(valid1){let i1 = data0.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data0[i1], data0[j0])){validate14.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate14.errors = [{instancePath:instancePath+"/availableFor",schemaPath:"#/properties/availableFor/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.branchSettings !== undefined){let data2 = data.branchSettings;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.availableProductBranches !== undefined){let data3 = data2.availableProductBranches;const _errs9 = errors;if(errors === _errs9){if(Array.isArray(data3)){var valid5 = true;const len1 = data3.length;for(let i2=0; i2<len1; i2++){const _errs11 = errors;if(typeof data3[i2] !== "string"){validate14.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches/" + i2,schemaPath:"#/$defs/BranchSettings/properties/availableProductBranches/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs11 === errors;if(!valid5){break;}}}else {validate14.errors = [{instancePath:instancePath+"/branchSettings/availableProductBranches",schemaPath:"#/$defs/BranchSettings/properties/availableProductBranches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs9 === errors;}else {var valid4 = true;}if(valid4){if(data2.forAllBranches !== undefined){const _errs13 = errors;if(typeof data2.forAllBranches !== "boolean"){validate14.errors = [{instancePath:instancePath+"/branchSettings/forAllBranches",schemaPath:"#/$defs/BranchSettings/properties/forAllBranches/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid4 = _errs13 === errors;}else {var valid4 = true;}}}else {validate14.errors = [{instancePath:instancePath+"/branchSettings",schemaPath:"#/$defs/BranchSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}const schema18 = {"type":"object","description":"Currency settings for the product.","properties":{"currencies":{"type":"array","description":"Currencies that can be used by accounts of this product","items":{"$ref":"#/$defs/Currency"}}},"additionalProperties":true};const schema19 = {"type":"object","description":"Represents a currency eg. USD, EUR.","properties":{"code":{"description":"Fiat(ISO-4217) currency code or NON_FIAT for non fiat currencies.","enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VED","VEF","VES","VND","VUV","WST","XAG","XAU","XAF","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZIG","ZMK","ZWL","ZMW","SSP","NON_FIAT"]},"currencyCode":{"type":"string","description":"Currency code for NON_FIAT currency."}},"additionalProperties":true};function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.currencies !== undefined){let data0 = data.currencies;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.code !== undefined){const _errs8 = errors;let valid4;valid4 = false;for(const v0 of schema19.properties.code.enum){if(func0(data1.code, v0)){valid4 = true;break;}}if(!valid4){validate16.errors = [{instancePath:instancePath+"/currencies/" + i0+"/code",schemaPath:"#/$defs/Currency/properties/code/enum",keyword:"enum",params:{allowedValues: schema19.properties.code.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.currencyCode !== undefined){const _errs9 = errors;if(typeof data1.currencyCode !== "string"){validate16.errors = [{instancePath:instancePath+"/currencies/" + i0+"/currencyCode",schemaPath:"#/$defs/Currency/properties/currencyCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}}}else {validate16.errors = [{instancePath:instancePath+"/currencies/" + i0,schemaPath:"#/$defs/Currency/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate16.errors = [{instancePath:instancePath+"/currencies",schemaPath:"#/properties/currencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}else {validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate16.errors = vErrors;return errors === 0;}const schema20 = {"type":"object","description":"Defines fees settings for the product.","properties":{"allowArbitraryFees":{"type":"boolean","description":"Only if true users will be able to apply fees, for current object, of type 'Other'; these fees can have any amount."},"fees":{"type":"array","description":"List of all fees that can be applied for accounts of this loan product.","items":{"$ref":"#/$defs/DepositProductPredefinedFee"}}},"additionalProperties":true};const schema21 = {"type":"object","description":"The response representation of the PredefinedFee. Represents a fee with a defined name and a fixed value.","properties":{"accountingRules":{"type":"array","description":"A list of accounting rules defined for this fee. If null, product default rules are selected.","items":{"$ref":"#/$defs/DepositGLAccountingRule"}},"amount":{"type":"number","description":"The amount of the fee"},"amountCalculationFunctionName":{"type":"string","description":"External function"},"amountCalculationMethod":{"description":"The amount from which the fee is calculated using percentageAmount","enum":["FLAT","MAMBU_FUNCTION"]},"applyDateMethod":{"description":"Shows when a fee should be applied; to be used with monthly deposit fees","enum":["MONTHLY_FROM_ACTIVATION","FIRST_OF_EVERY_MONTH"]},"creationDate":{"type":"string","description":"Shows the creation date of the fee","format":"date-time"},"encodedKey":{"type":"string","description":"The encoded key of the predefined fee, auto generated, unique"},"feeApplication":{"description":"The type of fee application when disbursement is applied","enum":["REQUIRED","OPTIONAL"]},"id":{"type":"string","description":"The id of the fee"},"lastModifiedDate":{"type":"string","description":"Shows the last modified date of the fee","format":"date-time"},"name":{"type":"string","description":"The name of the fee"},"state":{"description":"Indicates the state of the fee","enum":["ACTIVE","INACTIVE"]},"trigger":{"description":"Shows the event that will trigger a fee","enum":["MANUAL","MONTHLY_FEE","ARBITRARY"]}},"required":["feeApplication","state","trigger"],"additionalProperties":true};function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.feeApplication === undefined) && (missing0 = "feeApplication")) || ((data.state === undefined) && (missing0 = "state"))) || ((data.trigger === undefined) && (missing0 = "trigger"))){validate19.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountingRules !== undefined){let data0 = data.accountingRules;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((data1.financialResource === undefined) && (missing1 = "financialResource")) || ((data1.glAccountKey === undefined) && (missing1 = "glAccountKey"))){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRule/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.encodedKey !== undefined){const _errs8 = errors;if(typeof data1.encodedKey !== "string"){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositGLAccountingRule/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.financialResource !== undefined){const _errs10 = errors;let valid4;valid4 = false;for(const v0 of schema14.properties.financialResource.enum){if(func0(data1.financialResource, v0)){valid4 = true;break;}}if(!valid4){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/financialResource",schemaPath:"#/$defs/DepositGLAccountingRule/properties/financialResource/enum",keyword:"enum",params:{allowedValues: schema14.properties.financialResource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data1.glAccountKey !== undefined){const _errs11 = errors;if(typeof data1.glAccountKey !== "string"){validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0+"/glAccountKey",schemaPath:"#/$defs/DepositGLAccountingRule/properties/glAccountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}}}}}else {validate19.errors = [{instancePath:instancePath+"/accountingRules/" + i0,schemaPath:"#/$defs/DepositGLAccountingRule/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate19.errors = [{instancePath:instancePath+"/accountingRules",schemaPath:"#/properties/accountingRules/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data5 = data.amount;const _errs13 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate19.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationFunctionName !== undefined){const _errs15 = errors;if(typeof data.amountCalculationFunctionName !== "string"){validate19.errors = [{instancePath:instancePath+"/amountCalculationFunctionName",schemaPath:"#/properties/amountCalculationFunctionName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.amountCalculationMethod !== undefined){let data7 = data.amountCalculationMethod;const _errs17 = errors;if(!((data7 === "FLAT") || (data7 === "MAMBU_FUNCTION"))){validate19.errors = [{instancePath:instancePath+"/amountCalculationMethod",schemaPath:"#/properties/amountCalculationMethod/enum",keyword:"enum",params:{allowedValues: schema21.properties.amountCalculationMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.applyDateMethod !== undefined){let data8 = data.applyDateMethod;const _errs18 = errors;if(!((data8 === "MONTHLY_FROM_ACTIVATION") || (data8 === "FIRST_OF_EVERY_MONTH"))){validate19.errors = [{instancePath:instancePath+"/applyDateMethod",schemaPath:"#/properties/applyDateMethod/enum",keyword:"enum",params:{allowedValues: schema21.properties.applyDateMethod.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.creationDate !== undefined){const _errs19 = errors;if(errors === _errs19){if(errors === _errs19){if(!(typeof data.creationDate === "string")){validate19.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs21 = errors;if(typeof data.encodedKey !== "string"){validate19.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.feeApplication !== undefined){let data11 = data.feeApplication;const _errs23 = errors;if(!((data11 === "REQUIRED") || (data11 === "OPTIONAL"))){validate19.errors = [{instancePath:instancePath+"/feeApplication",schemaPath:"#/properties/feeApplication/enum",keyword:"enum",params:{allowedValues: schema21.properties.feeApplication.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs24 = errors;if(typeof data.id !== "string"){validate19.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.lastModifiedDate !== undefined){const _errs26 = errors;if(errors === _errs26){if(errors === _errs26){if(!(typeof data.lastModifiedDate === "string")){validate19.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs28 = errors;if(typeof data.name !== "string"){validate19.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.state !== undefined){let data15 = data.state;const _errs30 = errors;if(!((data15 === "ACTIVE") || (data15 === "INACTIVE"))){validate19.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema21.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.trigger !== undefined){let data16 = data.trigger;const _errs31 = errors;if(!(((data16 === "MANUAL") || (data16 === "MONTHLY_FEE")) || (data16 === "ARBITRARY"))){validate19.errors = [{instancePath:instancePath+"/trigger",schemaPath:"#/properties/trigger/enum",keyword:"enum",params:{allowedValues: schema21.properties.trigger.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate19.errors = vErrors;return errors === 0;}function validate18(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.allowArbitraryFees !== undefined){const _errs2 = errors;if(typeof data.allowArbitraryFees !== "boolean"){validate18.errors = [{instancePath:instancePath+"/allowArbitraryFees",schemaPath:"#/properties/allowArbitraryFees/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fees !== undefined){let data1 = data.fees;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(!(validate19(data1[i0], {instancePath:instancePath+"/fees/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate18.errors = [{instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}else {validate18.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate18.errors = vErrors;return errors === 0;}const schema23 = {"type":"object","description":"The interest settings, defines constraints regarding interest that will be used on the deposit account based on this product.","properties":{"collectInterestWhenLocked":{"type":"boolean","description":"Whether locked accounts still collect Interest or not"},"daysInYear":{"description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestCalculationBalance":{"description":"The balance which is used for the Interest calculation","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]},"interestGainsProvidedEndDate":{"type":"string","description":"The date when the accounts under this product, will no longer have interest gains provided","format":"date"},"interestGainsProvidedStartDate":{"type":"string","description":"The date when the accounts of this product will start to have interest gains provided. Starting with this date 0 interest rate is enforced on the accounts of this product.","format":"date"},"interestPaidIntoAccount":{"type":"boolean","description":"If interest should be payed into the deposit account"},"interestPaymentSettings":{"$ref":"#/$defs/InterestPaymentSettings"},"interestRateSettings":{"$ref":"#/$defs/DepositProductInterestRateSettings"},"maximumBalance":{"type":"number","description":"The maximum balance used for Interest calculation"}},"additionalProperties":true};const schema24 = {"type":"object","description":"Defines the interest payment settings for the deposit product and for deposits created based on this product","properties":{"interestPaymentDates":{"type":"array","description":"List of all dates on which the interest is payed into deposit account","items":{"$ref":"#/$defs/MonthAndDay"}},"interestPaymentPoint":{"description":"Specifies when the interest should be paid to the deposit account","enum":["FIRST_DAY_OF_MONTH","EVERY_WEEK","EVERY_OTHER_WEEK","EVERY_MONTH","EVERY_3_MONTHS","ON_FIXED_DATES","DAILY","ANNUALLY","BI_ANNUALLY","ON_ACCOUNT_MATURITY"]}},"additionalProperties":true};const schema25 = {"type":"object","description":"Wrapper for month and day for instances where the year isn't needed","properties":{"day":{"type":"integer","description":"The day in the month"},"month":{"type":"integer","description":"The month of the year"}},"additionalProperties":true};function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestPaymentDates !== undefined){let data0 = data.interestPaymentDates;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.day !== undefined){let data2 = data1.day;const _errs8 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate23.errors = [{instancePath:instancePath+"/interestPaymentDates/" + i0+"/day",schemaPath:"#/$defs/MonthAndDay/properties/day/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.month !== undefined){let data3 = data1.month;const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate23.errors = [{instancePath:instancePath+"/interestPaymentDates/" + i0+"/month",schemaPath:"#/$defs/MonthAndDay/properties/month/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}}}else {validate23.errors = [{instancePath:instancePath+"/interestPaymentDates/" + i0,schemaPath:"#/$defs/MonthAndDay/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate23.errors = [{instancePath:instancePath+"/interestPaymentDates",schemaPath:"#/properties/interestPaymentDates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestPaymentPoint !== undefined){const _errs12 = errors;let valid4;valid4 = false;for(const v0 of schema24.properties.interestPaymentPoint.enum){if(func0(data.interestPaymentPoint, v0)){valid4 = true;break;}}if(!valid4){validate23.errors = [{instancePath:instancePath+"/interestPaymentPoint",schemaPath:"#/properties/interestPaymentPoint/enum",keyword:"enum",params:{allowedValues: schema24.properties.interestPaymentPoint.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}const schema26 = {"type":"object","description":"The interest settings, defines constraints regarding interest that will be used on the deposit created based on this product.","properties":{"accrueInterestAfterMaturity":{"type":"boolean","description":"If the product supports this option, specify if the interest should be accrued after the account maturity date"},"allowNegativeInterestRate":{"type":"boolean","description":"Indicator whether the deposit product allows negative values for interest rate"},"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"indexSourceKey":{"type":"string","description":"Index rate source key."},"interestChargeFrequency":{"description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestChargeFrequencyCount":{"type":"integer","description":"the count of units to apply over the interval"},"interestRate":{"$ref":"#/$defs/DecimalInterval"},"interestRateReviewCount":{"type":"integer","description":"Interest rate review frequency unit count"},"interestRateReviewUnit":{"description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateTerms":{"description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestRateTiers":{"type":"array","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductInterestRateTier"}}},"additionalProperties":true};const schema27 = {"type":"object","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"number","description":"The maximum value."},"minValue":{"type":"number","description":"The minimum value."}},"additionalProperties":true};const schema28 = {"type":"object","description":"Used or TIERED interest rates, holds the values to define how the interest is computed","properties":{"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"endingDay":{"type":"integer","description":"The top-limit value for the account period since activation in order to determine if this tier is used or not"},"interestRate":{"type":"number","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true};function validate25(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.accrueInterestAfterMaturity !== undefined){const _errs2 = errors;if(typeof data.accrueInterestAfterMaturity !== "boolean"){validate25.errors = [{instancePath:instancePath+"/accrueInterestAfterMaturity",schemaPath:"#/properties/accrueInterestAfterMaturity/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.allowNegativeInterestRate !== undefined){const _errs4 = errors;if(typeof data.allowNegativeInterestRate !== "boolean"){validate25.errors = [{instancePath:instancePath+"/allowNegativeInterestRate",schemaPath:"#/properties/allowNegativeInterestRate/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.encodedKey !== undefined){const _errs6 = errors;if(typeof data.encodedKey !== "string"){validate25.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.indexSourceKey !== undefined){const _errs8 = errors;if(typeof data.indexSourceKey !== "string"){validate25.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequency !== undefined){const _errs10 = errors;let valid1;valid1 = false;for(const v0 of schema26.properties.interestChargeFrequency.enum){if(func0(data.interestChargeFrequency, v0)){valid1 = true;break;}}if(!valid1){validate25.errors = [{instancePath:instancePath+"/interestChargeFrequency",schemaPath:"#/properties/interestChargeFrequency/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestChargeFrequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequencyCount !== undefined){let data5 = data.interestChargeFrequencyCount;const _errs11 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate25.errors = [{instancePath:instancePath+"/interestChargeFrequencyCount",schemaPath:"#/properties/interestChargeFrequencyCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRate !== undefined){let data6 = data.interestRate;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.defaultValue !== undefined){let data7 = data6.defaultValue;const _errs17 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate25.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalInterval/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs17 === errors;}else {var valid3 = true;}if(valid3){if(data6.maxValue !== undefined){let data8 = data6.maxValue;const _errs19 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate25.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalInterval/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs19 === errors;}else {var valid3 = true;}if(valid3){if(data6.minValue !== undefined){let data9 = data6.minValue;const _errs21 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate25.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalInterval/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs21 === errors;}else {var valid3 = true;}}}}else {validate25.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalInterval/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data10 = data.interestRateReviewCount;const _errs23 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate25.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data11 = data.interestRateReviewUnit;const _errs25 = errors;if(!(((data11 === "DAYS") || (data11 === "WEEKS")) || (data11 === "MONTHS"))){validate25.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data12 = data.interestRateSource;const _errs26 = errors;if(!((data12 === "FIXED_INTEREST_RATE") || (data12 === "INDEX_INTEREST_RATE"))){validate25.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTerms !== undefined){let data13 = data.interestRateTerms;const _errs27 = errors;if(!((((data13 === "FIXED") || (data13 === "TIERED")) || (data13 === "TIERED_PERIOD")) || (data13 === "TIERED_BAND"))){validate25.errors = [{instancePath:instancePath+"/interestRateTerms",schemaPath:"#/properties/interestRateTerms/enum",keyword:"enum",params:{allowedValues: schema26.properties.interestRateTerms.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data14 = data.interestRateTiers;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data14)){var valid4 = true;const len0 = data14.length;for(let i0=0; i0<len0; i0++){let data15 = data14[i0];const _errs30 = errors;const _errs31 = errors;if(errors === _errs31){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){let missing0;if((data15.interestRate === undefined) && (missing0 = "interestRate")){validate25.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductInterestRateTier/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data15.encodedKey !== undefined){const _errs34 = errors;if(typeof data15.encodedKey !== "string"){validate25.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositProductInterestRateTier/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs34 === errors;}else {var valid6 = true;}if(valid6){if(data15.endingBalance !== undefined){let data17 = data15.endingBalance;const _errs36 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate25.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/DepositProductInterestRateTier/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs36 === errors;}else {var valid6 = true;}if(valid6){if(data15.endingDay !== undefined){let data18 = data15.endingDay;const _errs38 = errors;if(!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))){validate25.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingDay",schemaPath:"#/$defs/DepositProductInterestRateTier/properties/endingDay/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid6 = _errs38 === errors;}else {var valid6 = true;}if(valid6){if(data15.interestRate !== undefined){let data19 = data15.interestRate;const _errs40 = errors;if(!((typeof data19 == "number") && (isFinite(data19)))){validate25.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/DepositProductInterestRateTier/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs40 === errors;}else {var valid6 = true;}}}}}}else {validate25.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductInterestRateTier/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs30 === errors;if(!valid4){break;}}}else {validate25.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate25.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate25.errors = vErrors;return errors === 0;}function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.collectInterestWhenLocked !== undefined){const _errs2 = errors;if(typeof data.collectInterestWhenLocked !== "boolean"){validate22.errors = [{instancePath:instancePath+"/collectInterestWhenLocked",schemaPath:"#/properties/collectInterestWhenLocked/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.daysInYear !== undefined){const _errs4 = errors;let valid1;valid1 = false;for(const v0 of schema23.properties.daysInYear.enum){if(func0(data.daysInYear, v0)){valid1 = true;break;}}if(!valid1){validate22.errors = [{instancePath:instancePath+"/daysInYear",schemaPath:"#/properties/daysInYear/enum",keyword:"enum",params:{allowedValues: schema23.properties.daysInYear.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.interestCalculationBalance !== undefined){const _errs5 = errors;let valid2;valid2 = false;for(const v1 of schema23.properties.interestCalculationBalance.enum){if(func0(data.interestCalculationBalance, v1)){valid2 = true;break;}}if(!valid2){validate22.errors = [{instancePath:instancePath+"/interestCalculationBalance",schemaPath:"#/properties/interestCalculationBalance/enum",keyword:"enum",params:{allowedValues: schema23.properties.interestCalculationBalance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.interestGainsProvidedEndDate !== undefined){const _errs6 = errors;if(errors === _errs6){if(errors === _errs6){if(!(typeof data.interestGainsProvidedEndDate === "string")){validate22.errors = [{instancePath:instancePath+"/interestGainsProvidedEndDate",schemaPath:"#/properties/interestGainsProvidedEndDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.interestGainsProvidedStartDate !== undefined){const _errs8 = errors;if(errors === _errs8){if(errors === _errs8){if(!(typeof data.interestGainsProvidedStartDate === "string")){validate22.errors = [{instancePath:instancePath+"/interestGainsProvidedStartDate",schemaPath:"#/properties/interestGainsProvidedStartDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.interestPaidIntoAccount !== undefined){const _errs10 = errors;if(typeof data.interestPaidIntoAccount !== "boolean"){validate22.errors = [{instancePath:instancePath+"/interestPaidIntoAccount",schemaPath:"#/properties/interestPaidIntoAccount/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.interestPaymentSettings !== undefined){const _errs12 = errors;if(!(validate23(data.interestPaymentSettings, {instancePath:instancePath+"/interestPaymentSettings",parentData:data,parentDataProperty:"interestPaymentSettings",rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSettings !== undefined){const _errs13 = errors;if(!(validate25(data.interestRateSettings, {instancePath:instancePath+"/interestRateSettings",parentData:data,parentDataProperty:"interestRateSettings",rootData}))){vErrors = vErrors === null ? validate25.errors : vErrors.concat(validate25.errors);errors = vErrors.length;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.maximumBalance !== undefined){let data8 = data.maximumBalance;const _errs14 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate22.errors = [{instancePath:instancePath+"/maximumBalance",schemaPath:"#/properties/maximumBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}const schema29 = {"type":"object","description":"Constraints and automated actions and that will be applied on the accounts.","properties":{"dormancyPeriodDays":{"type":"integer","description":"Specifies the number of days for an account to be fully paid in order to auto close it."},"maxWithdrawalAmount":{"type":"number","description":"Max amount per withdrawal"},"openingBalance":{"$ref":"#/$defs/AmountDecimalInterval"},"recommendedDepositAmount":{"type":"number","description":"Recommended amount for a deposit"}},"additionalProperties":true};const schema30 = {"type":"object","description":"Decimal constraints, like min/max/default.","properties":{"defaultValue":{"type":"number","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"number","description":"The maximum value."},"minValue":{"type":"number","description":"The minimum value."}},"additionalProperties":true};function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.dormancyPeriodDays !== undefined){let data0 = data.dormancyPeriodDays;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate28.errors = [{instancePath:instancePath+"/dormancyPeriodDays",schemaPath:"#/properties/dormancyPeriodDays/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.maxWithdrawalAmount !== undefined){let data1 = data.maxWithdrawalAmount;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate28.errors = [{instancePath:instancePath+"/maxWithdrawalAmount",schemaPath:"#/properties/maxWithdrawalAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.openingBalance !== undefined){let data2 = data.openingBalance;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.defaultValue !== undefined){let data3 = data2.defaultValue;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate28.errors = [{instancePath:instancePath+"/openingBalance/defaultValue",schemaPath:"#/$defs/AmountDecimalInterval/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.maxValue !== undefined){let data4 = data2.maxValue;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate28.errors = [{instancePath:instancePath+"/openingBalance/maxValue",schemaPath:"#/$defs/AmountDecimalInterval/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.minValue !== undefined){let data5 = data2.minValue;const _errs14 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate28.errors = [{instancePath:instancePath+"/openingBalance/minValue",schemaPath:"#/$defs/AmountDecimalInterval/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}else {validate28.errors = [{instancePath:instancePath+"/openingBalance",schemaPath:"#/$defs/AmountDecimalInterval/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.recommendedDepositAmount !== undefined){let data6 = data.recommendedDepositAmount;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate28.errors = [{instancePath:instancePath+"/recommendedDepositAmount",schemaPath:"#/properties/recommendedDepositAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}}}}}else {validate28.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate28.errors = vErrors;return errors === 0;}const schema31 = {"type":"object","description":"The maturity settings for the product.","properties":{"maturityPeriod":{"$ref":"#/$defs/IntegerInterval"},"maturityPeriodUnit":{"description":"maturity period measurement unit","enum":["DAYS","WEEKS","MONTHS"]}},"additionalProperties":true};const schema32 = {"type":"object","description":"Decimal integer, like min/max/default.","properties":{"defaultValue":{"type":"integer","description":"The default value, will be used in case no other value was filled in by the user."},"maxValue":{"type":"integer","description":"The maximum value."},"minValue":{"type":"integer","description":"The minimum value."}},"additionalProperties":true};function validate30(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.maturityPeriod !== undefined){let data0 = data.maturityPeriod;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.defaultValue !== undefined){let data1 = data0.defaultValue;const _errs6 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate30.errors = [{instancePath:instancePath+"/maturityPeriod/defaultValue",schemaPath:"#/$defs/IntegerInterval/properties/defaultValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.maxValue !== undefined){let data2 = data0.maxValue;const _errs8 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate30.errors = [{instancePath:instancePath+"/maturityPeriod/maxValue",schemaPath:"#/$defs/IntegerInterval/properties/maxValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.minValue !== undefined){let data3 = data0.minValue;const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate30.errors = [{instancePath:instancePath+"/maturityPeriod/minValue",schemaPath:"#/$defs/IntegerInterval/properties/minValue/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}else {validate30.errors = [{instancePath:instancePath+"/maturityPeriod",schemaPath:"#/$defs/IntegerInterval/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.maturityPeriodUnit !== undefined){let data4 = data.maturityPeriodUnit;const _errs12 = errors;if(!(((data4 === "DAYS") || (data4 === "WEEKS")) || (data4 === "MONTHS"))){validate30.errors = [{instancePath:instancePath+"/maturityPeriodUnit",schemaPath:"#/properties/maturityPeriodUnit/enum",keyword:"enum",params:{allowedValues: schema31.properties.maturityPeriodUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}else {validate30.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate30.errors = vErrors;return errors === 0;}const schema35 = {"type":"object","description":"Overdraft settings for the product","properties":{"daysInYear":{"description":"How many days in a year should be used for interest calculations","enum":["ACTUAL_365_FIXED","ACTUAL_360","ACTUAL_ACTUAL_ISDA","E30_360","E30_42_365","BUS_252"]},"interestCalculationBalance":{"description":"The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.","enum":["MINIMUM","AVERAGE","END_OF_DAY","MINIMUM_TO_END_OF_DAY","FRENCH_INTEREST_ACCRUAL"]},"interestRateSettings":{"$ref":"#/$defs/DepositProductOverdraftInterestRateSettings"}},"additionalProperties":true};const schema36 = {"type":"object","description":"The overdraft interest settings, defines constraints regarding interest that will be used on the account created based on this product.","properties":{"indexSourceKey":{"type":"string","description":"Index rate source key."},"interestChargeFrequency":{"description":"The interval used for determining how often is interest charged","enum":["ANNUALIZED","EVERY_MONTH","EVERY_FOUR_WEEKS","EVERY_WEEK","EVERY_DAY","EVERY_X_DAYS"]},"interestChargeFrequencyCount":{"type":"integer","description":"the count of units to apply over the interval"},"interestRate":{"$ref":"#/$defs/DecimalInterval"},"interestRateReviewCount":{"type":"integer","description":"Interest rate review frequency unit count"},"interestRateReviewUnit":{"description":"Interest rate review frequency measurement unit","enum":["DAYS","WEEKS","MONTHS"]},"interestRateSource":{"description":"Interest calculation method: fixed or (interest spread + active organization index interest rate)","enum":["FIXED_INTEREST_RATE","INDEX_INTEREST_RATE"]},"interestRateTerms":{"description":"The option for how is the interest rate determined when being accrued for an account","enum":["FIXED","TIERED","TIERED_PERIOD","TIERED_BAND"]},"interestRateTiers":{"type":"array","description":"The list of interest rate tiers available for the current settings instance","items":{"$ref":"#/$defs/DepositProductOverdraftInterestRateTier"}}},"additionalProperties":true};const schema38 = {"type":"object","description":"Used for TIERED interest rates, holds the values to define how the interest is computed","properties":{"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"interestRate":{"type":"number","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true};function validate33(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.indexSourceKey !== undefined){const _errs2 = errors;if(typeof data.indexSourceKey !== "string"){validate33.errors = [{instancePath:instancePath+"/indexSourceKey",schemaPath:"#/properties/indexSourceKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequency !== undefined){const _errs4 = errors;let valid1;valid1 = false;for(const v0 of schema36.properties.interestChargeFrequency.enum){if(func0(data.interestChargeFrequency, v0)){valid1 = true;break;}}if(!valid1){validate33.errors = [{instancePath:instancePath+"/interestChargeFrequency",schemaPath:"#/properties/interestChargeFrequency/enum",keyword:"enum",params:{allowedValues: schema36.properties.interestChargeFrequency.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.interestChargeFrequencyCount !== undefined){let data2 = data.interestChargeFrequencyCount;const _errs5 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate33.errors = [{instancePath:instancePath+"/interestChargeFrequencyCount",schemaPath:"#/properties/interestChargeFrequencyCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRate !== undefined){let data3 = data.interestRate;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.defaultValue !== undefined){let data4 = data3.defaultValue;const _errs11 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate33.errors = [{instancePath:instancePath+"/interestRate/defaultValue",schemaPath:"#/$defs/DecimalInterval/properties/defaultValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data3.maxValue !== undefined){let data5 = data3.maxValue;const _errs13 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate33.errors = [{instancePath:instancePath+"/interestRate/maxValue",schemaPath:"#/$defs/DecimalInterval/properties/maxValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}if(valid3){if(data3.minValue !== undefined){let data6 = data3.minValue;const _errs15 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate33.errors = [{instancePath:instancePath+"/interestRate/minValue",schemaPath:"#/$defs/DecimalInterval/properties/minValue/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs15 === errors;}else {var valid3 = true;}}}}else {validate33.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/$defs/DecimalInterval/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewCount !== undefined){let data7 = data.interestRateReviewCount;const _errs17 = errors;if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){validate33.errors = [{instancePath:instancePath+"/interestRateReviewCount",schemaPath:"#/properties/interestRateReviewCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateReviewUnit !== undefined){let data8 = data.interestRateReviewUnit;const _errs19 = errors;if(!(((data8 === "DAYS") || (data8 === "WEEKS")) || (data8 === "MONTHS"))){validate33.errors = [{instancePath:instancePath+"/interestRateReviewUnit",schemaPath:"#/properties/interestRateReviewUnit/enum",keyword:"enum",params:{allowedValues: schema36.properties.interestRateReviewUnit.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSource !== undefined){let data9 = data.interestRateSource;const _errs20 = errors;if(!((data9 === "FIXED_INTEREST_RATE") || (data9 === "INDEX_INTEREST_RATE"))){validate33.errors = [{instancePath:instancePath+"/interestRateSource",schemaPath:"#/properties/interestRateSource/enum",keyword:"enum",params:{allowedValues: schema36.properties.interestRateSource.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTerms !== undefined){let data10 = data.interestRateTerms;const _errs21 = errors;if(!((((data10 === "FIXED") || (data10 === "TIERED")) || (data10 === "TIERED_PERIOD")) || (data10 === "TIERED_BAND"))){validate33.errors = [{instancePath:instancePath+"/interestRateTerms",schemaPath:"#/properties/interestRateTerms/enum",keyword:"enum",params:{allowedValues: schema36.properties.interestRateTerms.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data11 = data.interestRateTiers;const _errs22 = errors;if(errors === _errs22){if(Array.isArray(data11)){var valid4 = true;const len0 = data11.length;for(let i0=0; i0<len0; i0++){let data12 = data11[i0];const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(data12 && typeof data12 == "object" && !Array.isArray(data12)){let missing0;if((data12.interestRate === undefined) && (missing0 = "interestRate")){validate33.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductOverdraftInterestRateTier/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data12.encodedKey !== undefined){const _errs28 = errors;if(typeof data12.encodedKey !== "string"){validate33.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositProductOverdraftInterestRateTier/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs28 === errors;}else {var valid6 = true;}if(valid6){if(data12.endingBalance !== undefined){let data14 = data12.endingBalance;const _errs30 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate33.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/DepositProductOverdraftInterestRateTier/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs30 === errors;}else {var valid6 = true;}if(valid6){if(data12.interestRate !== undefined){let data15 = data12.interestRate;const _errs32 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate33.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/DepositProductOverdraftInterestRateTier/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs32 === errors;}else {var valid6 = true;}}}}}else {validate33.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositProductOverdraftInterestRateTier/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs24 === errors;if(!valid4){break;}}}else {validate33.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate33.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate33.errors = vErrors;return errors === 0;}function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.daysInYear !== undefined){const _errs2 = errors;let valid1;valid1 = false;for(const v0 of schema35.properties.daysInYear.enum){if(func0(data.daysInYear, v0)){valid1 = true;break;}}if(!valid1){validate32.errors = [{instancePath:instancePath+"/daysInYear",schemaPath:"#/properties/daysInYear/enum",keyword:"enum",params:{allowedValues: schema35.properties.daysInYear.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestCalculationBalance !== undefined){const _errs3 = errors;let valid2;valid2 = false;for(const v1 of schema35.properties.interestCalculationBalance.enum){if(func0(data.interestCalculationBalance, v1)){valid2 = true;break;}}if(!valid2){validate32.errors = [{instancePath:instancePath+"/interestCalculationBalance",schemaPath:"#/properties/interestCalculationBalance/enum",keyword:"enum",params:{allowedValues: schema35.properties.interestCalculationBalance.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSettings !== undefined){const _errs4 = errors;if(!(validate33(data.interestRateSettings, {instancePath:instancePath+"/interestRateSettings",parentData:data,parentDataProperty:"interestRateSettings",rootData}))){vErrors = vErrors === null ? validate33.errors : vErrors.concat(validate33.errors);errors = vErrors.length;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate32.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;let valid0 = true;for( missing0 of schema12.required){valid0 = data[missing0] !== undefined;if(!valid0){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;break;}}if(valid0){if(data.accountingSettings !== undefined){const _errs2 = errors;if(!(validate12(data.accountingSettings, {instancePath:instancePath+"/accountingSettings",parentData:data,parentDataProperty:"accountingSettings",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs2 === errors;}else {var valid1 = true;}if(valid1){if(data.availabilitySettings !== undefined){const _errs3 = errors;if(!(validate14(data.availabilitySettings, {instancePath:instancePath+"/availabilitySettings",parentData:data,parentDataProperty:"availabilitySettings",rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid1 = _errs3 === errors;}else {var valid1 = true;}if(valid1){if(data.category !== undefined){const _errs4 = errors;let valid2;valid2 = false;for(const v0 of schema12.properties.category.enum){if(func0(data.category, v0)){valid2 = true;break;}}if(!valid2){validate11.errors = [{instancePath:instancePath+"/category",schemaPath:"#/properties/category/enum",keyword:"enum",params:{allowedValues: schema12.properties.category.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.creationDate !== undefined){const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(!(typeof data.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.creditArrangementSettings !== undefined){let data4 = data.creditArrangementSettings;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.creditArrangementRequirement !== undefined){let data5 = data4.creditArrangementRequirement;if(!(((data5 === "OPTIONAL") || (data5 === "REQUIRED")) || (data5 === "NOT_REQUIRED"))){validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings/creditArrangementRequirement",schemaPath:"#/$defs/CreditArrangementSettings/properties/creditArrangementRequirement/enum",keyword:"enum",params:{allowedValues: schema17.properties.creditArrangementRequirement.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/creditArrangementSettings",schemaPath:"#/$defs/CreditArrangementSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data.currencySettings !== undefined){const _errs12 = errors;if(!(validate16(data.currencySettings, {instancePath:instancePath+"/currencySettings",parentData:data,parentDataProperty:"currencySettings",rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid1 = _errs12 === errors;}else {var valid1 = true;}if(valid1){if(data.encodedKey !== undefined){const _errs13 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs13 === errors;}else {var valid1 = true;}if(valid1){if(data.feesSettings !== undefined){const _errs15 = errors;if(!(validate18(data.feesSettings, {instancePath:instancePath+"/feesSettings",parentData:data,parentDataProperty:"feesSettings",rootData}))){vErrors = vErrors === null ? validate18.errors : vErrors.concat(validate18.errors);errors = vErrors.length;}var valid1 = _errs15 === errors;}else {var valid1 = true;}if(valid1){if(data.id !== undefined){const _errs16 = errors;if(typeof data.id !== "string"){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs16 === errors;}else {var valid1 = true;}if(valid1){if(data.interestSettings !== undefined){const _errs18 = errors;if(!(validate22(data.interestSettings, {instancePath:instancePath+"/interestSettings",parentData:data,parentDataProperty:"interestSettings",rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid1 = _errs18 === errors;}else {var valid1 = true;}if(valid1){if(data.internalControls !== undefined){const _errs19 = errors;if(!(validate28(data.internalControls, {instancePath:instancePath+"/internalControls",parentData:data,parentDataProperty:"internalControls",rootData}))){vErrors = vErrors === null ? validate28.errors : vErrors.concat(validate28.errors);errors = vErrors.length;}var valid1 = _errs19 === errors;}else {var valid1 = true;}if(valid1){if(data.lastModifiedDate !== undefined){const _errs20 = errors;if(errors === _errs20){if(errors === _errs20){if(!(typeof data.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/lastModifiedDate",schemaPath:"#/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs20 === errors;}else {var valid1 = true;}if(valid1){if(data.maturitySettings !== undefined){const _errs22 = errors;if(!(validate30(data.maturitySettings, {instancePath:instancePath+"/maturitySettings",parentData:data,parentDataProperty:"maturitySettings",rootData}))){vErrors = vErrors === null ? validate30.errors : vErrors.concat(validate30.errors);errors = vErrors.length;}var valid1 = _errs22 === errors;}else {var valid1 = true;}if(valid1){if(data.name !== undefined){const _errs23 = errors;if(typeof data.name !== "string"){validate11.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs23 === errors;}else {var valid1 = true;}if(valid1){if(data.newAccountSettings !== undefined){let data15 = data.newAccountSettings;const _errs25 = errors;const _errs26 = errors;if(errors === _errs26){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){let missing1;if(((data15.idGeneratorType === undefined) && (missing1 = "idGeneratorType")) || ((data15.idPattern === undefined) && (missing1 = "idPattern"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/DepositNewAccountSettings/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data15.idGeneratorType !== undefined){let data16 = data15.idGeneratorType;const _errs29 = errors;if(!((data16 === "INCREMENTAL_NUMBER") || (data16 === "RANDOM_PATTERN"))){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/idGeneratorType",schemaPath:"#/$defs/DepositNewAccountSettings/properties/idGeneratorType/enum",keyword:"enum",params:{allowedValues: schema33.properties.idGeneratorType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs29 === errors;}else {var valid6 = true;}if(valid6){if(data15.idPattern !== undefined){const _errs30 = errors;if(typeof data15.idPattern !== "string"){validate11.errors = [{instancePath:instancePath+"/newAccountSettings/idPattern",schemaPath:"#/$defs/DepositNewAccountSettings/properties/idPattern/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs30 === errors;}else {var valid6 = true;}}}}else {validate11.errors = [{instancePath:instancePath+"/newAccountSettings",schemaPath:"#/$defs/DepositNewAccountSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs25 === errors;}else {var valid1 = true;}if(valid1){if(data.notes !== undefined){const _errs32 = errors;if(typeof data.notes !== "string"){validate11.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs32 === errors;}else {var valid1 = true;}if(valid1){if(data.offsetSettings !== undefined){let data19 = data.offsetSettings;const _errs34 = errors;const _errs35 = errors;if(errors === _errs35){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){if(data19.allowOffset !== undefined){if(typeof data19.allowOffset !== "boolean"){validate11.errors = [{instancePath:instancePath+"/offsetSettings/allowOffset",schemaPath:"#/$defs/DepositProductOffsetSettings/properties/allowOffset/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/offsetSettings",schemaPath:"#/$defs/DepositProductOffsetSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs34 === errors;}else {var valid1 = true;}if(valid1){if(data.overdraftInterestSettings !== undefined){const _errs40 = errors;if(!(validate32(data.overdraftInterestSettings, {instancePath:instancePath+"/overdraftInterestSettings",parentData:data,parentDataProperty:"overdraftInterestSettings",rootData}))){vErrors = vErrors === null ? validate32.errors : vErrors.concat(validate32.errors);errors = vErrors.length;}var valid1 = _errs40 === errors;}else {var valid1 = true;}if(valid1){if(data.overdraftSettings !== undefined){let data22 = data.overdraftSettings;const _errs41 = errors;const _errs42 = errors;if(errors === _errs42){if(data22 && typeof data22 == "object" && !Array.isArray(data22)){if(data22.allowOverdraft !== undefined){const _errs45 = errors;if(typeof data22.allowOverdraft !== "boolean"){validate11.errors = [{instancePath:instancePath+"/overdraftSettings/allowOverdraft",schemaPath:"#/$defs/DepositProductOverdraftSettings/properties/allowOverdraft/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid10 = _errs45 === errors;}else {var valid10 = true;}if(valid10){if(data22.allowTechnicalOverdraft !== undefined){const _errs47 = errors;if(typeof data22.allowTechnicalOverdraft !== "boolean"){validate11.errors = [{instancePath:instancePath+"/overdraftSettings/allowTechnicalOverdraft",schemaPath:"#/$defs/DepositProductOverdraftSettings/properties/allowTechnicalOverdraft/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid10 = _errs47 === errors;}else {var valid10 = true;}if(valid10){if(data22.maxOverdraftLimit !== undefined){let data25 = data22.maxOverdraftLimit;const _errs49 = errors;if(!((typeof data25 == "number") && (isFinite(data25)))){validate11.errors = [{instancePath:instancePath+"/overdraftSettings/maxOverdraftLimit",schemaPath:"#/$defs/DepositProductOverdraftSettings/properties/maxOverdraftLimit/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid10 = _errs49 === errors;}else {var valid10 = true;}}}}else {validate11.errors = [{instancePath:instancePath+"/overdraftSettings",schemaPath:"#/$defs/DepositProductOverdraftSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs41 === errors;}else {var valid1 = true;}if(valid1){if(data.state !== undefined){let data26 = data.state;const _errs51 = errors;if(!((data26 === "ACTIVE") || (data26 === "INACTIVE"))){validate11.errors = [{instancePath:instancePath+"/state",schemaPath:"#/properties/state/enum",keyword:"enum",params:{allowedValues: schema12.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs51 === errors;}else {var valid1 = true;}if(valid1){if(data.taxSettings !== undefined){let data27 = data.taxSettings;const _errs52 = errors;const _errs53 = errors;if(errors === _errs53){if(data27 && typeof data27 == "object" && !Array.isArray(data27)){if(data27.withholdingTaxEnabled !== undefined){if(typeof data27.withholdingTaxEnabled !== "boolean"){validate11.errors = [{instancePath:instancePath+"/taxSettings/withholdingTaxEnabled",schemaPath:"#/$defs/DepositProductTaxSettings/properties/withholdingTaxEnabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}}else {validate11.errors = [{instancePath:instancePath+"/taxSettings",schemaPath:"#/$defs/DepositProductTaxSettings/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs52 === errors;}else {var valid1 = true;}if(valid1){if(data.templates !== undefined){let data29 = data.templates;const _errs58 = errors;if(errors === _errs58){if(Array.isArray(data29)){var valid13 = true;const len0 = data29.length;for(let i0=0; i0<len0; i0++){let data30 = data29[i0];const _errs60 = errors;const _errs61 = errors;if(errors === _errs61){if(data30 && typeof data30 == "object" && !Array.isArray(data30)){if(data30.creationDate !== undefined){const _errs64 = errors;if(errors === _errs64){if(errors === _errs64){if(!(typeof data30.creationDate === "string")){validate11.errors = [{instancePath:instancePath+"/templates/" + i0+"/creationDate",schemaPath:"#/$defs/DocumentTemplate/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid15 = _errs64 === errors;}else {var valid15 = true;}if(valid15){if(data30.encodedKey !== undefined){const _errs66 = errors;if(typeof data30.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/templates/" + i0+"/encodedKey",schemaPath:"#/$defs/DocumentTemplate/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid15 = _errs66 === errors;}else {var valid15 = true;}if(valid15){if(data30.lastModifiedDate !== undefined){const _errs68 = errors;if(errors === _errs68){if(errors === _errs68){if(!(typeof data30.lastModifiedDate === "string")){validate11.errors = [{instancePath:instancePath+"/templates/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/DocumentTemplate/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid15 = _errs68 === errors;}else {var valid15 = true;}if(valid15){if(data30.name !== undefined){const _errs70 = errors;if(typeof data30.name !== "string"){validate11.errors = [{instancePath:instancePath+"/templates/" + i0+"/name",schemaPath:"#/$defs/DocumentTemplate/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid15 = _errs70 === errors;}else {var valid15 = true;}if(valid15){if(data30.type !== undefined){let data35 = data30.type;const _errs72 = errors;if(!(((data35 === "ACCOUNT") || (data35 === "TRANSACTION")) || (data35 === "ACCOUNT_WITH_TRANSACTIONS"))){validate11.errors = [{instancePath:instancePath+"/templates/" + i0+"/type",schemaPath:"#/$defs/DocumentTemplate/properties/type/enum",keyword:"enum",params:{allowedValues: schema41.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid15 = _errs72 === errors;}else {var valid15 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/templates/" + i0,schemaPath:"#/$defs/DocumentTemplate/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid13 = _errs60 === errors;if(!valid13){break;}}}else {validate11.errors = [{instancePath:instancePath+"/templates",schemaPath:"#/properties/templates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs58 === errors;}else {var valid1 = true;}if(valid1){if(data.type !== undefined){const _errs73 = errors;let valid16;valid16 = false;for(const v1 of schema12.properties.type.enum){if(func0(data.type, v1)){valid16 = true;break;}}if(!valid16){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema12.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs73 === errors;}else {var valid1 = true;}}}}}}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;