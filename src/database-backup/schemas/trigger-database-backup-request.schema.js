/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"TriggerDatabaseBackupRequest","type":"object","description":"Represents a request for triggering a database backup.","properties":{"callback":{"type":"string","description":"If provided, it needs to be a valid URL. It will be a webhook call that will later execute when the backup is complete."},"createBackupFromDate":{"type":"string","description":"If provided, it needs to be a date time from which the backup should include data. If not provided, the backup will include all the data.","format":"date-time"},"tables":{"type":"array","description":"If provided, it needs to be a list of tables that exist in the database schema. The backup will only include the specified tables. If not provided, the backup will include all tables.","items":{"type":"string"},"uniqueItems":true}},"additionalProperties":true};const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.callback !== undefined){const _errs2 = errors;if(typeof data.callback !== "string"){validate10.errors = [{instancePath:instancePath+"/callback",schemaPath:"#/properties/callback/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.createBackupFromDate !== undefined){let data1 = data.createBackupFromDate;const _errs4 = errors;if(errors === _errs4){if(errors === _errs4){if(typeof data1 === "string"){if(!(formats0.validate(data1))){validate10.errors = [{instancePath:instancePath+"/createBackupFromDate",schemaPath:"#/properties/createBackupFromDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/createBackupFromDate",schemaPath:"#/properties/createBackupFromDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.tables !== undefined){let data2 = data.tables;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs8 = errors;if(typeof data2[i0] !== "string"){validate10.errors = [{instancePath:instancePath+"/tables/" + i0,schemaPath:"#/properties/tables/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs8 === errors;if(!valid1){break;}}if(valid1){let i1 = data2.length;let j0;if(i1 > 1){const indices0 = {};for(;i1--;){let item0 = data2[i1];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate10.errors = [{instancePath:instancePath+"/tables",schemaPath:"#/properties/tables/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break;}indices0[item0] = i1;}}}}else {validate10.errors = [{instancePath:instancePath+"/tables",schemaPath:"#/properties/tables/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;