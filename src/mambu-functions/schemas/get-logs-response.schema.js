/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"getLogsResponse","type":"array","items":{"$ref":"#/$defs/MFunctionLogsaf30"},"$defs":{"MFunctionLogsaf30":{"type":"object","title":"MFunctionLogsaf30","description":"Represents a Mambu function logs list","properties":{"logs":{"type":"array","title":"logs","items":{"$ref":"#/$defs/MFunctionLogaf30"}}},"additionalProperties":true},"MFunctionLogaf30":{"type":"object","title":"MFunctionLogaf30","description":"Represents a Mambu function log","properties":{"logLevel":{"type":"integer","title":"logLevel","description":"Mambu function log level"},"message":{"type":"string","title":"message","description":"Mambu function message"},"requestId":{"type":"string","title":"requestId","description":"The ID of the specific request to the function"},"time":{"type":"integer","title":"time","description":"Mambu function log time"}},"additionalProperties":true}}};const schema12 = {"type":"object","title":"MFunctionLogsaf30","description":"Represents a Mambu function logs list","properties":{"logs":{"type":"array","title":"logs","items":{"$ref":"#/$defs/MFunctionLogaf30"}}},"additionalProperties":true};const schema13 = {"type":"object","title":"MFunctionLogaf30","description":"Represents a Mambu function log","properties":{"logLevel":{"type":"integer","title":"logLevel","description":"Mambu function log level"},"message":{"type":"string","title":"message","description":"Mambu function message"},"requestId":{"type":"string","title":"requestId","description":"The ID of the specific request to the function"},"time":{"type":"integer","title":"time","description":"Mambu function log time"}},"additionalProperties":true};function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.logs !== undefined){let data0 = data.logs;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.logLevel !== undefined){let data2 = data1.logLevel;const _errs8 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate11.errors = [{instancePath:instancePath+"/logs/" + i0+"/logLevel",schemaPath:"#/$defs/MFunctionLogaf30/properties/logLevel/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.message !== undefined){const _errs10 = errors;if(typeof data1.message !== "string"){validate11.errors = [{instancePath:instancePath+"/logs/" + i0+"/message",schemaPath:"#/$defs/MFunctionLogaf30/properties/message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data1.requestId !== undefined){const _errs12 = errors;if(typeof data1.requestId !== "string"){validate11.errors = [{instancePath:instancePath+"/logs/" + i0+"/requestId",schemaPath:"#/$defs/MFunctionLogaf30/properties/requestId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data1.time !== undefined){let data5 = data1.time;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate11.errors = [{instancePath:instancePath+"/logs/" + i0+"/time",schemaPath:"#/$defs/MFunctionLogaf30/properties/time/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/logs/" + i0,schemaPath:"#/$defs/MFunctionLogaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/logs",schemaPath:"#/properties/logs/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs1 = errors;if(!(validate11(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;