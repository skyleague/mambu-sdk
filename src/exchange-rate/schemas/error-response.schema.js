/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"ErrorResponse","type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/$defs/RestError"}}},"additionalProperties":true,"$defs":{"RestError":{"type":"object","properties":{"errorCode":{"type":"integer"},"errorReason":{"type":"string"},"errorSource":{"type":"string"}},"additionalProperties":true}}};const schema12 = {"type":"object","properties":{"errorCode":{"type":"integer"},"errorReason":{"type":"string"},"errorSource":{"type":"string"}},"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.errors !== undefined){let data0 = data.errors;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.errorCode !== undefined){let data2 = data1.errorCode;const _errs8 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate10.errors = [{instancePath:instancePath+"/errors/" + i0+"/errorCode",schemaPath:"#/$defs/RestError/properties/errorCode/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.errorReason !== undefined){const _errs10 = errors;if(typeof data1.errorReason !== "string"){validate10.errors = [{instancePath:instancePath+"/errors/" + i0+"/errorReason",schemaPath:"#/$defs/RestError/properties/errorReason/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data1.errorSource !== undefined){const _errs12 = errors;if(typeof data1.errorSource !== "string"){validate10.errors = [{instancePath:instancePath+"/errors/" + i0+"/errorSource",schemaPath:"#/$defs/RestError/properties/errorSource/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}}}}else {validate10.errors = [{instancePath:instancePath+"/errors/" + i0,schemaPath:"#/$defs/RestError/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/errors",schemaPath:"#/properties/errors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;