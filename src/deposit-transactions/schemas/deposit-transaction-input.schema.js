/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"DepositTransactionInput","type":"object","description":"Represents the request payload for creating a transaction of type DEPOSIT.","properties":{"transactionDetails":{"title":"transactionDetails","$ref":"#/$defs/TransactionDetailsInputaf30"},"amount":{"type":"number","title":"amount","description":"The amount that was added to an account"},"notes":{"type":"string","title":"notes","description":"Extra notes about this deposit transaction"},"paymentOrderId":{"type":"string","title":"paymentOrderId","description":"The payment order id of the deposit transaction, customizable"},"externalId":{"type":"string","title":"externalId","description":"The external id of the deposit transaction, customizable, unique"},"skipMaximumBalanceValidation":{"type":"boolean","title":"skipMaximumBalanceValidation","description":"Flag indicating that a maximum balance validation should be skipped"},"bookingDate":{"type":"string","title":"bookingDate","description":"The date of Journal Entry (as Organization Time)","format":"date-time"},"valueDate":{"type":"string","title":"valueDate","description":"The entry date of the deposit (as Organization Time)","format":"date-time"},"paymentDetails":{"title":"paymentDetails","$ref":"#/$defs/PaymentDetailsaf30"},"holdExternalReferenceId":{"type":"string","title":"holdExternalReferenceId","description":"The external id of an account authorization hold"}},"required":["amount"],"additionalProperties":false,"$defs":{"TransactionDetailsInputaf30":{"type":"object","title":"TransactionDetailsInputaf30","description":"Contains the details about transaction including fields like transaction channel key and channel ID","properties":{"transactionChannelId":{"type":"string","title":"transactionChannelId","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":false},"PaymentDetailsaf30":{"type":"object","title":"PaymentDetailsaf30","description":"The payment information including account identification details","properties":{"paymentIdentification":{"title":"paymentIdentification","$ref":"#/$defs/PaymentIdentificationaf30"},"debtorAccount":{"title":"debtorAccount","$ref":"#/$defs/AccountDetailsaf30"},"debtor":{"title":"debtor","$ref":"#/$defs/Partyaf30"},"debtorAgent":{"title":"debtorAgent","$ref":"#/$defs/Agentaf30"},"creditorAgent":{"title":"creditorAgent","$ref":"#/$defs/Agentaf30"},"remittanceInformation":{"title":"remittanceInformation","$ref":"#/$defs/RemittanceInformationaf30"},"creditorAccount":{"title":"creditorAccount","$ref":"#/$defs/AccountDetailsaf30"},"creditor":{"title":"creditor","$ref":"#/$defs/Partyaf30"},"paymentTypeInformation":{"title":"paymentTypeInformation","$ref":"#/$defs/PaymentTypeInformationaf30"}},"additionalProperties":false},"PaymentIdentificationaf30":{"type":"object","title":"PaymentIdentificationaf30","description":"The payment identification details","properties":{"instructionIdentification":{"type":"string","title":"instructionIdentification","description":"Identifier of a payment instruction"},"endToEndIdentification":{"type":"string","title":"endToEndIdentification","description":"Identifier assigned by the initiating party to the transaction"},"transactionIdentification":{"type":"string","title":"transactionIdentification","description":"Identifier unique for a period assigned by the first initiating party to the transaction"}},"additionalProperties":false},"AccountDetailsaf30":{"type":"object","title":"AccountDetailsaf30","description":"The account currency and identification","properties":{"currency":{"type":"string","title":"currency","description":"The currency of the account"},"identification":{"title":"identification","$ref":"#/$defs/AccountIdentificationaf30"}},"additionalProperties":false},"AccountIdentificationaf30":{"type":"object","title":"AccountIdentificationaf30","description":"The account identification details","properties":{"other":{"title":"other","$ref":"#/$defs/OtherAccountIdentificationaf30"},"iban":{"type":"string","title":"iban","description":"The account unique identifier"}},"additionalProperties":false},"OtherAccountIdentificationaf30":{"type":"object","title":"OtherAccountIdentificationaf30","description":"Represents other way of identification for the account.","properties":{"scheme":{"type":"string","title":"scheme","description":"The identification scheme"},"identification":{"type":"string","title":"identification","description":"The identification of the payer/payee"}},"additionalProperties":false},"Partyaf30":{"type":"object","title":"Partyaf30","description":"The details of the party for a transaction","properties":{"name":{"type":"string","title":"name","description":"The name of the party"}},"additionalProperties":false},"Agentaf30":{"type":"object","title":"Agentaf30","description":"The agent details for a party","properties":{"financialInstitutionIdentification":{"title":"financialInstitutionIdentification","$ref":"#/$defs/FinancialInstitutionIdentificationaf30"}},"additionalProperties":false},"FinancialInstitutionIdentificationaf30":{"type":"object","title":"FinancialInstitutionIdentificationaf30","description":"The identification of the financial institution","properties":{"bic":{"type":"string","title":"bic","description":"Business identifier code"}},"additionalProperties":false},"RemittanceInformationaf30":{"type":"object","title":"RemittanceInformationaf30","description":"The information specifying the payment items that are intended to settle","properties":{"structured":{"title":"structured","$ref":"#/$defs/Structuredaf30"},"unstructured":{"type":"string","title":"unstructured","description":"Information supplied to match the items of the payment in an unstructured form"}},"additionalProperties":false},"Structuredaf30":{"type":"object","title":"Structuredaf30","description":"The information specifying the payment items that are intended to settle","properties":{"creditorReferenceInformation":{"title":"creditorReferenceInformation","$ref":"#/$defs/CreditorReferenceInformationaf30"}},"additionalProperties":false},"CreditorReferenceInformationaf30":{"type":"object","title":"CreditorReferenceInformationaf30","description":"Represents the reference to the underlying documents of the payment.","properties":{"reference":{"type":"string","title":"reference","description":"The reference information of the creditor's underlying documents"},"referenceType":{"type":"string","title":"referenceType","description":"The type of creditor reference"},"referenceIssuer":{"type":"string","title":"referenceIssuer","description":"The entity that assigns the reference type"}},"additionalProperties":false},"PaymentTypeInformationaf30":{"type":"object","title":"PaymentTypeInformationaf30","description":"The information specifying the type of transaction","properties":{"serviceLevel":{"title":"serviceLevel","$ref":"#/$defs/ServiceLevelaf30"}},"additionalProperties":false},"ServiceLevelaf30":{"type":"object","title":"ServiceLevelaf30","description":"The rules under which the transaction should be processed","properties":{"code":{"type":"string","title":"code","description":"The code for a pre-agreed service or level of service between the parties"}},"additionalProperties":false}}};const schema12 = {"type":"object","title":"TransactionDetailsInputaf30","description":"Contains the details about transaction including fields like transaction channel key and channel ID","properties":{"transactionChannelId":{"type":"string","title":"transactionChannelId","description":"The id of the transaction channel associated with the transaction details."},"transactionChannelKey":{"type":"string","title":"transactionChannelKey","description":"The encoded key of the transaction channel associated with the transaction details."}},"additionalProperties":false};const func4 = Object.prototype.hasOwnProperty;const schema13 = {"type":"object","title":"PaymentDetailsaf30","description":"The payment information including account identification details","properties":{"paymentIdentification":{"title":"paymentIdentification","$ref":"#/$defs/PaymentIdentificationaf30"},"debtorAccount":{"title":"debtorAccount","$ref":"#/$defs/AccountDetailsaf30"},"debtor":{"title":"debtor","$ref":"#/$defs/Partyaf30"},"debtorAgent":{"title":"debtorAgent","$ref":"#/$defs/Agentaf30"},"creditorAgent":{"title":"creditorAgent","$ref":"#/$defs/Agentaf30"},"remittanceInformation":{"title":"remittanceInformation","$ref":"#/$defs/RemittanceInformationaf30"},"creditorAccount":{"title":"creditorAccount","$ref":"#/$defs/AccountDetailsaf30"},"creditor":{"title":"creditor","$ref":"#/$defs/Partyaf30"},"paymentTypeInformation":{"title":"paymentTypeInformation","$ref":"#/$defs/PaymentTypeInformationaf30"}},"additionalProperties":false};const schema14 = {"type":"object","title":"PaymentIdentificationaf30","description":"The payment identification details","properties":{"instructionIdentification":{"type":"string","title":"instructionIdentification","description":"Identifier of a payment instruction"},"endToEndIdentification":{"type":"string","title":"endToEndIdentification","description":"Identifier assigned by the initiating party to the transaction"},"transactionIdentification":{"type":"string","title":"transactionIdentification","description":"Identifier unique for a period assigned by the first initiating party to the transaction"}},"additionalProperties":false};const schema18 = {"type":"object","title":"Partyaf30","description":"The details of the party for a transaction","properties":{"name":{"type":"string","title":"name","description":"The name of the party"}},"additionalProperties":false};const schema15 = {"type":"object","title":"AccountDetailsaf30","description":"The account currency and identification","properties":{"currency":{"type":"string","title":"currency","description":"The currency of the account"},"identification":{"title":"identification","$ref":"#/$defs/AccountIdentificationaf30"}},"additionalProperties":false};const schema16 = {"type":"object","title":"AccountIdentificationaf30","description":"The account identification details","properties":{"other":{"title":"other","$ref":"#/$defs/OtherAccountIdentificationaf30"},"iban":{"type":"string","title":"iban","description":"The account unique identifier"}},"additionalProperties":false};const schema17 = {"type":"object","title":"OtherAccountIdentificationaf30","description":"Represents other way of identification for the account.","properties":{"scheme":{"type":"string","title":"scheme","description":"The identification scheme"},"identification":{"type":"string","title":"identification","description":"The identification of the payer/payee"}},"additionalProperties":false};function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "other") || (key0 === "iban"))){validate13.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.other !== undefined){let data0 = data.other;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((key1 === "scheme") || (key1 === "identification"))){validate13.errors = [{instancePath:instancePath+"/other",schemaPath:"#/$defs/OtherAccountIdentificationaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.scheme !== undefined){const _errs6 = errors;if(typeof data0.scheme !== "string"){validate13.errors = [{instancePath:instancePath+"/other/scheme",schemaPath:"#/$defs/OtherAccountIdentificationaf30/properties/scheme/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.identification !== undefined){const _errs8 = errors;if(typeof data0.identification !== "string"){validate13.errors = [{instancePath:instancePath+"/other/identification",schemaPath:"#/$defs/OtherAccountIdentificationaf30/properties/identification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}}else {validate13.errors = [{instancePath:instancePath+"/other",schemaPath:"#/$defs/OtherAccountIdentificationaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.iban !== undefined){const _errs10 = errors;if(typeof data.iban !== "string"){validate13.errors = [{instancePath:instancePath+"/iban",schemaPath:"#/properties/iban/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}}else {validate13.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate13.errors = vErrors;return errors === 0;}function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "currency") || (key0 === "identification"))){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.currency !== undefined){const _errs2 = errors;if(typeof data.currency !== "string"){validate12.errors = [{instancePath:instancePath+"/currency",schemaPath:"#/properties/currency/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.identification !== undefined){const _errs4 = errors;if(!(validate13(data.identification, {instancePath:instancePath+"/identification",parentData:data,parentDataProperty:"identification",rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema19 = {"type":"object","title":"Agentaf30","description":"The agent details for a party","properties":{"financialInstitutionIdentification":{"title":"financialInstitutionIdentification","$ref":"#/$defs/FinancialInstitutionIdentificationaf30"}},"additionalProperties":false};const schema20 = {"type":"object","title":"FinancialInstitutionIdentificationaf30","description":"The identification of the financial institution","properties":{"bic":{"type":"string","title":"bic","description":"Business identifier code"}},"additionalProperties":false};function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(key0 === "financialInstitutionIdentification")){validate16.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.financialInstitutionIdentification !== undefined){let data0 = data.financialInstitutionIdentification;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!(key1 === "bic")){validate16.errors = [{instancePath:instancePath+"/financialInstitutionIdentification",schemaPath:"#/$defs/FinancialInstitutionIdentificationaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.bic !== undefined){if(typeof data0.bic !== "string"){validate16.errors = [{instancePath:instancePath+"/financialInstitutionIdentification/bic",schemaPath:"#/$defs/FinancialInstitutionIdentificationaf30/properties/bic/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate16.errors = [{instancePath:instancePath+"/financialInstitutionIdentification",schemaPath:"#/$defs/FinancialInstitutionIdentificationaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}}else {validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate16.errors = vErrors;return errors === 0;}const schema21 = {"type":"object","title":"RemittanceInformationaf30","description":"The information specifying the payment items that are intended to settle","properties":{"structured":{"title":"structured","$ref":"#/$defs/Structuredaf30"},"unstructured":{"type":"string","title":"unstructured","description":"Information supplied to match the items of the payment in an unstructured form"}},"additionalProperties":false};const schema22 = {"type":"object","title":"Structuredaf30","description":"The information specifying the payment items that are intended to settle","properties":{"creditorReferenceInformation":{"title":"creditorReferenceInformation","$ref":"#/$defs/CreditorReferenceInformationaf30"}},"additionalProperties":false};const schema23 = {"type":"object","title":"CreditorReferenceInformationaf30","description":"Represents the reference to the underlying documents of the payment.","properties":{"reference":{"type":"string","title":"reference","description":"The reference information of the creditor's underlying documents"},"referenceType":{"type":"string","title":"referenceType","description":"The type of creditor reference"},"referenceIssuer":{"type":"string","title":"referenceIssuer","description":"The entity that assigns the reference type"}},"additionalProperties":false};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(key0 === "creditorReferenceInformation")){validate20.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.creditorReferenceInformation !== undefined){let data0 = data.creditorReferenceInformation;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!(((key1 === "reference") || (key1 === "referenceType")) || (key1 === "referenceIssuer"))){validate20.errors = [{instancePath:instancePath+"/creditorReferenceInformation",schemaPath:"#/$defs/CreditorReferenceInformationaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.reference !== undefined){const _errs6 = errors;if(typeof data0.reference !== "string"){validate20.errors = [{instancePath:instancePath+"/creditorReferenceInformation/reference",schemaPath:"#/$defs/CreditorReferenceInformationaf30/properties/reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.referenceType !== undefined){const _errs8 = errors;if(typeof data0.referenceType !== "string"){validate20.errors = [{instancePath:instancePath+"/creditorReferenceInformation/referenceType",schemaPath:"#/$defs/CreditorReferenceInformationaf30/properties/referenceType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.referenceIssuer !== undefined){const _errs10 = errors;if(typeof data0.referenceIssuer !== "string"){validate20.errors = [{instancePath:instancePath+"/creditorReferenceInformation/referenceIssuer",schemaPath:"#/$defs/CreditorReferenceInformationaf30/properties/referenceIssuer/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/creditorReferenceInformation",schemaPath:"#/$defs/CreditorReferenceInformationaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "structured") || (key0 === "unstructured"))){validate19.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.structured !== undefined){const _errs2 = errors;if(!(validate20(data.structured, {instancePath:instancePath+"/structured",parentData:data,parentDataProperty:"structured",rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.unstructured !== undefined){const _errs3 = errors;if(typeof data.unstructured !== "string"){validate19.errors = [{instancePath:instancePath+"/unstructured",schemaPath:"#/properties/unstructured/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate19.errors = vErrors;return errors === 0;}const schema25 = {"type":"object","title":"PaymentTypeInformationaf30","description":"The information specifying the type of transaction","properties":{"serviceLevel":{"title":"serviceLevel","$ref":"#/$defs/ServiceLevelaf30"}},"additionalProperties":false};const schema26 = {"type":"object","title":"ServiceLevelaf30","description":"The rules under which the transaction should be processed","properties":{"code":{"type":"string","title":"code","description":"The code for a pre-agreed service or level of service between the parties"}},"additionalProperties":false};function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(key0 === "serviceLevel")){validate24.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.serviceLevel !== undefined){let data0 = data.serviceLevel;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!(key1 === "code")){validate24.errors = [{instancePath:instancePath+"/serviceLevel",schemaPath:"#/$defs/ServiceLevelaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.code !== undefined){if(typeof data0.code !== "string"){validate24.errors = [{instancePath:instancePath+"/serviceLevel/code",schemaPath:"#/$defs/ServiceLevelaf30/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate24.errors = [{instancePath:instancePath+"/serviceLevel",schemaPath:"#/$defs/ServiceLevelaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}}else {validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate24.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func4.call(schema13.properties, key0))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.paymentIdentification !== undefined){let data0 = data.paymentIdentification;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!(((key1 === "instructionIdentification") || (key1 === "endToEndIdentification")) || (key1 === "transactionIdentification"))){validate11.errors = [{instancePath:instancePath+"/paymentIdentification",schemaPath:"#/$defs/PaymentIdentificationaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.instructionIdentification !== undefined){const _errs6 = errors;if(typeof data0.instructionIdentification !== "string"){validate11.errors = [{instancePath:instancePath+"/paymentIdentification/instructionIdentification",schemaPath:"#/$defs/PaymentIdentificationaf30/properties/instructionIdentification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.endToEndIdentification !== undefined){const _errs8 = errors;if(typeof data0.endToEndIdentification !== "string"){validate11.errors = [{instancePath:instancePath+"/paymentIdentification/endToEndIdentification",schemaPath:"#/$defs/PaymentIdentificationaf30/properties/endToEndIdentification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.transactionIdentification !== undefined){const _errs10 = errors;if(typeof data0.transactionIdentification !== "string"){validate11.errors = [{instancePath:instancePath+"/paymentIdentification/transactionIdentification",schemaPath:"#/$defs/PaymentIdentificationaf30/properties/transactionIdentification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/paymentIdentification",schemaPath:"#/$defs/PaymentIdentificationaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorAccount !== undefined){const _errs12 = errors;if(!(validate12(data.debtorAccount, {instancePath:instancePath+"/debtorAccount",parentData:data,parentDataProperty:"debtorAccount",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.debtor !== undefined){let data5 = data.debtor;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){const _errs16 = errors;for(const key2 in data5){if(!(key2 === "name")){validate11.errors = [{instancePath:instancePath+"/debtor",schemaPath:"#/$defs/Partyaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs16 === errors){if(data5.name !== undefined){if(typeof data5.name !== "string"){validate11.errors = [{instancePath:instancePath+"/debtor/name",schemaPath:"#/$defs/Partyaf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate11.errors = [{instancePath:instancePath+"/debtor",schemaPath:"#/$defs/Partyaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorAgent !== undefined){const _errs19 = errors;if(!(validate16(data.debtorAgent, {instancePath:instancePath+"/debtorAgent",parentData:data,parentDataProperty:"debtorAgent",rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.creditorAgent !== undefined){const _errs20 = errors;if(!(validate16(data.creditorAgent, {instancePath:instancePath+"/creditorAgent",parentData:data,parentDataProperty:"creditorAgent",rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.remittanceInformation !== undefined){const _errs21 = errors;if(!(validate19(data.remittanceInformation, {instancePath:instancePath+"/remittanceInformation",parentData:data,parentDataProperty:"remittanceInformation",rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.creditorAccount !== undefined){const _errs22 = errors;if(!(validate12(data.creditorAccount, {instancePath:instancePath+"/creditorAccount",parentData:data,parentDataProperty:"creditorAccount",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.creditor !== undefined){let data11 = data.creditor;const _errs23 = errors;const _errs24 = errors;if(errors === _errs24){if(data11 && typeof data11 == "object" && !Array.isArray(data11)){const _errs26 = errors;for(const key3 in data11){if(!(key3 === "name")){validate11.errors = [{instancePath:instancePath+"/creditor",schemaPath:"#/$defs/Partyaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs26 === errors){if(data11.name !== undefined){if(typeof data11.name !== "string"){validate11.errors = [{instancePath:instancePath+"/creditor/name",schemaPath:"#/$defs/Partyaf30/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate11.errors = [{instancePath:instancePath+"/creditor",schemaPath:"#/$defs/Partyaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentTypeInformation !== undefined){const _errs29 = errors;if(!(validate24(data.paymentTypeInformation, {instancePath:instancePath+"/paymentTypeInformation",parentData:data,parentDataProperty:"paymentTypeInformation",rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var valid0 = _errs29 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.amount === undefined) && (missing0 = "amount")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func4.call(schema11.properties, key0))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.transactionDetails !== undefined){let data0 = data.transactionDetails;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((key1 === "transactionChannelId") || (key1 === "transactionChannelKey"))){validate10.errors = [{instancePath:instancePath+"/transactionDetails",schemaPath:"#/$defs/TransactionDetailsInputaf30/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.transactionChannelId !== undefined){const _errs6 = errors;if(typeof data0.transactionChannelId !== "string"){validate10.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelId",schemaPath:"#/$defs/TransactionDetailsInputaf30/properties/transactionChannelId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.transactionChannelKey !== undefined){const _errs8 = errors;if(typeof data0.transactionChannelKey !== "string"){validate10.errors = [{instancePath:instancePath+"/transactionDetails/transactionChannelKey",schemaPath:"#/$defs/TransactionDetailsInputaf30/properties/transactionChannelKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}}else {validate10.errors = [{instancePath:instancePath+"/transactionDetails",schemaPath:"#/$defs/TransactionDetailsInputaf30/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.amount !== undefined){let data3 = data.amount;const _errs10 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate10.errors = [{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){const _errs12 = errors;if(typeof data.notes !== "string"){validate10.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentOrderId !== undefined){const _errs14 = errors;if(typeof data.paymentOrderId !== "string"){validate10.errors = [{instancePath:instancePath+"/paymentOrderId",schemaPath:"#/properties/paymentOrderId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.externalId !== undefined){const _errs16 = errors;if(typeof data.externalId !== "string"){validate10.errors = [{instancePath:instancePath+"/externalId",schemaPath:"#/properties/externalId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.skipMaximumBalanceValidation !== undefined){const _errs18 = errors;if(typeof data.skipMaximumBalanceValidation !== "boolean"){validate10.errors = [{instancePath:instancePath+"/skipMaximumBalanceValidation",schemaPath:"#/properties/skipMaximumBalanceValidation/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.bookingDate !== undefined){const _errs20 = errors;if(errors === _errs20){if(errors === _errs20){if(!(typeof data.bookingDate === "string")){validate10.errors = [{instancePath:instancePath+"/bookingDate",schemaPath:"#/properties/bookingDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.valueDate !== undefined){const _errs22 = errors;if(errors === _errs22){if(errors === _errs22){if(!(typeof data.valueDate === "string")){validate10.errors = [{instancePath:instancePath+"/valueDate",schemaPath:"#/properties/valueDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.paymentDetails !== undefined){const _errs24 = errors;if(!(validate11(data.paymentDetails, {instancePath:instancePath+"/paymentDetails",parentData:data,parentDataProperty:"paymentDetails",rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.holdExternalReferenceId !== undefined){const _errs25 = errors;if(typeof data.holdExternalReferenceId !== "string"){validate10.errors = [{instancePath:instancePath+"/holdExternalReferenceId",schemaPath:"#/properties/holdExternalReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;