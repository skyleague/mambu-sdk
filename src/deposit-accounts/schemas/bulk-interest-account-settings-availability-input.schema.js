/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"BulkInterestAccountSettingsAvailabilityInput","type":"object","description":"Represents the bulk payload for storing interest availabilities to a group of accounts","properties":{"accountFilter":{"$ref":"#/$defs/BulkInterestAccountSettingsAvailabilityFilter"},"interestAvailability":{"$ref":"#/$defs/InterestAccountSettingsAvailability"}},"required":["accountFilter","interestAvailability"],"additionalProperties":true,"$defs":{"BulkInterestAccountSettingsAvailabilityFilter":{"type":"object","description":"Represents the filter to be used for selecting the accounts to which new interest availability settings will be pushed. One of the 2 fields: productId or ids should be supplied ","properties":{"ids":{"type":"array","description":"Ids of accounts that should be processed","items":{"type":"string"}},"productId":{"type":"string","description":"Product id to be used for selecting all accounts that should be processed"}},"additionalProperties":true},"InterestAccountSettingsAvailability":{"type":"object","description":"Interest Availability of a Deposit Account","properties":{"encodedKey":{"type":"string","description":"The encoded key of the Interest Availability, auto generated, unique."},"interestRateSettings":{"$ref":"#/$defs/DepositAccountInterestAvailabilitySettings"},"startDate":{"type":"string","description":"Start date of the Interest Availability.","format":"date"},"type":{"description":"Type of the interest.","enum":["INTEREST","OVERDRAFT","TECHNICAL_OVERDRAFT"]}},"required":["interestRateSettings","startDate","type"],"additionalProperties":true},"DepositAccountInterestAvailabilitySettings":{"type":"object","description":"Interest Rate Settings for Deposit Account Interest Availability","properties":{"interestRate":{"type":"number","description":"The interest rate for the deposit account"},"interestRateTiers":{"type":"array","description":"The list of interest rate tiers. An interest rate tier holds the values to define how the interest is computed","items":{"$ref":"#/$defs/DepositAccountInterestRateTier"}},"interestSpread":{"type":"number","description":"The rate based on which the interest is accrued and applied for accounts with InterestRateSource#INDEX_INTEREST_RATE"}},"additionalProperties":true},"DepositAccountInterestRateTier":{"type":"object","description":"Represents information about how interest rate is calculated.","properties":{"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"endingDay":{"type":"integer","description":"The end date for the account period. Used to determine if this interest rate tier is used or not."},"interestRate":{"type":"number","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents the filter to be used for selecting the accounts to which new interest availability settings will be pushed. One of the 2 fields: productId or ids should be supplied ","properties":{"ids":{"type":"array","description":"Ids of accounts that should be processed","items":{"type":"string"}},"productId":{"type":"string","description":"Product id to be used for selecting all accounts that should be processed"}},"additionalProperties":true};const schema13 = {"type":"object","description":"Interest Availability of a Deposit Account","properties":{"encodedKey":{"type":"string","description":"The encoded key of the Interest Availability, auto generated, unique."},"interestRateSettings":{"$ref":"#/$defs/DepositAccountInterestAvailabilitySettings"},"startDate":{"type":"string","description":"Start date of the Interest Availability.","format":"date"},"type":{"description":"Type of the interest.","enum":["INTEREST","OVERDRAFT","TECHNICAL_OVERDRAFT"]}},"required":["interestRateSettings","startDate","type"],"additionalProperties":true};const schema14 = {"type":"object","description":"Interest Rate Settings for Deposit Account Interest Availability","properties":{"interestRate":{"type":"number","description":"The interest rate for the deposit account"},"interestRateTiers":{"type":"array","description":"The list of interest rate tiers. An interest rate tier holds the values to define how the interest is computed","items":{"$ref":"#/$defs/DepositAccountInterestRateTier"}},"interestSpread":{"type":"number","description":"The rate based on which the interest is accrued and applied for accounts with InterestRateSource#INDEX_INTEREST_RATE"}},"additionalProperties":true};const schema15 = {"type":"object","description":"Represents information about how interest rate is calculated.","properties":{"encodedKey":{"type":"string","description":"The encoded key of the interest rate tier, auto generated, unique"},"endingBalance":{"type":"number","description":"The top-limit value for the account balance in order to determine if this tier is used or not"},"endingDay":{"type":"integer","description":"The end date for the account period. Used to determine if this interest rate tier is used or not."},"interestRate":{"type":"number","description":"The rate used for computing the interest for an account which has the balance less than the ending balance"}},"required":["interestRate"],"additionalProperties":true};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.interestRate !== undefined){let data0 = data.interestRate;const _errs2 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate12.errors = [{instancePath:instancePath+"/interestRate",schemaPath:"#/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateTiers !== undefined){let data1 = data.interestRateTiers;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing0;if((data2.interestRate === undefined) && (missing0 = "interestRate")){validate12.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositAccountInterestRateTier/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data2.encodedKey !== undefined){const _errs10 = errors;if(typeof data2.encodedKey !== "string"){validate12.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/encodedKey",schemaPath:"#/$defs/DepositAccountInterestRateTier/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data2.endingBalance !== undefined){let data4 = data2.endingBalance;const _errs12 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate12.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingBalance",schemaPath:"#/$defs/DepositAccountInterestRateTier/properties/endingBalance/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data2.endingDay !== undefined){let data5 = data2.endingDay;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate12.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/endingDay",schemaPath:"#/$defs/DepositAccountInterestRateTier/properties/endingDay/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}if(valid3){if(data2.interestRate !== undefined){let data6 = data2.interestRate;const _errs16 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate12.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0+"/interestRate",schemaPath:"#/$defs/DepositAccountInterestRateTier/properties/interestRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}}}}}}else {validate12.errors = [{instancePath:instancePath+"/interestRateTiers/" + i0,schemaPath:"#/$defs/DepositAccountInterestRateTier/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/interestRateTiers",schemaPath:"#/properties/interestRateTiers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.interestSpread !== undefined){let data7 = data.interestSpread;const _errs18 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate12.errors = [{instancePath:instancePath+"/interestSpread",schemaPath:"#/properties/interestSpread/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const formats0 = require("ajv-formats/dist/formats").fullFormats.date;function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.interestRateSettings === undefined) && (missing0 = "interestRateSettings")) || ((data.startDate === undefined) && (missing0 = "startDate"))) || ((data.type === undefined) && (missing0 = "type"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.encodedKey !== undefined){const _errs2 = errors;if(typeof data.encodedKey !== "string"){validate11.errors = [{instancePath:instancePath+"/encodedKey",schemaPath:"#/properties/encodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestRateSettings !== undefined){const _errs4 = errors;if(!(validate12(data.interestRateSettings, {instancePath:instancePath+"/interestRateSettings",parentData:data,parentDataProperty:"interestRateSettings",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.startDate !== undefined){let data2 = data.startDate;const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(typeof data2 === "string"){if(!(formats0.validate(data2))){validate11.errors = [{instancePath:instancePath+"/startDate",schemaPath:"#/properties/startDate/format",keyword:"format",params:{format: "date"},message:"must match format \""+"date"+"\""}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/startDate",schemaPath:"#/properties/startDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data3 = data.type;const _errs7 = errors;if(!(((data3 === "INTEREST") || (data3 === "OVERDRAFT")) || (data3 === "TECHNICAL_OVERDRAFT"))){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema13.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.accountFilter === undefined) && (missing0 = "accountFilter")) || ((data.interestAvailability === undefined) && (missing0 = "interestAvailability"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.accountFilter !== undefined){let data0 = data.accountFilter;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.ids !== undefined){let data1 = data0.ids;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data1)){var valid3 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs8 = errors;if(typeof data1[i0] !== "string"){validate10.errors = [{instancePath:instancePath+"/accountFilter/ids/" + i0,schemaPath:"#/$defs/BulkInterestAccountSettingsAvailabilityFilter/properties/ids/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs8 === errors;if(!valid3){break;}}}else {validate10.errors = [{instancePath:instancePath+"/accountFilter/ids",schemaPath:"#/$defs/BulkInterestAccountSettingsAvailabilityFilter/properties/ids/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.productId !== undefined){const _errs10 = errors;if(typeof data0.productId !== "string"){validate10.errors = [{instancePath:instancePath+"/accountFilter/productId",schemaPath:"#/$defs/BulkInterestAccountSettingsAvailabilityFilter/properties/productId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}else {validate10.errors = [{instancePath:instancePath+"/accountFilter",schemaPath:"#/$defs/BulkInterestAccountSettingsAvailabilityFilter/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.interestAvailability !== undefined){const _errs12 = errors;if(!(validate11(data.interestAvailability, {instancePath:instancePath+"/interestAvailability",parentData:data,parentDataProperty:"interestAvailability",rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;