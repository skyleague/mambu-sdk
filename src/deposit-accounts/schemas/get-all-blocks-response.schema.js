/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"GetAllBlocksResponse","type":"array","items":{"$ref":"#/$defs/BlockFund"},"$defs":{"BlockFund":{"type":"object","description":"Represents the block fund amount that can be later seized on the account","properties":{"accountKey":{"type":"string","description":"The key of the account which block fund belongs to"},"amount":{"type":"number","description":"The amount to be blocked"},"creationDate":{"type":"string","description":"The date at which the block fund was created","format":"date-time"},"externalReferenceId":{"type":"string","description":"The external reference ID to be used to reference the block fund in subsequent requests"},"lastModifiedDate":{"type":"string","description":"The date at which the block fund was created","format":"date-time"},"notes":{"type":"string","description":"Notes about this block fund"},"seizedAmount":{"type":"number","description":"The amount that has been seized"},"state":{"description":"The state of the block fund","enum":["PENDING","SEIZED","REMOVED","PARTIALLY_SEIZED"]}},"required":["amount","externalReferenceId"],"additionalProperties":true}}};const schema12 = {"type":"object","description":"Represents the block fund amount that can be later seized on the account","properties":{"accountKey":{"type":"string","description":"The key of the account which block fund belongs to"},"amount":{"type":"number","description":"The amount to be blocked"},"creationDate":{"type":"string","description":"The date at which the block fund was created","format":"date-time"},"externalReferenceId":{"type":"string","description":"The external reference ID to be used to reference the block fund in subsequent requests"},"lastModifiedDate":{"type":"string","description":"The date at which the block fund was created","format":"date-time"},"notes":{"type":"string","description":"Notes about this block fund"},"seizedAmount":{"type":"number","description":"The amount that has been seized"},"state":{"description":"The state of the block fund","enum":["PENDING","SEIZED","REMOVED","PARTIALLY_SEIZED"]}},"required":["amount","externalReferenceId"],"additionalProperties":true};const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if(((data0.amount === undefined) && (missing0 = "amount")) || ((data0.externalReferenceId === undefined) && (missing0 = "externalReferenceId"))){validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/BlockFund/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data0.accountKey !== undefined){const _errs5 = errors;if(typeof data0.accountKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/accountKey",schemaPath:"#/$defs/BlockFund/properties/accountKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs5 === errors;}else {var valid2 = true;}if(valid2){if(data0.amount !== undefined){let data2 = data0.amount;const _errs7 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/amount",schemaPath:"#/$defs/BlockFund/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data0.creationDate !== undefined){let data3 = data0.creationDate;const _errs9 = errors;if(errors === _errs9){if(errors === _errs9){if(typeof data3 === "string"){if(!(formats0.validate(data3))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/creationDate",schemaPath:"#/$defs/BlockFund/properties/creationDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/creationDate",schemaPath:"#/$defs/BlockFund/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data0.externalReferenceId !== undefined){const _errs11 = errors;if(typeof data0.externalReferenceId !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/externalReferenceId",schemaPath:"#/$defs/BlockFund/properties/externalReferenceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data0.lastModifiedDate !== undefined){let data5 = data0.lastModifiedDate;const _errs13 = errors;if(errors === _errs13){if(errors === _errs13){if(typeof data5 === "string"){if(!(formats0.validate(data5))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/BlockFund/properties/lastModifiedDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/BlockFund/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data0.notes !== undefined){const _errs15 = errors;if(typeof data0.notes !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/notes",schemaPath:"#/$defs/BlockFund/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}if(valid2){if(data0.seizedAmount !== undefined){let data7 = data0.seizedAmount;const _errs17 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/seizedAmount",schemaPath:"#/$defs/BlockFund/properties/seizedAmount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs17 === errors;}else {var valid2 = true;}if(valid2){if(data0.state !== undefined){let data8 = data0.state;const _errs19 = errors;if(!((((data8 === "PENDING") || (data8 === "SEIZED")) || (data8 === "REMOVED")) || (data8 === "PARTIALLY_SEIZED"))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/state",schemaPath:"#/$defs/BlockFund/properties/state/enum",keyword:"enum",params:{allowedValues: schema12.properties.state.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs19 === errors;}else {var valid2 = true;}}}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/BlockFund/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;