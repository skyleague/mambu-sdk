/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import {createRequire} from 'module';const require = createRequire(import.meta.url);"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"GetWithholdingTaxHistoryResponse","type":"array","items":{"$ref":"#/$defs/AccountTax"},"$defs":{"AccountTax":{"type":"object","description":"The account tax corresponding for deposit account","properties":{"creationDate":{"type":"string","description":"The date when the rate availability was created.","format":"date-time"},"fromDate":{"type":"string","description":"The date when the tax source starts to be used by the account.","format":"date-time"},"lastModifiedDate":{"type":"string","description":"The last date when the rate availability was modified.","format":"date-time"},"rateSourceEncodedKey":{"type":"string"},"rateSourceId":{"type":"string","description":"The id of the source"},"rateSourceName":{"type":"string","description":"The name of the source"},"savingsAccountEncodedKey":{"type":"string"},"toDate":{"type":"string","description":"The ending date of the tax source used by the account","format":"date-time"}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"The account tax corresponding for deposit account","properties":{"creationDate":{"type":"string","description":"The date when the rate availability was created.","format":"date-time"},"fromDate":{"type":"string","description":"The date when the tax source starts to be used by the account.","format":"date-time"},"lastModifiedDate":{"type":"string","description":"The last date when the rate availability was modified.","format":"date-time"},"rateSourceEncodedKey":{"type":"string"},"rateSourceId":{"type":"string","description":"The id of the source"},"rateSourceName":{"type":"string","description":"The name of the source"},"savingsAccountEncodedKey":{"type":"string"},"toDate":{"type":"string","description":"The ending date of the tax source used by the account","format":"date-time"}},"additionalProperties":true};const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.creationDate !== undefined){let data1 = data0.creationDate;const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(typeof data1 === "string"){if(!(formats0.validate(data1))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/creationDate",schemaPath:"#/$defs/AccountTax/properties/creationDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/creationDate",schemaPath:"#/$defs/AccountTax/properties/creationDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs5 === errors;}else {var valid2 = true;}if(valid2){if(data0.fromDate !== undefined){let data2 = data0.fromDate;const _errs7 = errors;if(errors === _errs7){if(errors === _errs7){if(typeof data2 === "string"){if(!(formats0.validate(data2))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/fromDate",schemaPath:"#/$defs/AccountTax/properties/fromDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/fromDate",schemaPath:"#/$defs/AccountTax/properties/fromDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data0.lastModifiedDate !== undefined){let data3 = data0.lastModifiedDate;const _errs9 = errors;if(errors === _errs9){if(errors === _errs9){if(typeof data3 === "string"){if(!(formats0.validate(data3))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/AccountTax/properties/lastModifiedDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/lastModifiedDate",schemaPath:"#/$defs/AccountTax/properties/lastModifiedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data0.rateSourceEncodedKey !== undefined){const _errs11 = errors;if(typeof data0.rateSourceEncodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/rateSourceEncodedKey",schemaPath:"#/$defs/AccountTax/properties/rateSourceEncodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data0.rateSourceId !== undefined){const _errs13 = errors;if(typeof data0.rateSourceId !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/rateSourceId",schemaPath:"#/$defs/AccountTax/properties/rateSourceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data0.rateSourceName !== undefined){const _errs15 = errors;if(typeof data0.rateSourceName !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/rateSourceName",schemaPath:"#/$defs/AccountTax/properties/rateSourceName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}if(valid2){if(data0.savingsAccountEncodedKey !== undefined){const _errs17 = errors;if(typeof data0.savingsAccountEncodedKey !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/savingsAccountEncodedKey",schemaPath:"#/$defs/AccountTax/properties/savingsAccountEncodedKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs17 === errors;}else {var valid2 = true;}if(valid2){if(data0.toDate !== undefined){let data8 = data0.toDate;const _errs19 = errors;if(errors === _errs19){if(errors === _errs19){if(typeof data8 === "string"){if(!(formats0.validate(data8))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/toDate",schemaPath:"#/$defs/AccountTax/properties/toDate/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/toDate",schemaPath:"#/$defs/AccountTax/properties/toDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs19 === errors;}else {var valid2 = true;}}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/AccountTax/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;