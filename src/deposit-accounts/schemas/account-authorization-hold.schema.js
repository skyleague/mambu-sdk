/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
const validate=validate10;var stdin_default=validate10;const schema11={"$schema":"http://json-schema.org/draft-07/schema#","title":"AccountAuthorizationHold","type":"object","description":"The account authorization hold corresponding to a deposit account","properties":{"amount":{"type":"number","title":"amount","description":"The amount of money to be held as a result of the authorization hold request."},"advice":{"type":"boolean","title":"advice","description":"Whether the given request should be accepted without balance validations."},"cardAcceptor":{"title":"cardAcceptor","$ref":"#/$defs/CardAcceptoraf30"},"source":{"title":"source","description":"Indicates the source of the authorization hold.","enum":["CARD","ACCOUNT"]},"creationDate":{"type":"string","title":"creationDate","description":"The organization time when the authorization hold was created","format":"date-time"},"creditDebitIndicator":{"title":"creditDebitIndicator","description":"Indicates whether the authorization hold amount is credited or debited. If not provided, the default value is DBIT.","enum":["DBIT","CRDT"]},"cardToken":{"type":"string","title":"cardToken","description":"The reference token of the card."},"accountKey":{"type":"string","title":"accountKey","description":"The key of the account linked with the authorization hold."},"externalReferenceId":{"type":"string","title":"externalReferenceId","description":"The external reference ID to be used to reference the account hold in subsequent requests."},"originalAmount":{"type":"number","title":"originalAmount","description":"The original amount of money to be held as a result of the authorization hold request."},"exchangeRate":{"type":"number","title":"exchangeRate","description":"The exchange rate for the original currency."},"userTransactionTime":{"type":"string","title":"userTransactionTime","description":"The formatted time at which the user made this authorization hold."},"originalCurrency":{"type":"string","title":"originalCurrency","description":"The original currency in which the hold was created."},"currencyCode":{"type":"string","title":"currencyCode","description":"The ISO currency code in which the hold was created. The amounts are stored in the base currency, but the user could have enter it in a foreign currency."},"status":{"title":"status","description":"The authorization hold status.","enum":["PENDING","REVERSED","SETTLED","EXPIRED"]}},"required":["amount","externalReferenceId"],"additionalProperties":true,"$defs":{"CardAcceptoraf30":{"type":"object","title":"CardAcceptoraf30","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"zip":{"type":"string","title":"zip","description":"The ZIP code of the location in which the card acceptor has the business."},"country":{"type":"string","title":"country","description":"The country in which the card acceptor has the business."},"city":{"type":"string","title":"city","description":"The city in which the card acceptor has the business."},"street":{"type":"string","title":"street","description":"The street in which the card acceptor has the business."},"name":{"type":"string","title":"name","description":"The name of the card acceptor."},"state":{"type":"string","title":"state","description":"The state in which the card acceptor has the business."},"mcc":{"type":"integer","title":"mcc","description":"The Merchant Category Code of the card acceptor."}},"additionalProperties":true}}};const schema12={"type":"object","title":"CardAcceptoraf30","description":"The details of the card acceptor (merchant) in a transaction hold.","properties":{"zip":{"type":"string","title":"zip","description":"The ZIP code of the location in which the card acceptor has the business."},"country":{"type":"string","title":"country","description":"The country in which the card acceptor has the business."},"city":{"type":"string","title":"city","description":"The city in which the card acceptor has the business."},"street":{"type":"string","title":"street","description":"The street in which the card acceptor has the business."},"name":{"type":"string","title":"name","description":"The name of the card acceptor."},"state":{"type":"string","title":"state","description":"The state in which the card acceptor has the business."},"mcc":{"type":"integer","title":"mcc","description":"The Merchant Category Code of the card acceptor."}},"additionalProperties":true};function validate10(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null;let errors=0;if(errors===0){if(data&&typeof data=="object"&&!Array.isArray(data)){let missing0;if(data.amount===void 0&&(missing0="amount")||data.externalReferenceId===void 0&&(missing0="externalReferenceId")){validate10.errors=[{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty:missing0},message:"must have required property '"+missing0+"'"}];return false}else{if(data.amount!==void 0){let data0=data.amount;const _errs2=errors;if(!(typeof data0=="number"&&isFinite(data0))){validate10.errors=[{instancePath:instancePath+"/amount",schemaPath:"#/properties/amount/type",keyword:"type",params:{type:"number"},message:"must be number"}];return false}var valid0=_errs2===errors}else{var valid0=true}if(valid0){if(data.advice!==void 0){const _errs4=errors;if(typeof data.advice!=="boolean"){validate10.errors=[{instancePath:instancePath+"/advice",schemaPath:"#/properties/advice/type",keyword:"type",params:{type:"boolean"},message:"must be boolean"}];return false}var valid0=_errs4===errors}else{var valid0=true}if(valid0){if(data.cardAcceptor!==void 0){let data2=data.cardAcceptor;const _errs6=errors;const _errs7=errors;if(errors===_errs7){if(data2&&typeof data2=="object"&&!Array.isArray(data2)){if(data2.zip!==void 0){const _errs10=errors;if(typeof data2.zip!=="string"){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/zip",schemaPath:"#/$defs/CardAcceptoraf30/properties/zip/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid2=_errs10===errors}else{var valid2=true}if(valid2){if(data2.country!==void 0){const _errs12=errors;if(typeof data2.country!=="string"){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/country",schemaPath:"#/$defs/CardAcceptoraf30/properties/country/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid2=_errs12===errors}else{var valid2=true}if(valid2){if(data2.city!==void 0){const _errs14=errors;if(typeof data2.city!=="string"){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/city",schemaPath:"#/$defs/CardAcceptoraf30/properties/city/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid2=_errs14===errors}else{var valid2=true}if(valid2){if(data2.street!==void 0){const _errs16=errors;if(typeof data2.street!=="string"){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/street",schemaPath:"#/$defs/CardAcceptoraf30/properties/street/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid2=_errs16===errors}else{var valid2=true}if(valid2){if(data2.name!==void 0){const _errs18=errors;if(typeof data2.name!=="string"){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/name",schemaPath:"#/$defs/CardAcceptoraf30/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid2=_errs18===errors}else{var valid2=true}if(valid2){if(data2.state!==void 0){const _errs20=errors;if(typeof data2.state!=="string"){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/state",schemaPath:"#/$defs/CardAcceptoraf30/properties/state/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid2=_errs20===errors}else{var valid2=true}if(valid2){if(data2.mcc!==void 0){let data9=data2.mcc;const _errs22=errors;if(!(typeof data9=="number"&&(!(data9%1)&&!isNaN(data9))&&isFinite(data9))){validate10.errors=[{instancePath:instancePath+"/cardAcceptor/mcc",schemaPath:"#/$defs/CardAcceptoraf30/properties/mcc/type",keyword:"type",params:{type:"integer"},message:"must be integer"}];return false}var valid2=_errs22===errors}else{var valid2=true}}}}}}}}else{validate10.errors=[{instancePath:instancePath+"/cardAcceptor",schemaPath:"#/$defs/CardAcceptoraf30/type",keyword:"type",params:{type:"object"},message:"must be object"}];return false}}var valid0=_errs6===errors}else{var valid0=true}if(valid0){if(data.source!==void 0){let data10=data.source;const _errs24=errors;if(!(data10==="CARD"||data10==="ACCOUNT")){validate10.errors=[{instancePath:instancePath+"/source",schemaPath:"#/properties/source/enum",keyword:"enum",params:{allowedValues:schema11.properties.source.enum},message:"must be equal to one of the allowed values"}];return false}var valid0=_errs24===errors}else{var valid0=true}if(valid0){if(data.creationDate!==void 0){const _errs25=errors;if(errors===_errs25){if(errors===_errs25){if(!(typeof data.creationDate==="string")){validate10.errors=[{instancePath:instancePath+"/creationDate",schemaPath:"#/properties/creationDate/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}}}var valid0=_errs25===errors}else{var valid0=true}if(valid0){if(data.creditDebitIndicator!==void 0){let data12=data.creditDebitIndicator;const _errs27=errors;if(!(data12==="DBIT"||data12==="CRDT")){validate10.errors=[{instancePath:instancePath+"/creditDebitIndicator",schemaPath:"#/properties/creditDebitIndicator/enum",keyword:"enum",params:{allowedValues:schema11.properties.creditDebitIndicator.enum},message:"must be equal to one of the allowed values"}];return false}var valid0=_errs27===errors}else{var valid0=true}if(valid0){if(data.cardToken!==void 0){const _errs28=errors;if(typeof data.cardToken!=="string"){validate10.errors=[{instancePath:instancePath+"/cardToken",schemaPath:"#/properties/cardToken/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid0=_errs28===errors}else{var valid0=true}if(valid0){if(data.accountKey!==void 0){const _errs30=errors;if(typeof data.accountKey!=="string"){validate10.errors=[{instancePath:instancePath+"/accountKey",schemaPath:"#/properties/accountKey/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid0=_errs30===errors}else{var valid0=true}if(valid0){if(data.externalReferenceId!==void 0){const _errs32=errors;if(typeof data.externalReferenceId!=="string"){validate10.errors=[{instancePath:instancePath+"/externalReferenceId",schemaPath:"#/properties/externalReferenceId/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid0=_errs32===errors}else{var valid0=true}if(valid0){if(data.originalAmount!==void 0){let data16=data.originalAmount;const _errs34=errors;if(!(typeof data16=="number"&&isFinite(data16))){validate10.errors=[{instancePath:instancePath+"/originalAmount",schemaPath:"#/properties/originalAmount/type",keyword:"type",params:{type:"number"},message:"must be number"}];return false}var valid0=_errs34===errors}else{var valid0=true}if(valid0){if(data.exchangeRate!==void 0){let data17=data.exchangeRate;const _errs36=errors;if(!(typeof data17=="number"&&isFinite(data17))){validate10.errors=[{instancePath:instancePath+"/exchangeRate",schemaPath:"#/properties/exchangeRate/type",keyword:"type",params:{type:"number"},message:"must be number"}];return false}var valid0=_errs36===errors}else{var valid0=true}if(valid0){if(data.userTransactionTime!==void 0){const _errs38=errors;if(typeof data.userTransactionTime!=="string"){validate10.errors=[{instancePath:instancePath+"/userTransactionTime",schemaPath:"#/properties/userTransactionTime/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid0=_errs38===errors}else{var valid0=true}if(valid0){if(data.originalCurrency!==void 0){const _errs40=errors;if(typeof data.originalCurrency!=="string"){validate10.errors=[{instancePath:instancePath+"/originalCurrency",schemaPath:"#/properties/originalCurrency/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid0=_errs40===errors}else{var valid0=true}if(valid0){if(data.currencyCode!==void 0){const _errs42=errors;if(typeof data.currencyCode!=="string"){validate10.errors=[{instancePath:instancePath+"/currencyCode",schemaPath:"#/properties/currencyCode/type",keyword:"type",params:{type:"string"},message:"must be string"}];return false}var valid0=_errs42===errors}else{var valid0=true}if(valid0){if(data.status!==void 0){let data21=data.status;const _errs44=errors;if(!(data21==="PENDING"||data21==="REVERSED"||data21==="SETTLED"||data21==="EXPIRED")){validate10.errors=[{instancePath:instancePath+"/status",schemaPath:"#/properties/status/enum",keyword:"enum",params:{allowedValues:schema11.properties.status.enum},message:"must be equal to one of the allowed values"}];return false}var valid0=_errs44===errors}else{var valid0=true}}}}}}}}}}}}}}}}}else{validate10.errors=[{instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"}];return false}}validate10.errors=vErrors;return errors===0};validate.schema=schema11;export{stdin_default as default,validate};
