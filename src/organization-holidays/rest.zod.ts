/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'

export const RestError = z.object({
    errorCode: z.number().int().optional(),
    errorReason: z.string().optional(),
    errorSource: z.string().optional(),
})

export type RestError = z.infer<typeof RestError>

export const Holiday = z
    .object({
        creationDate: z.string().datetime({ offset: true }).describe('The date when the holiday was created.').optional(),
        date: z.string().date().describe('The date the holiday takes place.').optional(),
        encodedKey: z.string().describe('The encoded key of the entity, generated, globally unique').optional(),
        id: z.number().int().describe('The ID of the holiday.').optional(),
        isAnnuallyRecurring: z.boolean().describe('`TRUE` if a holiday is annually recurring, `FALSE` otherwise.').optional(),
        name: z.string().describe('The name of the holiday.').optional(),
    })
    .describe('Represents the holiday.')

export type Holiday = z.infer<typeof Holiday>

export const ErrorResponse = z.object({
    errors: RestError.array().optional(),
})

export type ErrorResponse = z.infer<typeof ErrorResponse>

export const Holidays = z
    .object({
        holidays: Holiday.array().describe('The general holidays of the organization.').optional(),
        nonWorkingDays: z
            .enum(['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'])
            .array()
            .describe('The non-working days of the organization.')
            .optional(),
    })
    .describe('Represents the holidays of the organization.')

export type Holidays = z.infer<typeof Holidays>
